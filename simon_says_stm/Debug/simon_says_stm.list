
simon_says_stm.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002720  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  080027e0  080027e0  000127e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002820  08002820  00020028  2**0
                  CONTENTS
  4 .ARM          00000000  08002820  08002820  00020028  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002820  08002820  00020028  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002820  08002820  00012820  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002824  08002824  00012824  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000028  20000000  08002828  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000ec  20000028  08002850  00020028  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000114  08002850  00020114  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020028  2**0
                  CONTENTS, READONLY
 12 .debug_info   000064ef  00000000  00000000  00020050  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000163b  00000000  00000000  0002653f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000678  00000000  00000000  00027b80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000005c0  00000000  00000000  000281f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00012797  00000000  00000000  000287b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000078ce  00000000  00000000  0003af4f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0007434c  00000000  00000000  0004281d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000b6b69  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000015bc  00000000  00000000  000b6bbc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000028 	.word	0x20000028
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080027c8 	.word	0x080027c8

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	2000002c 	.word	0x2000002c
 8000104:	080027c8 	.word	0x080027c8

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	; 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f806 	bl	800021c <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			; (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__aeabi_idiv0>:
 800021c:	4770      	bx	lr
 800021e:	46c0      	nop			; (mov r8, r8)

08000220 <setPinsAsInputs>:
/**
 * @brief			Function which sets the four GPIO pins as inputs
 *
 * @returns			None
 */
void setPinsAsInputs() {
 8000220:	b580      	push	{r7, lr}
 8000222:	b086      	sub	sp, #24
 8000224:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 8000226:	1d3b      	adds	r3, r7, #4
 8000228:	0018      	movs	r0, r3
 800022a:	2314      	movs	r3, #20
 800022c:	001a      	movs	r2, r3
 800022e:	2100      	movs	r1, #0
 8000230:	f002 fac2 	bl	80027b8 <memset>

	/*Configure GPIO pin : LED_1_BLUE_Pin */
	GPIO_InitStruct.Pin = LED_1_BLUE_Pin;
 8000234:	1d3b      	adds	r3, r7, #4
 8000236:	2280      	movs	r2, #128	; 0x80
 8000238:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800023a:	1d3b      	adds	r3, r7, #4
 800023c:	2200      	movs	r2, #0
 800023e:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000240:	1d3b      	adds	r3, r7, #4
 8000242:	2201      	movs	r2, #1
 8000244:	609a      	str	r2, [r3, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000246:	1d3b      	adds	r3, r7, #4
 8000248:	2200      	movs	r2, #0
 800024a:	60da      	str	r2, [r3, #12]
	HAL_GPIO_Init(LED_1_BLUE_GPIO_Port, &GPIO_InitStruct);
 800024c:	1d3b      	adds	r3, r7, #4
 800024e:	4a0e      	ldr	r2, [pc, #56]	; (8000288 <setPinsAsInputs+0x68>)
 8000250:	0019      	movs	r1, r3
 8000252:	0010      	movs	r0, r2
 8000254:	f001 fcb4 	bl	8001bc0 <HAL_GPIO_Init>

	/*Configure GPIO pins : LED_2_YELLOW_Pin LED_3_GREEN_Pin LED_4_RED_Pin */
	GPIO_InitStruct.Pin = LED_2_YELLOW_Pin | LED_3_GREEN_Pin | LED_4_RED_Pin;
 8000258:	1d3b      	adds	r3, r7, #4
 800025a:	4a0c      	ldr	r2, [pc, #48]	; (800028c <setPinsAsInputs+0x6c>)
 800025c:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800025e:	1d3b      	adds	r3, r7, #4
 8000260:	2200      	movs	r2, #0
 8000262:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000264:	1d3b      	adds	r3, r7, #4
 8000266:	2201      	movs	r2, #1
 8000268:	609a      	str	r2, [r3, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800026a:	1d3b      	adds	r3, r7, #4
 800026c:	2200      	movs	r2, #0
 800026e:	60da      	str	r2, [r3, #12]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000270:	1d3a      	adds	r2, r7, #4
 8000272:	23a0      	movs	r3, #160	; 0xa0
 8000274:	05db      	lsls	r3, r3, #23
 8000276:	0011      	movs	r1, r2
 8000278:	0018      	movs	r0, r3
 800027a:	f001 fca1 	bl	8001bc0 <HAL_GPIO_Init>

}
 800027e:	46c0      	nop			; (mov r8, r8)
 8000280:	46bd      	mov	sp, r7
 8000282:	b006      	add	sp, #24
 8000284:	bd80      	pop	{r7, pc}
 8000286:	46c0      	nop			; (mov r8, r8)
 8000288:	50000400 	.word	0x50000400
 800028c:	00001801 	.word	0x00001801

08000290 <setPinsAsOutputs>:
/**
 * @brief			Function which sets the four GPIO pins as outputs
 *
 * @returns			None
 */
void setPinsAsOutputs() {
 8000290:	b580      	push	{r7, lr}
 8000292:	b086      	sub	sp, #24
 8000294:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 8000296:	1d3b      	adds	r3, r7, #4
 8000298:	0018      	movs	r0, r3
 800029a:	2314      	movs	r3, #20
 800029c:	001a      	movs	r2, r3
 800029e:	2100      	movs	r1, #0
 80002a0:	f002 fa8a 	bl	80027b8 <memset>

	/*Configure GPIO pin : LED_1_BLUE_Pin */
	GPIO_InitStruct.Pin = LED_1_BLUE_Pin;
 80002a4:	1d3b      	adds	r3, r7, #4
 80002a6:	2280      	movs	r2, #128	; 0x80
 80002a8:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80002aa:	1d3b      	adds	r3, r7, #4
 80002ac:	2201      	movs	r2, #1
 80002ae:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80002b0:	1d3b      	adds	r3, r7, #4
 80002b2:	2202      	movs	r2, #2
 80002b4:	609a      	str	r2, [r3, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80002b6:	1d3b      	adds	r3, r7, #4
 80002b8:	2200      	movs	r2, #0
 80002ba:	60da      	str	r2, [r3, #12]
	HAL_GPIO_Init(LED_1_BLUE_GPIO_Port, &GPIO_InitStruct);
 80002bc:	1d3b      	adds	r3, r7, #4
 80002be:	4a0e      	ldr	r2, [pc, #56]	; (80002f8 <setPinsAsOutputs+0x68>)
 80002c0:	0019      	movs	r1, r3
 80002c2:	0010      	movs	r0, r2
 80002c4:	f001 fc7c 	bl	8001bc0 <HAL_GPIO_Init>

	/*Configure GPIO pins : LED_2_YELLOW_Pin LED_3_GREEN_Pin LED_4_RED_Pin */
	GPIO_InitStruct.Pin = LED_2_YELLOW_Pin | LED_3_GREEN_Pin | LED_4_RED_Pin;
 80002c8:	1d3b      	adds	r3, r7, #4
 80002ca:	4a0c      	ldr	r2, [pc, #48]	; (80002fc <setPinsAsOutputs+0x6c>)
 80002cc:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80002ce:	1d3b      	adds	r3, r7, #4
 80002d0:	2201      	movs	r2, #1
 80002d2:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80002d4:	1d3b      	adds	r3, r7, #4
 80002d6:	2202      	movs	r2, #2
 80002d8:	609a      	str	r2, [r3, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80002da:	1d3b      	adds	r3, r7, #4
 80002dc:	2200      	movs	r2, #0
 80002de:	60da      	str	r2, [r3, #12]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80002e0:	1d3a      	adds	r2, r7, #4
 80002e2:	23a0      	movs	r3, #160	; 0xa0
 80002e4:	05db      	lsls	r3, r3, #23
 80002e6:	0011      	movs	r1, r2
 80002e8:	0018      	movs	r0, r3
 80002ea:	f001 fc69 	bl	8001bc0 <HAL_GPIO_Init>
}
 80002ee:	46c0      	nop			; (mov r8, r8)
 80002f0:	46bd      	mov	sp, r7
 80002f2:	b006      	add	sp, #24
 80002f4:	bd80      	pop	{r7, pc}
 80002f6:	46c0      	nop			; (mov r8, r8)
 80002f8:	50000400 	.word	0x50000400
 80002fc:	00001801 	.word	0x00001801

08000300 <showStartAnimation>:
 * @params			uint16_t * pinList: Array of pins which are used for GPIO
 *
 * @returns			None
 */
void showStartAnimation(GPIO_TypeDef * portList[], uint16_t  * pinList)
{
 8000300:	b580      	push	{r7, lr}
 8000302:	b084      	sub	sp, #16
 8000304:	af00      	add	r7, sp, #0
 8000306:	6078      	str	r0, [r7, #4]
 8000308:	6039      	str	r1, [r7, #0]
	int i;
	int j;

	setPinsAsOutputs();
 800030a:	f7ff ffc1 	bl	8000290 <setPinsAsOutputs>

	for (j = 0; j < 2; j++) {
 800030e:	2300      	movs	r3, #0
 8000310:	60bb      	str	r3, [r7, #8]
 8000312:	e036      	b.n	8000382 <showStartAnimation+0x82>
		for (i = 0; i < 4; i++) {
 8000314:	2300      	movs	r3, #0
 8000316:	60fb      	str	r3, [r7, #12]
 8000318:	e013      	b.n	8000342 <showStartAnimation+0x42>
			HAL_GPIO_WritePin(portList[i], pinList[i], GPIO_PIN_RESET);
 800031a:	68fb      	ldr	r3, [r7, #12]
 800031c:	009b      	lsls	r3, r3, #2
 800031e:	687a      	ldr	r2, [r7, #4]
 8000320:	18d3      	adds	r3, r2, r3
 8000322:	6818      	ldr	r0, [r3, #0]
 8000324:	68fb      	ldr	r3, [r7, #12]
 8000326:	005b      	lsls	r3, r3, #1
 8000328:	683a      	ldr	r2, [r7, #0]
 800032a:	18d3      	adds	r3, r2, r3
 800032c:	881b      	ldrh	r3, [r3, #0]
 800032e:	2200      	movs	r2, #0
 8000330:	0019      	movs	r1, r3
 8000332:	f001 fdcc 	bl	8001ece <HAL_GPIO_WritePin>
			HAL_Delay(100);
 8000336:	2064      	movs	r0, #100	; 0x64
 8000338:	f000 fdc6 	bl	8000ec8 <HAL_Delay>
		for (i = 0; i < 4; i++) {
 800033c:	68fb      	ldr	r3, [r7, #12]
 800033e:	3301      	adds	r3, #1
 8000340:	60fb      	str	r3, [r7, #12]
 8000342:	68fb      	ldr	r3, [r7, #12]
 8000344:	2b03      	cmp	r3, #3
 8000346:	dde8      	ble.n	800031a <showStartAnimation+0x1a>
		}
		for (i = 0; i < 4; i++) {
 8000348:	2300      	movs	r3, #0
 800034a:	60fb      	str	r3, [r7, #12]
 800034c:	e013      	b.n	8000376 <showStartAnimation+0x76>
			HAL_GPIO_WritePin(portList[i], pinList[i], GPIO_PIN_SET);
 800034e:	68fb      	ldr	r3, [r7, #12]
 8000350:	009b      	lsls	r3, r3, #2
 8000352:	687a      	ldr	r2, [r7, #4]
 8000354:	18d3      	adds	r3, r2, r3
 8000356:	6818      	ldr	r0, [r3, #0]
 8000358:	68fb      	ldr	r3, [r7, #12]
 800035a:	005b      	lsls	r3, r3, #1
 800035c:	683a      	ldr	r2, [r7, #0]
 800035e:	18d3      	adds	r3, r2, r3
 8000360:	881b      	ldrh	r3, [r3, #0]
 8000362:	2201      	movs	r2, #1
 8000364:	0019      	movs	r1, r3
 8000366:	f001 fdb2 	bl	8001ece <HAL_GPIO_WritePin>
			HAL_Delay(100);
 800036a:	2064      	movs	r0, #100	; 0x64
 800036c:	f000 fdac 	bl	8000ec8 <HAL_Delay>
		for (i = 0; i < 4; i++) {
 8000370:	68fb      	ldr	r3, [r7, #12]
 8000372:	3301      	adds	r3, #1
 8000374:	60fb      	str	r3, [r7, #12]
 8000376:	68fb      	ldr	r3, [r7, #12]
 8000378:	2b03      	cmp	r3, #3
 800037a:	dde8      	ble.n	800034e <showStartAnimation+0x4e>
	for (j = 0; j < 2; j++) {
 800037c:	68bb      	ldr	r3, [r7, #8]
 800037e:	3301      	adds	r3, #1
 8000380:	60bb      	str	r3, [r7, #8]
 8000382:	68bb      	ldr	r3, [r7, #8]
 8000384:	2b01      	cmp	r3, #1
 8000386:	ddc5      	ble.n	8000314 <showStartAnimation+0x14>
		}
	}
	HAL_Delay(1000);
 8000388:	23fa      	movs	r3, #250	; 0xfa
 800038a:	009b      	lsls	r3, r3, #2
 800038c:	0018      	movs	r0, r3
 800038e:	f000 fd9b 	bl	8000ec8 <HAL_Delay>
}
 8000392:	46c0      	nop			; (mov r8, r8)
 8000394:	46bd      	mov	sp, r7
 8000396:	b004      	add	sp, #16
 8000398:	bd80      	pop	{r7, pc}

0800039a <showSequence>:
 *
 * @params			uint16_t * pinList: Array of pins which are used for GPIO
 *
 * @returns			None
 */
void showSequence(uint8_t *_s, uint8_t _n, ADC_HandleTypeDef *hadc, uint8_t * delayTimes, GPIO_TypeDef * portList[], uint16_t  * pinList) {
 800039a:	b590      	push	{r4, r7, lr}
 800039c:	b087      	sub	sp, #28
 800039e:	af00      	add	r7, sp, #0
 80003a0:	60f8      	str	r0, [r7, #12]
 80003a2:	607a      	str	r2, [r7, #4]
 80003a4:	603b      	str	r3, [r7, #0]
 80003a6:	200b      	movs	r0, #11
 80003a8:	183b      	adds	r3, r7, r0
 80003aa:	1c0a      	adds	r2, r1, #0
 80003ac:	701a      	strb	r2, [r3, #0]
	int i;
	_s[_n] = calculateNewRandom(hadc);
 80003ae:	183b      	adds	r3, r7, r0
 80003b0:	781b      	ldrb	r3, [r3, #0]
 80003b2:	68fa      	ldr	r2, [r7, #12]
 80003b4:	18d4      	adds	r4, r2, r3
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	0018      	movs	r0, r3
 80003ba:	f000 f861 	bl	8000480 <calculateNewRandom>
 80003be:	0003      	movs	r3, r0
 80003c0:	7023      	strb	r3, [r4, #0]
	setPinsAsOutputs();
 80003c2:	f7ff ff65 	bl	8000290 <setPinsAsOutputs>
	for (i = 0; i <= _n; i++) {
 80003c6:	2300      	movs	r3, #0
 80003c8:	617b      	str	r3, [r7, #20]
 80003ca:	e04d      	b.n	8000468 <showSequence+0xce>
		HAL_GPIO_WritePin(portList[_s[i]], pinList[_s[i]], GPIO_PIN_RESET);
 80003cc:	697b      	ldr	r3, [r7, #20]
 80003ce:	68fa      	ldr	r2, [r7, #12]
 80003d0:	18d3      	adds	r3, r2, r3
 80003d2:	781b      	ldrb	r3, [r3, #0]
 80003d4:	009b      	lsls	r3, r3, #2
 80003d6:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80003d8:	18d3      	adds	r3, r2, r3
 80003da:	6818      	ldr	r0, [r3, #0]
 80003dc:	697b      	ldr	r3, [r7, #20]
 80003de:	68fa      	ldr	r2, [r7, #12]
 80003e0:	18d3      	adds	r3, r2, r3
 80003e2:	781b      	ldrb	r3, [r3, #0]
 80003e4:	005b      	lsls	r3, r3, #1
 80003e6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80003e8:	18d3      	adds	r3, r2, r3
 80003ea:	881b      	ldrh	r3, [r3, #0]
 80003ec:	2200      	movs	r2, #0
 80003ee:	0019      	movs	r1, r3
 80003f0:	f001 fd6d 	bl	8001ece <HAL_GPIO_WritePin>
		HAL_Delay(delayTimes[(_n / 50) & 3]);
 80003f4:	240b      	movs	r4, #11
 80003f6:	193b      	adds	r3, r7, r4
 80003f8:	781b      	ldrb	r3, [r3, #0]
 80003fa:	2132      	movs	r1, #50	; 0x32
 80003fc:	0018      	movs	r0, r3
 80003fe:	f7ff fe83 	bl	8000108 <__udivsi3>
 8000402:	0003      	movs	r3, r0
 8000404:	b2db      	uxtb	r3, r3
 8000406:	001a      	movs	r2, r3
 8000408:	2303      	movs	r3, #3
 800040a:	4013      	ands	r3, r2
 800040c:	683a      	ldr	r2, [r7, #0]
 800040e:	18d3      	adds	r3, r2, r3
 8000410:	781b      	ldrb	r3, [r3, #0]
 8000412:	0018      	movs	r0, r3
 8000414:	f000 fd58 	bl	8000ec8 <HAL_Delay>
		HAL_GPIO_WritePin(portList[_s[i]], pinList[_s[i]], GPIO_PIN_SET);
 8000418:	697b      	ldr	r3, [r7, #20]
 800041a:	68fa      	ldr	r2, [r7, #12]
 800041c:	18d3      	adds	r3, r2, r3
 800041e:	781b      	ldrb	r3, [r3, #0]
 8000420:	009b      	lsls	r3, r3, #2
 8000422:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8000424:	18d3      	adds	r3, r2, r3
 8000426:	6818      	ldr	r0, [r3, #0]
 8000428:	697b      	ldr	r3, [r7, #20]
 800042a:	68fa      	ldr	r2, [r7, #12]
 800042c:	18d3      	adds	r3, r2, r3
 800042e:	781b      	ldrb	r3, [r3, #0]
 8000430:	005b      	lsls	r3, r3, #1
 8000432:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8000434:	18d3      	adds	r3, r2, r3
 8000436:	881b      	ldrh	r3, [r3, #0]
 8000438:	2201      	movs	r2, #1
 800043a:	0019      	movs	r1, r3
 800043c:	f001 fd47 	bl	8001ece <HAL_GPIO_WritePin>
		HAL_Delay(delayTimes[(_n / 50) & 3]);
 8000440:	193b      	adds	r3, r7, r4
 8000442:	781b      	ldrb	r3, [r3, #0]
 8000444:	2132      	movs	r1, #50	; 0x32
 8000446:	0018      	movs	r0, r3
 8000448:	f7ff fe5e 	bl	8000108 <__udivsi3>
 800044c:	0003      	movs	r3, r0
 800044e:	b2db      	uxtb	r3, r3
 8000450:	001a      	movs	r2, r3
 8000452:	2303      	movs	r3, #3
 8000454:	4013      	ands	r3, r2
 8000456:	683a      	ldr	r2, [r7, #0]
 8000458:	18d3      	adds	r3, r2, r3
 800045a:	781b      	ldrb	r3, [r3, #0]
 800045c:	0018      	movs	r0, r3
 800045e:	f000 fd33 	bl	8000ec8 <HAL_Delay>
	for (i = 0; i <= _n; i++) {
 8000462:	697b      	ldr	r3, [r7, #20]
 8000464:	3301      	adds	r3, #1
 8000466:	617b      	str	r3, [r7, #20]
 8000468:	230b      	movs	r3, #11
 800046a:	18fb      	adds	r3, r7, r3
 800046c:	781b      	ldrb	r3, [r3, #0]
 800046e:	697a      	ldr	r2, [r7, #20]
 8000470:	429a      	cmp	r2, r3
 8000472:	ddab      	ble.n	80003cc <showSequence+0x32>
	}
}
 8000474:	46c0      	nop			; (mov r8, r8)
 8000476:	46c0      	nop			; (mov r8, r8)
 8000478:	46bd      	mov	sp, r7
 800047a:	b007      	add	sp, #28
 800047c:	bd90      	pop	{r4, r7, pc}
	...

08000480 <calculateNewRandom>:
/**
 * @brief			Calculate a random number in range 0-3
 *
 * @params			ADC_HandleTypeDef *hadc: Pointer to ADC object to read noise from ADC to get the seed
 */
uint8_t calculateNewRandom(ADC_HandleTypeDef *hadc) {
 8000480:	b580      	push	{r7, lr}
 8000482:	b086      	sub	sp, #24
 8000484:	af00      	add	r7, sp, #0
 8000486:	6078      	str	r0, [r7, #4]

	uint16_t seed;
	uint8_t temp;
	int i;
	//Get the data
	for (i = 0; i < 25; i++) {
 8000488:	2300      	movs	r3, #0
 800048a:	613b      	str	r3, [r7, #16]
 800048c:	e00e      	b.n	80004ac <calculateNewRandom+0x2c>
		seed ^= HAL_ADC_GetValue(hadc);
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	0018      	movs	r0, r3
 8000492:	f001 f881 	bl	8001598 <HAL_ADC_GetValue>
 8000496:	0003      	movs	r3, r0
 8000498:	b299      	uxth	r1, r3
 800049a:	2216      	movs	r2, #22
 800049c:	18bb      	adds	r3, r7, r2
 800049e:	18ba      	adds	r2, r7, r2
 80004a0:	8812      	ldrh	r2, [r2, #0]
 80004a2:	404a      	eors	r2, r1
 80004a4:	801a      	strh	r2, [r3, #0]
	for (i = 0; i < 25; i++) {
 80004a6:	693b      	ldr	r3, [r7, #16]
 80004a8:	3301      	adds	r3, #1
 80004aa:	613b      	str	r3, [r7, #16]
 80004ac:	693b      	ldr	r3, [r7, #16]
 80004ae:	2b18      	cmp	r3, #24
 80004b0:	dded      	ble.n	800048e <calculateNewRandom+0xe>
	}
	//Shuffle the seed
	seed = 2053 * seed + 13849;
 80004b2:	2116      	movs	r1, #22
 80004b4:	187b      	adds	r3, r7, r1
 80004b6:	881b      	ldrh	r3, [r3, #0]
 80004b8:	1c1a      	adds	r2, r3, #0
 80004ba:	0252      	lsls	r2, r2, #9
 80004bc:	18d2      	adds	r2, r2, r3
 80004be:	0092      	lsls	r2, r2, #2
 80004c0:	18d3      	adds	r3, r2, r3
 80004c2:	b29a      	uxth	r2, r3
 80004c4:	187b      	adds	r3, r7, r1
 80004c6:	4815      	ldr	r0, [pc, #84]	; (800051c <calculateNewRandom+0x9c>)
 80004c8:	4684      	mov	ip, r0
 80004ca:	4462      	add	r2, ip
 80004cc:	801a      	strh	r2, [r3, #0]
	//XOR two bytes
	temp = seed ^ (seed >> 8);
 80004ce:	000a      	movs	r2, r1
 80004d0:	187b      	adds	r3, r7, r1
 80004d2:	881b      	ldrh	r3, [r3, #0]
 80004d4:	0a1b      	lsrs	r3, r3, #8
 80004d6:	b29b      	uxth	r3, r3
 80004d8:	b2d9      	uxtb	r1, r3
 80004da:	18bb      	adds	r3, r7, r2
 80004dc:	881b      	ldrh	r3, [r3, #0]
 80004de:	b2da      	uxtb	r2, r3
 80004e0:	200f      	movs	r0, #15
 80004e2:	183b      	adds	r3, r7, r0
 80004e4:	404a      	eors	r2, r1
 80004e6:	701a      	strb	r2, [r3, #0]
	//XOR two nibbles
	temp ^= (temp >> 4);
 80004e8:	183b      	adds	r3, r7, r0
 80004ea:	781b      	ldrb	r3, [r3, #0]
 80004ec:	091b      	lsrs	r3, r3, #4
 80004ee:	b2d9      	uxtb	r1, r3
 80004f0:	183b      	adds	r3, r7, r0
 80004f2:	183a      	adds	r2, r7, r0
 80004f4:	7812      	ldrb	r2, [r2, #0]
 80004f6:	404a      	eors	r2, r1
 80004f8:	701a      	strb	r2, [r3, #0]
	//XOR two pairs of bits and return remainder after division by 4
	return (temp ^ (temp >> 2)) & 0b00000011;
 80004fa:	0001      	movs	r1, r0
 80004fc:	187b      	adds	r3, r7, r1
 80004fe:	781b      	ldrb	r3, [r3, #0]
 8000500:	089b      	lsrs	r3, r3, #2
 8000502:	b2da      	uxtb	r2, r3
 8000504:	187b      	adds	r3, r7, r1
 8000506:	781b      	ldrb	r3, [r3, #0]
 8000508:	4053      	eors	r3, r2
 800050a:	b2db      	uxtb	r3, r3
 800050c:	2203      	movs	r2, #3
 800050e:	4013      	ands	r3, r2
 8000510:	b2db      	uxtb	r3, r3
}
 8000512:	0018      	movs	r0, r3
 8000514:	46bd      	mov	sp, r7
 8000516:	b006      	add	sp, #24
 8000518:	bd80      	pop	{r7, pc}
 800051a:	46c0      	nop			; (mov r8, r8)
 800051c:	00003619 	.word	0x00003619

08000520 <getKeys>:
 *
 * @params			GPIO_TypeDef * portList[]: Array of ports which are used for GPIO
 *
 * @params			uint16_t * pinList: Array of pins which are used for GPIO
 */
uint8_t getKeys(uint8_t keys[], uint8_t steps, GPIO_TypeDef * portList[], uint16_t  * pinList) {
 8000520:	b5b0      	push	{r4, r5, r7, lr}
 8000522:	b088      	sub	sp, #32
 8000524:	af00      	add	r7, sp, #0
 8000526:	60f8      	str	r0, [r7, #12]
 8000528:	607a      	str	r2, [r7, #4]
 800052a:	603b      	str	r3, [r7, #0]
 800052c:	230b      	movs	r3, #11
 800052e:	18fb      	adds	r3, r7, r3
 8000530:	1c0a      	adds	r2, r1, #0
 8000532:	701a      	strb	r2, [r3, #0]
	uint8_t n = 0;
 8000534:	231f      	movs	r3, #31
 8000536:	18fb      	adds	r3, r7, r3
 8000538:	2200      	movs	r2, #0
 800053a:	701a      	strb	r2, [r3, #0]
	uint8_t _b;
	int i;
// We have to read the keys
	setPinsAsInputs();
 800053c:	f7ff fe70 	bl	8000220 <setPinsAsInputs>
	while (n <= steps) {
 8000540:	e055      	b.n	80005ee <getKeys+0xce>
		do {
			_b = getButtons(portList, pinList);
 8000542:	2517      	movs	r5, #23
 8000544:	197c      	adds	r4, r7, r5
 8000546:	683a      	ldr	r2, [r7, #0]
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	0011      	movs	r1, r2
 800054c:	0018      	movs	r0, r3
 800054e:	f000 f85b 	bl	8000608 <getButtons>
 8000552:	0003      	movs	r3, r0
 8000554:	7023      	strb	r3, [r4, #0]
		} while (_b == 0);
 8000556:	197b      	adds	r3, r7, r5
 8000558:	781b      	ldrb	r3, [r3, #0]
 800055a:	2b00      	cmp	r3, #0
 800055c:	d0f1      	beq.n	8000542 <getKeys+0x22>

		for (i = 0; i < 4; i++) {
 800055e:	2300      	movs	r3, #0
 8000560:	61bb      	str	r3, [r7, #24]
 8000562:	e00b      	b.n	800057c <getKeys+0x5c>
			if (_b & (1 << i))
 8000564:	2317      	movs	r3, #23
 8000566:	18fb      	adds	r3, r7, r3
 8000568:	781a      	ldrb	r2, [r3, #0]
 800056a:	69bb      	ldr	r3, [r7, #24]
 800056c:	411a      	asrs	r2, r3
 800056e:	0013      	movs	r3, r2
 8000570:	2201      	movs	r2, #1
 8000572:	4013      	ands	r3, r2
 8000574:	d106      	bne.n	8000584 <getKeys+0x64>
		for (i = 0; i < 4; i++) {
 8000576:	69bb      	ldr	r3, [r7, #24]
 8000578:	3301      	adds	r3, #1
 800057a:	61bb      	str	r3, [r7, #24]
 800057c:	69bb      	ldr	r3, [r7, #24]
 800057e:	2b03      	cmp	r3, #3
 8000580:	ddf0      	ble.n	8000564 <getKeys+0x44>
 8000582:	e000      	b.n	8000586 <getKeys+0x66>
				break;
 8000584:	46c0      	nop			; (mov r8, r8)
		}
		HAL_Delay(25);
 8000586:	2019      	movs	r0, #25
 8000588:	f000 fc9e 	bl	8000ec8 <HAL_Delay>
		if (HAL_GPIO_ReadPin(portList[i], pinList[i]) == GPIO_PIN_RESET) {
 800058c:	69bb      	ldr	r3, [r7, #24]
 800058e:	009b      	lsls	r3, r3, #2
 8000590:	687a      	ldr	r2, [r7, #4]
 8000592:	18d3      	adds	r3, r2, r3
 8000594:	6818      	ldr	r0, [r3, #0]
 8000596:	69bb      	ldr	r3, [r7, #24]
 8000598:	005b      	lsls	r3, r3, #1
 800059a:	683a      	ldr	r2, [r7, #0]
 800059c:	18d3      	adds	r3, r2, r3
 800059e:	881b      	ldrh	r3, [r3, #0]
 80005a0:	0019      	movs	r1, r3
 80005a2:	f001 fc77 	bl	8001e94 <HAL_GPIO_ReadPin>
 80005a6:	0003      	movs	r3, r0
 80005a8:	0019      	movs	r1, r3
 80005aa:	221f      	movs	r2, #31
 80005ac:	18bb      	adds	r3, r7, r2
 80005ae:	18ba      	adds	r2, r7, r2
 80005b0:	7812      	ldrb	r2, [r2, #0]
 80005b2:	701a      	strb	r2, [r3, #0]
 80005b4:	2900      	cmp	r1, #0
 80005b6:	d11a      	bne.n	80005ee <getKeys+0xce>
			while (getButtons(portList, pinList))
 80005b8:	46c0      	nop			; (mov r8, r8)
 80005ba:	683a      	ldr	r2, [r7, #0]
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	0011      	movs	r1, r2
 80005c0:	0018      	movs	r0, r3
 80005c2:	f000 f821 	bl	8000608 <getButtons>
 80005c6:	1e03      	subs	r3, r0, #0
 80005c8:	d1f7      	bne.n	80005ba <getKeys+0x9a>
				;
			if (keys[n] != i)
 80005ca:	231f      	movs	r3, #31
 80005cc:	18fb      	adds	r3, r7, r3
 80005ce:	781b      	ldrb	r3, [r3, #0]
 80005d0:	68fa      	ldr	r2, [r7, #12]
 80005d2:	18d3      	adds	r3, r2, r3
 80005d4:	781b      	ldrb	r3, [r3, #0]
 80005d6:	001a      	movs	r2, r3
 80005d8:	69bb      	ldr	r3, [r7, #24]
 80005da:	4293      	cmp	r3, r2
 80005dc:	d001      	beq.n	80005e2 <getKeys+0xc2>
				return 0;
 80005de:	2300      	movs	r3, #0
 80005e0:	e00e      	b.n	8000600 <getKeys+0xe0>
			n++;
 80005e2:	211f      	movs	r1, #31
 80005e4:	187b      	adds	r3, r7, r1
 80005e6:	781a      	ldrb	r2, [r3, #0]
 80005e8:	187b      	adds	r3, r7, r1
 80005ea:	3201      	adds	r2, #1
 80005ec:	701a      	strb	r2, [r3, #0]
	while (n <= steps) {
 80005ee:	231f      	movs	r3, #31
 80005f0:	18fa      	adds	r2, r7, r3
 80005f2:	230b      	movs	r3, #11
 80005f4:	18fb      	adds	r3, r7, r3
 80005f6:	7812      	ldrb	r2, [r2, #0]
 80005f8:	781b      	ldrb	r3, [r3, #0]
 80005fa:	429a      	cmp	r2, r3
 80005fc:	d9a1      	bls.n	8000542 <getKeys+0x22>
		}
	}
	return 1;
 80005fe:	2301      	movs	r3, #1
}
 8000600:	0018      	movs	r0, r3
 8000602:	46bd      	mov	sp, r7
 8000604:	b008      	add	sp, #32
 8000606:	bdb0      	pop	{r4, r5, r7, pc}

08000608 <getButtons>:
 *
 * @params			GPIO_TypeDef * portList[]: Array of ports which are used for GPIO
 *
 * @params			uint16_t * pinList: Array of pins which are used for GPIO
 */
uint8_t getButtons(GPIO_TypeDef * portList[], uint16_t  * pinList) {
 8000608:	b580      	push	{r7, lr}
 800060a:	b086      	sub	sp, #24
 800060c:	af00      	add	r7, sp, #0
 800060e:	6078      	str	r0, [r7, #4]
 8000610:	6039      	str	r1, [r7, #0]
	uint8_t _buttons = 0;
 8000612:	2317      	movs	r3, #23
 8000614:	18fb      	adds	r3, r7, r3
 8000616:	2200      	movs	r2, #0
 8000618:	701a      	strb	r2, [r3, #0]
	setPinsAsInputs();
 800061a:	f7ff fe01 	bl	8000220 <setPinsAsInputs>

	for (int i = 0; i < 4; i++) {
 800061e:	2300      	movs	r3, #0
 8000620:	613b      	str	r3, [r7, #16]
 8000622:	e022      	b.n	800066a <getButtons+0x62>
		int pinState = HAL_GPIO_ReadPin(portList[i], pinList[i]);
 8000624:	693b      	ldr	r3, [r7, #16]
 8000626:	009b      	lsls	r3, r3, #2
 8000628:	687a      	ldr	r2, [r7, #4]
 800062a:	18d3      	adds	r3, r2, r3
 800062c:	6818      	ldr	r0, [r3, #0]
 800062e:	693b      	ldr	r3, [r7, #16]
 8000630:	005b      	lsls	r3, r3, #1
 8000632:	683a      	ldr	r2, [r7, #0]
 8000634:	18d3      	adds	r3, r2, r3
 8000636:	881b      	ldrh	r3, [r3, #0]
 8000638:	0019      	movs	r1, r3
 800063a:	f001 fc2b 	bl	8001e94 <HAL_GPIO_ReadPin>
 800063e:	0003      	movs	r3, r0
 8000640:	60fb      	str	r3, [r7, #12]
		_buttons |= !pinState << i;
 8000642:	68fb      	ldr	r3, [r7, #12]
 8000644:	425a      	negs	r2, r3
 8000646:	4153      	adcs	r3, r2
 8000648:	b2db      	uxtb	r3, r3
 800064a:	001a      	movs	r2, r3
 800064c:	693b      	ldr	r3, [r7, #16]
 800064e:	409a      	lsls	r2, r3
 8000650:	0013      	movs	r3, r2
 8000652:	b25a      	sxtb	r2, r3
 8000654:	2117      	movs	r1, #23
 8000656:	187b      	adds	r3, r7, r1
 8000658:	781b      	ldrb	r3, [r3, #0]
 800065a:	b25b      	sxtb	r3, r3
 800065c:	4313      	orrs	r3, r2
 800065e:	b25a      	sxtb	r2, r3
 8000660:	187b      	adds	r3, r7, r1
 8000662:	701a      	strb	r2, [r3, #0]
	for (int i = 0; i < 4; i++) {
 8000664:	693b      	ldr	r3, [r7, #16]
 8000666:	3301      	adds	r3, #1
 8000668:	613b      	str	r3, [r7, #16]
 800066a:	693b      	ldr	r3, [r7, #16]
 800066c:	2b03      	cmp	r3, #3
 800066e:	ddd9      	ble.n	8000624 <getButtons+0x1c>
	}
	_buttons &= 0x0f;
 8000670:	2017      	movs	r0, #23
 8000672:	183b      	adds	r3, r7, r0
 8000674:	183a      	adds	r2, r7, r0
 8000676:	7812      	ldrb	r2, [r2, #0]
 8000678:	210f      	movs	r1, #15
 800067a:	400a      	ands	r2, r1
 800067c:	701a      	strb	r2, [r3, #0]

	return (_buttons);
 800067e:	183b      	adds	r3, r7, r0
 8000680:	781b      	ldrb	r3, [r3, #0]
}
 8000682:	0018      	movs	r0, r3
 8000684:	46bd      	mov	sp, r7
 8000686:	b006      	add	sp, #24
 8000688:	bd80      	pop	{r7, pc}

0800068a <showFailAnimation>:
 *
 * @params			GPIO_TypeDef * portList[]: Array of ports which are used for GPIO
 *
 * @params			uint16_t * pinList: Array of pins which are used for GPIO
 */
void showFailAnimation(GPIO_TypeDef * portList[], uint16_t  * pinList) {
 800068a:	b580      	push	{r7, lr}
 800068c:	b084      	sub	sp, #16
 800068e:	af00      	add	r7, sp, #0
 8000690:	6078      	str	r0, [r7, #4]
 8000692:	6039      	str	r1, [r7, #0]
	int i;
	int j;
	setPinsAsOutputs();
 8000694:	f7ff fdfc 	bl	8000290 <setPinsAsOutputs>
	for (j = 0; j < 2; j++) {
 8000698:	2300      	movs	r3, #0
 800069a:	60bb      	str	r3, [r7, #8]
 800069c:	e036      	b.n	800070c <showFailAnimation+0x82>
		for (i = 0; i < 4; i++) {
 800069e:	2300      	movs	r3, #0
 80006a0:	60fb      	str	r3, [r7, #12]
 80006a2:	e010      	b.n	80006c6 <showFailAnimation+0x3c>
			HAL_GPIO_WritePin(portList[i], pinList[i], GPIO_PIN_RESET);
 80006a4:	68fb      	ldr	r3, [r7, #12]
 80006a6:	009b      	lsls	r3, r3, #2
 80006a8:	687a      	ldr	r2, [r7, #4]
 80006aa:	18d3      	adds	r3, r2, r3
 80006ac:	6818      	ldr	r0, [r3, #0]
 80006ae:	68fb      	ldr	r3, [r7, #12]
 80006b0:	005b      	lsls	r3, r3, #1
 80006b2:	683a      	ldr	r2, [r7, #0]
 80006b4:	18d3      	adds	r3, r2, r3
 80006b6:	881b      	ldrh	r3, [r3, #0]
 80006b8:	2200      	movs	r2, #0
 80006ba:	0019      	movs	r1, r3
 80006bc:	f001 fc07 	bl	8001ece <HAL_GPIO_WritePin>
		for (i = 0; i < 4; i++) {
 80006c0:	68fb      	ldr	r3, [r7, #12]
 80006c2:	3301      	adds	r3, #1
 80006c4:	60fb      	str	r3, [r7, #12]
 80006c6:	68fb      	ldr	r3, [r7, #12]
 80006c8:	2b03      	cmp	r3, #3
 80006ca:	ddeb      	ble.n	80006a4 <showFailAnimation+0x1a>
		}
		HAL_Delay(250);
 80006cc:	20fa      	movs	r0, #250	; 0xfa
 80006ce:	f000 fbfb 	bl	8000ec8 <HAL_Delay>
		for (i = 0; i < 4; i++) {
 80006d2:	2300      	movs	r3, #0
 80006d4:	60fb      	str	r3, [r7, #12]
 80006d6:	e010      	b.n	80006fa <showFailAnimation+0x70>
			HAL_GPIO_WritePin(portList[i], pinList[i], GPIO_PIN_SET);
 80006d8:	68fb      	ldr	r3, [r7, #12]
 80006da:	009b      	lsls	r3, r3, #2
 80006dc:	687a      	ldr	r2, [r7, #4]
 80006de:	18d3      	adds	r3, r2, r3
 80006e0:	6818      	ldr	r0, [r3, #0]
 80006e2:	68fb      	ldr	r3, [r7, #12]
 80006e4:	005b      	lsls	r3, r3, #1
 80006e6:	683a      	ldr	r2, [r7, #0]
 80006e8:	18d3      	adds	r3, r2, r3
 80006ea:	881b      	ldrh	r3, [r3, #0]
 80006ec:	2201      	movs	r2, #1
 80006ee:	0019      	movs	r1, r3
 80006f0:	f001 fbed 	bl	8001ece <HAL_GPIO_WritePin>
		for (i = 0; i < 4; i++) {
 80006f4:	68fb      	ldr	r3, [r7, #12]
 80006f6:	3301      	adds	r3, #1
 80006f8:	60fb      	str	r3, [r7, #12]
 80006fa:	68fb      	ldr	r3, [r7, #12]
 80006fc:	2b03      	cmp	r3, #3
 80006fe:	ddeb      	ble.n	80006d8 <showFailAnimation+0x4e>
		}
		HAL_Delay(250);
 8000700:	20fa      	movs	r0, #250	; 0xfa
 8000702:	f000 fbe1 	bl	8000ec8 <HAL_Delay>
	for (j = 0; j < 2; j++) {
 8000706:	68bb      	ldr	r3, [r7, #8]
 8000708:	3301      	adds	r3, #1
 800070a:	60bb      	str	r3, [r7, #8]
 800070c:	68bb      	ldr	r3, [r7, #8]
 800070e:	2b01      	cmp	r3, #1
 8000710:	ddc5      	ble.n	800069e <showFailAnimation+0x14>
	}
}
 8000712:	46c0      	nop			; (mov r8, r8)
 8000714:	46c0      	nop			; (mov r8, r8)
 8000716:	46bd      	mov	sp, r7
 8000718:	b004      	add	sp, #16
 800071a:	bd80      	pop	{r7, pc}

0800071c <showResult>:
 *
 * @params			GPIO_TypeDef * portList[]: Array of ports which are used for GPIO
 *
 * @params			uint16_t * pinList: Array of pins which are used for GPIO
 */
void showResult(uint8_t _r, GPIO_TypeDef * portList[], uint16_t  * pinList) {
 800071c:	b5b0      	push	{r4, r5, r7, lr}
 800071e:	b086      	sub	sp, #24
 8000720:	af00      	add	r7, sp, #0
 8000722:	60b9      	str	r1, [r7, #8]
 8000724:	607a      	str	r2, [r7, #4]
 8000726:	250f      	movs	r5, #15
 8000728:	197b      	adds	r3, r7, r5
 800072a:	1c02      	adds	r2, r0, #0
 800072c:	701a      	strb	r2, [r3, #0]
	uint8_t _blinks;
	uint8_t i;
	setPinsAsOutputs();
 800072e:	f7ff fdaf 	bl	8000290 <setPinsAsOutputs>
	_blinks = _r / 100;
 8000732:	2316      	movs	r3, #22
 8000734:	18fc      	adds	r4, r7, r3
 8000736:	197b      	adds	r3, r7, r5
 8000738:	781b      	ldrb	r3, [r3, #0]
 800073a:	2164      	movs	r1, #100	; 0x64
 800073c:	0018      	movs	r0, r3
 800073e:	f7ff fce3 	bl	8000108 <__udivsi3>
 8000742:	0003      	movs	r3, r0
 8000744:	7023      	strb	r3, [r4, #0]
	for (i = 0; i < _blinks; i++) {
 8000746:	2317      	movs	r3, #23
 8000748:	18fb      	adds	r3, r7, r3
 800074a:	2200      	movs	r2, #0
 800074c:	701a      	strb	r2, [r3, #0]
 800074e:	e01f      	b.n	8000790 <showResult+0x74>
		HAL_GPIO_WritePin(portList[2], pinList[2], GPIO_PIN_SET);
 8000750:	68bb      	ldr	r3, [r7, #8]
 8000752:	3308      	adds	r3, #8
 8000754:	6818      	ldr	r0, [r3, #0]
 8000756:	687b      	ldr	r3, [r7, #4]
 8000758:	3304      	adds	r3, #4
 800075a:	881b      	ldrh	r3, [r3, #0]
 800075c:	2201      	movs	r2, #1
 800075e:	0019      	movs	r1, r3
 8000760:	f001 fbb5 	bl	8001ece <HAL_GPIO_WritePin>
		HAL_Delay(SCORE_BLINK_ON);
 8000764:	20c8      	movs	r0, #200	; 0xc8
 8000766:	f000 fbaf 	bl	8000ec8 <HAL_Delay>
		HAL_GPIO_WritePin(portList[2], pinList[2], GPIO_PIN_RESET);
 800076a:	68bb      	ldr	r3, [r7, #8]
 800076c:	3308      	adds	r3, #8
 800076e:	6818      	ldr	r0, [r3, #0]
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	3304      	adds	r3, #4
 8000774:	881b      	ldrh	r3, [r3, #0]
 8000776:	2200      	movs	r2, #0
 8000778:	0019      	movs	r1, r3
 800077a:	f001 fba8 	bl	8001ece <HAL_GPIO_WritePin>
		HAL_Delay(SCORE_BLINK_OFF);
 800077e:	20c8      	movs	r0, #200	; 0xc8
 8000780:	f000 fba2 	bl	8000ec8 <HAL_Delay>
	for (i = 0; i < _blinks; i++) {
 8000784:	2117      	movs	r1, #23
 8000786:	187b      	adds	r3, r7, r1
 8000788:	781a      	ldrb	r2, [r3, #0]
 800078a:	187b      	adds	r3, r7, r1
 800078c:	3201      	adds	r2, #1
 800078e:	701a      	strb	r2, [r3, #0]
 8000790:	2517      	movs	r5, #23
 8000792:	197a      	adds	r2, r7, r5
 8000794:	2416      	movs	r4, #22
 8000796:	193b      	adds	r3, r7, r4
 8000798:	7812      	ldrb	r2, [r2, #0]
 800079a:	781b      	ldrb	r3, [r3, #0]
 800079c:	429a      	cmp	r2, r3
 800079e:	d3d7      	bcc.n	8000750 <showResult+0x34>
	}

	_blinks = _r / 10 % 10;
 80007a0:	230f      	movs	r3, #15
 80007a2:	18fb      	adds	r3, r7, r3
 80007a4:	781b      	ldrb	r3, [r3, #0]
 80007a6:	210a      	movs	r1, #10
 80007a8:	0018      	movs	r0, r3
 80007aa:	f7ff fcad 	bl	8000108 <__udivsi3>
 80007ae:	0003      	movs	r3, r0
 80007b0:	b2db      	uxtb	r3, r3
 80007b2:	193c      	adds	r4, r7, r4
 80007b4:	210a      	movs	r1, #10
 80007b6:	0018      	movs	r0, r3
 80007b8:	f7ff fd2c 	bl	8000214 <__aeabi_uidivmod>
 80007bc:	000b      	movs	r3, r1
 80007be:	7023      	strb	r3, [r4, #0]
	for (i = 0; i < _blinks; i++) {
 80007c0:	197b      	adds	r3, r7, r5
 80007c2:	2200      	movs	r2, #0
 80007c4:	701a      	strb	r2, [r3, #0]
 80007c6:	e01f      	b.n	8000808 <showResult+0xec>
		HAL_GPIO_WritePin(portList[1], pinList[1], GPIO_PIN_SET);
 80007c8:	68bb      	ldr	r3, [r7, #8]
 80007ca:	3304      	adds	r3, #4
 80007cc:	6818      	ldr	r0, [r3, #0]
 80007ce:	687b      	ldr	r3, [r7, #4]
 80007d0:	3302      	adds	r3, #2
 80007d2:	881b      	ldrh	r3, [r3, #0]
 80007d4:	2201      	movs	r2, #1
 80007d6:	0019      	movs	r1, r3
 80007d8:	f001 fb79 	bl	8001ece <HAL_GPIO_WritePin>
		HAL_Delay(SCORE_BLINK_ON);
 80007dc:	20c8      	movs	r0, #200	; 0xc8
 80007de:	f000 fb73 	bl	8000ec8 <HAL_Delay>
		HAL_GPIO_WritePin(portList[1], pinList[1], GPIO_PIN_RESET);
 80007e2:	68bb      	ldr	r3, [r7, #8]
 80007e4:	3304      	adds	r3, #4
 80007e6:	6818      	ldr	r0, [r3, #0]
 80007e8:	687b      	ldr	r3, [r7, #4]
 80007ea:	3302      	adds	r3, #2
 80007ec:	881b      	ldrh	r3, [r3, #0]
 80007ee:	2200      	movs	r2, #0
 80007f0:	0019      	movs	r1, r3
 80007f2:	f001 fb6c 	bl	8001ece <HAL_GPIO_WritePin>
		HAL_Delay(SCORE_BLINK_OFF);
 80007f6:	20c8      	movs	r0, #200	; 0xc8
 80007f8:	f000 fb66 	bl	8000ec8 <HAL_Delay>
	for (i = 0; i < _blinks; i++) {
 80007fc:	2117      	movs	r1, #23
 80007fe:	187b      	adds	r3, r7, r1
 8000800:	781a      	ldrb	r2, [r3, #0]
 8000802:	187b      	adds	r3, r7, r1
 8000804:	3201      	adds	r2, #1
 8000806:	701a      	strb	r2, [r3, #0]
 8000808:	2517      	movs	r5, #23
 800080a:	197a      	adds	r2, r7, r5
 800080c:	2116      	movs	r1, #22
 800080e:	187b      	adds	r3, r7, r1
 8000810:	7812      	ldrb	r2, [r2, #0]
 8000812:	781b      	ldrb	r3, [r3, #0]
 8000814:	429a      	cmp	r2, r3
 8000816:	d3d7      	bcc.n	80007c8 <showResult+0xac>
	}

	_blinks = _r % 10;
 8000818:	187c      	adds	r4, r7, r1
 800081a:	230f      	movs	r3, #15
 800081c:	18fb      	adds	r3, r7, r3
 800081e:	781b      	ldrb	r3, [r3, #0]
 8000820:	210a      	movs	r1, #10
 8000822:	0018      	movs	r0, r3
 8000824:	f7ff fcf6 	bl	8000214 <__aeabi_uidivmod>
 8000828:	000b      	movs	r3, r1
 800082a:	7023      	strb	r3, [r4, #0]
	for (i = 0; i < _blinks; i++) {
 800082c:	197b      	adds	r3, r7, r5
 800082e:	2200      	movs	r2, #0
 8000830:	701a      	strb	r2, [r3, #0]
 8000832:	e01b      	b.n	800086c <showResult+0x150>
		HAL_GPIO_WritePin(portList[0], pinList[0], GPIO_PIN_SET);
 8000834:	68bb      	ldr	r3, [r7, #8]
 8000836:	6818      	ldr	r0, [r3, #0]
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	881b      	ldrh	r3, [r3, #0]
 800083c:	2201      	movs	r2, #1
 800083e:	0019      	movs	r1, r3
 8000840:	f001 fb45 	bl	8001ece <HAL_GPIO_WritePin>
		HAL_Delay(SCORE_BLINK_ON);
 8000844:	20c8      	movs	r0, #200	; 0xc8
 8000846:	f000 fb3f 	bl	8000ec8 <HAL_Delay>
		HAL_GPIO_WritePin(portList[0], pinList[0], GPIO_PIN_RESET);
 800084a:	68bb      	ldr	r3, [r7, #8]
 800084c:	6818      	ldr	r0, [r3, #0]
 800084e:	687b      	ldr	r3, [r7, #4]
 8000850:	881b      	ldrh	r3, [r3, #0]
 8000852:	2200      	movs	r2, #0
 8000854:	0019      	movs	r1, r3
 8000856:	f001 fb3a 	bl	8001ece <HAL_GPIO_WritePin>
		HAL_Delay(SCORE_BLINK_OFF);
 800085a:	20c8      	movs	r0, #200	; 0xc8
 800085c:	f000 fb34 	bl	8000ec8 <HAL_Delay>
	for (i = 0; i < _blinks; i++) {
 8000860:	2117      	movs	r1, #23
 8000862:	187b      	adds	r3, r7, r1
 8000864:	781a      	ldrb	r2, [r3, #0]
 8000866:	187b      	adds	r3, r7, r1
 8000868:	3201      	adds	r2, #1
 800086a:	701a      	strb	r2, [r3, #0]
 800086c:	2317      	movs	r3, #23
 800086e:	18fa      	adds	r2, r7, r3
 8000870:	2316      	movs	r3, #22
 8000872:	18fb      	adds	r3, r7, r3
 8000874:	7812      	ldrb	r2, [r2, #0]
 8000876:	781b      	ldrb	r3, [r3, #0]
 8000878:	429a      	cmp	r2, r3
 800087a:	d3db      	bcc.n	8000834 <showResult+0x118>
	}
}
 800087c:	46c0      	nop			; (mov r8, r8)
 800087e:	46c0      	nop			; (mov r8, r8)
 8000880:	46bd      	mov	sp, r7
 8000882:	b006      	add	sp, #24
 8000884:	bdb0      	pop	{r4, r5, r7, pc}
	...

08000888 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 8000888:	b590      	push	{r4, r7, lr}
 800088a:	b085      	sub	sp, #20
 800088c:	af02      	add	r7, sp, #8
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 800088e:	f000 fa9f 	bl	8000dd0 <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 8000892:	f000 f887 	bl	80009a4 <SystemClock_Config>

	/* USER CODE BEGIN SysInit */
	// Wait 100 ms in case the finished device needs to be reprogrammed
	HAL_Delay(100);
 8000896:	2064      	movs	r0, #100	; 0x64
 8000898:	f000 fb16 	bl	8000ec8 <HAL_Delay>
	// So the device can be reprogrammed (development mode)
	// HAL_Delay(4000);
	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 800089c:	f000 f952 	bl	8000b44 <MX_GPIO_Init>
	MX_ADC1_Init();
 80008a0:	f000 f8c4 	bl	8000a2c <MX_ADC1_Init>
	/* USER CODE BEGIN 2 */

	// Begin ADC
	HAL_ADC_Start(&hadc1);
 80008a4:	4b39      	ldr	r3, [pc, #228]	; (800098c <main+0x104>)
 80008a6:	0018      	movs	r0, r3
 80008a8:	f000 fe28 	bl	80014fc <HAL_ADC_Start>

	// Turn on all the pins and then show the start animation
	for (int i = 0; i < 4; i++) {
 80008ac:	2300      	movs	r3, #0
 80008ae:	607b      	str	r3, [r7, #4]
 80008b0:	e00e      	b.n	80008d0 <main+0x48>
		HAL_GPIO_WritePin(portList[i], pinList[i], GPIO_PIN_SET);
 80008b2:	4b37      	ldr	r3, [pc, #220]	; (8000990 <main+0x108>)
 80008b4:	687a      	ldr	r2, [r7, #4]
 80008b6:	0092      	lsls	r2, r2, #2
 80008b8:	58d0      	ldr	r0, [r2, r3]
 80008ba:	4b36      	ldr	r3, [pc, #216]	; (8000994 <main+0x10c>)
 80008bc:	687a      	ldr	r2, [r7, #4]
 80008be:	0052      	lsls	r2, r2, #1
 80008c0:	5ad3      	ldrh	r3, [r2, r3]
 80008c2:	2201      	movs	r2, #1
 80008c4:	0019      	movs	r1, r3
 80008c6:	f001 fb02 	bl	8001ece <HAL_GPIO_WritePin>
	for (int i = 0; i < 4; i++) {
 80008ca:	687b      	ldr	r3, [r7, #4]
 80008cc:	3301      	adds	r3, #1
 80008ce:	607b      	str	r3, [r7, #4]
 80008d0:	687b      	ldr	r3, [r7, #4]
 80008d2:	2b03      	cmp	r3, #3
 80008d4:	dded      	ble.n	80008b2 <main+0x2a>
	}
	showStartAnimation(portList, pinList);
 80008d6:	4a2f      	ldr	r2, [pc, #188]	; (8000994 <main+0x10c>)
 80008d8:	4b2d      	ldr	r3, [pc, #180]	; (8000990 <main+0x108>)
 80008da:	0011      	movs	r1, r2
 80008dc:	0018      	movs	r0, r3
 80008de:	f7ff fd0f 	bl	8000300 <showStartAnimation>
	/* Infinite loop */
	/* USER CODE BEGIN WHILE */

	// Main game code
	while (1) {
		if (steps < MAX_STEPS) {
 80008e2:	4b2d      	ldr	r3, [pc, #180]	; (8000998 <main+0x110>)
 80008e4:	781b      	ldrb	r3, [r3, #0]
 80008e6:	2b63      	cmp	r3, #99	; 0x63
 80008e8:	d846      	bhi.n	8000978 <main+0xf0>
			showSequence(keys, steps, &hadc1, delayTimes, portList,
 80008ea:	4b2b      	ldr	r3, [pc, #172]	; (8000998 <main+0x110>)
 80008ec:	7819      	ldrb	r1, [r3, #0]
 80008ee:	4c2b      	ldr	r4, [pc, #172]	; (800099c <main+0x114>)
 80008f0:	4a26      	ldr	r2, [pc, #152]	; (800098c <main+0x104>)
 80008f2:	482b      	ldr	r0, [pc, #172]	; (80009a0 <main+0x118>)
 80008f4:	4b27      	ldr	r3, [pc, #156]	; (8000994 <main+0x10c>)
 80008f6:	9301      	str	r3, [sp, #4]
 80008f8:	4b25      	ldr	r3, [pc, #148]	; (8000990 <main+0x108>)
 80008fa:	9300      	str	r3, [sp, #0]
 80008fc:	0023      	movs	r3, r4
 80008fe:	f7ff fd4c 	bl	800039a <showSequence>
					pinList);
			if (getKeys(keys, steps, portList, pinList)) {
 8000902:	4b25      	ldr	r3, [pc, #148]	; (8000998 <main+0x110>)
 8000904:	7819      	ldrb	r1, [r3, #0]
 8000906:	4b23      	ldr	r3, [pc, #140]	; (8000994 <main+0x10c>)
 8000908:	4a21      	ldr	r2, [pc, #132]	; (8000990 <main+0x108>)
 800090a:	4825      	ldr	r0, [pc, #148]	; (80009a0 <main+0x118>)
 800090c:	f7ff fe08 	bl	8000520 <getKeys>
 8000910:	1e03      	subs	r3, r0, #0
 8000912:	d00b      	beq.n	800092c <main+0xa4>
				HAL_Delay(500);
 8000914:	23fa      	movs	r3, #250	; 0xfa
 8000916:	005b      	lsls	r3, r3, #1
 8000918:	0018      	movs	r0, r3
 800091a:	f000 fad5 	bl	8000ec8 <HAL_Delay>
				steps++;
 800091e:	4b1e      	ldr	r3, [pc, #120]	; (8000998 <main+0x110>)
 8000920:	781b      	ldrb	r3, [r3, #0]
 8000922:	3301      	adds	r3, #1
 8000924:	b2da      	uxtb	r2, r3
 8000926:	4b1c      	ldr	r3, [pc, #112]	; (8000998 <main+0x110>)
 8000928:	701a      	strb	r2, [r3, #0]
 800092a:	e7da      	b.n	80008e2 <main+0x5a>
			} else {
				HAL_Delay(500);
 800092c:	23fa      	movs	r3, #250	; 0xfa
 800092e:	005b      	lsls	r3, r3, #1
 8000930:	0018      	movs	r0, r3
 8000932:	f000 fac9 	bl	8000ec8 <HAL_Delay>
				showFailAnimation(portList, pinList);
 8000936:	4a17      	ldr	r2, [pc, #92]	; (8000994 <main+0x10c>)
 8000938:	4b15      	ldr	r3, [pc, #84]	; (8000990 <main+0x108>)
 800093a:	0011      	movs	r1, r2
 800093c:	0018      	movs	r0, r3
 800093e:	f7ff fea4 	bl	800068a <showFailAnimation>
				HAL_Delay(500);
 8000942:	23fa      	movs	r3, #250	; 0xfa
 8000944:	005b      	lsls	r3, r3, #1
 8000946:	0018      	movs	r0, r3
 8000948:	f000 fabe 	bl	8000ec8 <HAL_Delay>
				showResult(steps, portList, pinList);
 800094c:	4b12      	ldr	r3, [pc, #72]	; (8000998 <main+0x110>)
 800094e:	781b      	ldrb	r3, [r3, #0]
 8000950:	4a10      	ldr	r2, [pc, #64]	; (8000994 <main+0x10c>)
 8000952:	490f      	ldr	r1, [pc, #60]	; (8000990 <main+0x108>)
 8000954:	0018      	movs	r0, r3
 8000956:	f7ff fee1 	bl	800071c <showResult>
				HAL_Delay(500);
 800095a:	23fa      	movs	r3, #250	; 0xfa
 800095c:	005b      	lsls	r3, r3, #1
 800095e:	0018      	movs	r0, r3
 8000960:	f000 fab2 	bl	8000ec8 <HAL_Delay>
				steps = 0;
 8000964:	4b0c      	ldr	r3, [pc, #48]	; (8000998 <main+0x110>)
 8000966:	2200      	movs	r2, #0
 8000968:	701a      	strb	r2, [r3, #0]
				showStartAnimation(portList, pinList);
 800096a:	4a0a      	ldr	r2, [pc, #40]	; (8000994 <main+0x10c>)
 800096c:	4b08      	ldr	r3, [pc, #32]	; (8000990 <main+0x108>)
 800096e:	0011      	movs	r1, r2
 8000970:	0018      	movs	r0, r3
 8000972:	f7ff fcc5 	bl	8000300 <showStartAnimation>
 8000976:	e7b4      	b.n	80008e2 <main+0x5a>
			}
		} else {
			while (1) {
				steps = 0;
 8000978:	4b07      	ldr	r3, [pc, #28]	; (8000998 <main+0x110>)
 800097a:	2200      	movs	r2, #0
 800097c:	701a      	strb	r2, [r3, #0]
				showStartAnimation(portList, pinList);
 800097e:	4a05      	ldr	r2, [pc, #20]	; (8000994 <main+0x10c>)
 8000980:	4b03      	ldr	r3, [pc, #12]	; (8000990 <main+0x108>)
 8000982:	0011      	movs	r1, r2
 8000984:	0018      	movs	r0, r3
 8000986:	f7ff fcbb 	bl	8000300 <showStartAnimation>
				steps = 0;
 800098a:	e7f5      	b.n	8000978 <main+0xf0>
 800098c:	20000044 	.word	0x20000044
 8000990:	20000000 	.word	0x20000000
 8000994:	20000010 	.word	0x20000010
 8000998:	2000010c 	.word	0x2000010c
 800099c:	20000018 	.word	0x20000018
 80009a0:	200000a8 	.word	0x200000a8

080009a4 <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 80009a4:	b590      	push	{r4, r7, lr}
 80009a6:	b08d      	sub	sp, #52	; 0x34
 80009a8:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 80009aa:	2414      	movs	r4, #20
 80009ac:	193b      	adds	r3, r7, r4
 80009ae:	0018      	movs	r0, r3
 80009b0:	231c      	movs	r3, #28
 80009b2:	001a      	movs	r2, r3
 80009b4:	2100      	movs	r1, #0
 80009b6:	f001 feff 	bl	80027b8 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 80009ba:	003b      	movs	r3, r7
 80009bc:	0018      	movs	r0, r3
 80009be:	2314      	movs	r3, #20
 80009c0:	001a      	movs	r2, r3
 80009c2:	2100      	movs	r1, #0
 80009c4:	f001 fef8 	bl	80027b8 <memset>

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80009c8:	193b      	adds	r3, r7, r4
 80009ca:	2202      	movs	r2, #2
 80009cc:	601a      	str	r2, [r3, #0]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80009ce:	193b      	adds	r3, r7, r4
 80009d0:	2280      	movs	r2, #128	; 0x80
 80009d2:	0052      	lsls	r2, r2, #1
 80009d4:	60da      	str	r2, [r3, #12]
	RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV32;
 80009d6:	193b      	adds	r3, r7, r4
 80009d8:	22a0      	movs	r2, #160	; 0xa0
 80009da:	0192      	lsls	r2, r2, #6
 80009dc:	611a      	str	r2, [r3, #16]
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80009de:	193b      	adds	r3, r7, r4
 80009e0:	2240      	movs	r2, #64	; 0x40
 80009e2:	615a      	str	r2, [r3, #20]
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 80009e4:	193b      	adds	r3, r7, r4
 80009e6:	0018      	movs	r0, r3
 80009e8:	f001 fa8e 	bl	8001f08 <HAL_RCC_OscConfig>
 80009ec:	1e03      	subs	r3, r0, #0
 80009ee:	d001      	beq.n	80009f4 <SystemClock_Config+0x50>
		Error_Handler();
 80009f0:	f000 f90c 	bl	8000c0c <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 80009f4:	003b      	movs	r3, r7
 80009f6:	2207      	movs	r2, #7
 80009f8:	601a      	str	r2, [r3, #0]
			| RCC_CLOCKTYPE_PCLK1;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80009fa:	003b      	movs	r3, r7
 80009fc:	2200      	movs	r2, #0
 80009fe:	605a      	str	r2, [r3, #4]
	RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 8000a00:	003b      	movs	r3, r7
 8000a02:	2200      	movs	r2, #0
 8000a04:	609a      	str	r2, [r3, #8]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 8000a06:	003b      	movs	r3, r7
 8000a08:	2200      	movs	r2, #0
 8000a0a:	60da      	str	r2, [r3, #12]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 8000a0c:	003b      	movs	r3, r7
 8000a0e:	2200      	movs	r2, #0
 8000a10:	611a      	str	r2, [r3, #16]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK) {
 8000a12:	003b      	movs	r3, r7
 8000a14:	2100      	movs	r1, #0
 8000a16:	0018      	movs	r0, r3
 8000a18:	f001 fc70 	bl	80022fc <HAL_RCC_ClockConfig>
 8000a1c:	1e03      	subs	r3, r0, #0
 8000a1e:	d001      	beq.n	8000a24 <SystemClock_Config+0x80>
		Error_Handler();
 8000a20:	f000 f8f4 	bl	8000c0c <Error_Handler>
	}
}
 8000a24:	46c0      	nop			; (mov r8, r8)
 8000a26:	46bd      	mov	sp, r7
 8000a28:	b00d      	add	sp, #52	; 0x34
 8000a2a:	bd90      	pop	{r4, r7, pc}

08000a2c <MX_ADC1_Init>:
/**
 * @brief ADC1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_ADC1_Init(void) {
 8000a2c:	b580      	push	{r7, lr}
 8000a2e:	b08a      	sub	sp, #40	; 0x28
 8000a30:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN ADC1_Init 0 */

	/* USER CODE END ADC1_Init 0 */

	ADC_ChannelConfTypeDef sConfig = { 0 };
 8000a32:	231c      	movs	r3, #28
 8000a34:	18fb      	adds	r3, r7, r3
 8000a36:	0018      	movs	r0, r3
 8000a38:	230c      	movs	r3, #12
 8000a3a:	001a      	movs	r2, r3
 8000a3c:	2100      	movs	r1, #0
 8000a3e:	f001 febb 	bl	80027b8 <memset>

	/* USER CODE BEGIN ADC1_Init 1 */
	GPIO_InitTypeDef gpioInit;
	__GPIOA_CLK_ENABLE()
 8000a42:	4b3b      	ldr	r3, [pc, #236]	; (8000b30 <MX_ADC1_Init+0x104>)
 8000a44:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000a46:	4b3a      	ldr	r3, [pc, #232]	; (8000b30 <MX_ADC1_Init+0x104>)
 8000a48:	2101      	movs	r1, #1
 8000a4a:	430a      	orrs	r2, r1
 8000a4c:	635a      	str	r2, [r3, #52]	; 0x34
 8000a4e:	4b38      	ldr	r3, [pc, #224]	; (8000b30 <MX_ADC1_Init+0x104>)
 8000a50:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000a52:	2201      	movs	r2, #1
 8000a54:	4013      	ands	r3, r2
 8000a56:	607b      	str	r3, [r7, #4]
 8000a58:	687b      	ldr	r3, [r7, #4]
	;
	gpioInit.Pin = GPIO_PIN_13;
 8000a5a:	2108      	movs	r1, #8
 8000a5c:	187b      	adds	r3, r7, r1
 8000a5e:	2280      	movs	r2, #128	; 0x80
 8000a60:	0192      	lsls	r2, r2, #6
 8000a62:	601a      	str	r2, [r3, #0]
	gpioInit.Mode = GPIO_MODE_ANALOG;
 8000a64:	187b      	adds	r3, r7, r1
 8000a66:	2203      	movs	r2, #3
 8000a68:	605a      	str	r2, [r3, #4]
	gpioInit.Pull = GPIO_NOPULL;
 8000a6a:	187b      	adds	r3, r7, r1
 8000a6c:	2200      	movs	r2, #0
 8000a6e:	609a      	str	r2, [r3, #8]
	HAL_GPIO_Init(GPIOC, &gpioInit);
 8000a70:	187b      	adds	r3, r7, r1
 8000a72:	4a30      	ldr	r2, [pc, #192]	; (8000b34 <MX_ADC1_Init+0x108>)
 8000a74:	0019      	movs	r1, r3
 8000a76:	0010      	movs	r0, r2
 8000a78:	f001 f8a2 	bl	8001bc0 <HAL_GPIO_Init>

	/* USER CODE END ADC1_Init 1 */

	/** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
	 */
	hadc1.Instance = ADC1;
 8000a7c:	4b2e      	ldr	r3, [pc, #184]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000a7e:	4a2f      	ldr	r2, [pc, #188]	; (8000b3c <MX_ADC1_Init+0x110>)
 8000a80:	601a      	str	r2, [r3, #0]
	hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8000a82:	4b2d      	ldr	r3, [pc, #180]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000a84:	2280      	movs	r2, #128	; 0x80
 8000a86:	05d2      	lsls	r2, r2, #23
 8000a88:	605a      	str	r2, [r3, #4]
	hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000a8a:	4b2b      	ldr	r3, [pc, #172]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000a8c:	2200      	movs	r2, #0
 8000a8e:	609a      	str	r2, [r3, #8]
	hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000a90:	4b29      	ldr	r3, [pc, #164]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000a92:	2200      	movs	r2, #0
 8000a94:	60da      	str	r2, [r3, #12]
	hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8000a96:	4b28      	ldr	r3, [pc, #160]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000a98:	2200      	movs	r2, #0
 8000a9a:	611a      	str	r2, [r3, #16]
	hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000a9c:	4b26      	ldr	r3, [pc, #152]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000a9e:	2204      	movs	r2, #4
 8000aa0:	615a      	str	r2, [r3, #20]
	hadc1.Init.LowPowerAutoWait = DISABLE;
 8000aa2:	4b25      	ldr	r3, [pc, #148]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000aa4:	2200      	movs	r2, #0
 8000aa6:	761a      	strb	r2, [r3, #24]
	hadc1.Init.LowPowerAutoPowerOff = DISABLE;
 8000aa8:	4b23      	ldr	r3, [pc, #140]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000aaa:	2200      	movs	r2, #0
 8000aac:	765a      	strb	r2, [r3, #25]
	hadc1.Init.ContinuousConvMode = ENABLE;
 8000aae:	4b22      	ldr	r3, [pc, #136]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000ab0:	2201      	movs	r2, #1
 8000ab2:	769a      	strb	r2, [r3, #26]
	hadc1.Init.NbrOfConversion = 1;
 8000ab4:	4b20      	ldr	r3, [pc, #128]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000ab6:	2201      	movs	r2, #1
 8000ab8:	61da      	str	r2, [r3, #28]
	hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000aba:	4b1f      	ldr	r3, [pc, #124]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000abc:	2200      	movs	r2, #0
 8000abe:	625a      	str	r2, [r3, #36]	; 0x24
	hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000ac0:	4b1d      	ldr	r3, [pc, #116]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000ac2:	2200      	movs	r2, #0
 8000ac4:	629a      	str	r2, [r3, #40]	; 0x28
	hadc1.Init.DMAContinuousRequests = DISABLE;
 8000ac6:	4b1c      	ldr	r3, [pc, #112]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000ac8:	222c      	movs	r2, #44	; 0x2c
 8000aca:	2100      	movs	r1, #0
 8000acc:	5499      	strb	r1, [r3, r2]
	hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8000ace:	4b1a      	ldr	r3, [pc, #104]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000ad0:	2200      	movs	r2, #0
 8000ad2:	631a      	str	r2, [r3, #48]	; 0x30
	hadc1.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_1CYCLE_5;
 8000ad4:	4b18      	ldr	r3, [pc, #96]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000ad6:	2200      	movs	r2, #0
 8000ad8:	635a      	str	r2, [r3, #52]	; 0x34
	hadc1.Init.SamplingTimeCommon2 = ADC_SAMPLETIME_1CYCLE_5;
 8000ada:	4b17      	ldr	r3, [pc, #92]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000adc:	2200      	movs	r2, #0
 8000ade:	639a      	str	r2, [r3, #56]	; 0x38
	hadc1.Init.OversamplingMode = DISABLE;
 8000ae0:	4b15      	ldr	r3, [pc, #84]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000ae2:	223c      	movs	r2, #60	; 0x3c
 8000ae4:	2100      	movs	r1, #0
 8000ae6:	5499      	strb	r1, [r3, r2]
	hadc1.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 8000ae8:	4b13      	ldr	r3, [pc, #76]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000aea:	2200      	movs	r2, #0
 8000aec:	64da      	str	r2, [r3, #76]	; 0x4c
	if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 8000aee:	4b12      	ldr	r3, [pc, #72]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000af0:	0018      	movs	r0, r3
 8000af2:	f000 fb3b 	bl	800116c <HAL_ADC_Init>
 8000af6:	1e03      	subs	r3, r0, #0
 8000af8:	d001      	beq.n	8000afe <MX_ADC1_Init+0xd2>
		Error_Handler();
 8000afa:	f000 f887 	bl	8000c0c <Error_Handler>
	}

	/** Configure Regular Channel
	 */
	sConfig.Channel = ADC_CHANNEL_13;
 8000afe:	211c      	movs	r1, #28
 8000b00:	187b      	adds	r3, r7, r1
 8000b02:	4a0f      	ldr	r2, [pc, #60]	; (8000b40 <MX_ADC1_Init+0x114>)
 8000b04:	601a      	str	r2, [r3, #0]
	sConfig.Rank = ADC_REGULAR_RANK_1;
 8000b06:	187b      	adds	r3, r7, r1
 8000b08:	2200      	movs	r2, #0
 8000b0a:	605a      	str	r2, [r3, #4]
	sConfig.SamplingTime = ADC_SAMPLINGTIME_COMMON_1;
 8000b0c:	187b      	adds	r3, r7, r1
 8000b0e:	2200      	movs	r2, #0
 8000b10:	609a      	str	r2, [r3, #8]
	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 8000b12:	187a      	adds	r2, r7, r1
 8000b14:	4b08      	ldr	r3, [pc, #32]	; (8000b38 <MX_ADC1_Init+0x10c>)
 8000b16:	0011      	movs	r1, r2
 8000b18:	0018      	movs	r0, r3
 8000b1a:	f000 fd49 	bl	80015b0 <HAL_ADC_ConfigChannel>
 8000b1e:	1e03      	subs	r3, r0, #0
 8000b20:	d001      	beq.n	8000b26 <MX_ADC1_Init+0xfa>
		Error_Handler();
 8000b22:	f000 f873 	bl	8000c0c <Error_Handler>
	}
	/* USER CODE BEGIN ADC1_Init 2 */

	/* USER CODE END ADC1_Init 2 */

}
 8000b26:	46c0      	nop			; (mov r8, r8)
 8000b28:	46bd      	mov	sp, r7
 8000b2a:	b00a      	add	sp, #40	; 0x28
 8000b2c:	bd80      	pop	{r7, pc}
 8000b2e:	46c0      	nop			; (mov r8, r8)
 8000b30:	40021000 	.word	0x40021000
 8000b34:	50000800 	.word	0x50000800
 8000b38:	20000044 	.word	0x20000044
 8000b3c:	40012400 	.word	0x40012400
 8000b40:	34002000 	.word	0x34002000

08000b44 <MX_GPIO_Init>:
/**
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void) {
 8000b44:	b590      	push	{r4, r7, lr}
 8000b46:	b089      	sub	sp, #36	; 0x24
 8000b48:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 8000b4a:	240c      	movs	r4, #12
 8000b4c:	193b      	adds	r3, r7, r4
 8000b4e:	0018      	movs	r0, r3
 8000b50:	2314      	movs	r3, #20
 8000b52:	001a      	movs	r2, r3
 8000b54:	2100      	movs	r1, #0
 8000b56:	f001 fe2f 	bl	80027b8 <memset>

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8000b5a:	4b29      	ldr	r3, [pc, #164]	; (8000c00 <MX_GPIO_Init+0xbc>)
 8000b5c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000b5e:	4b28      	ldr	r3, [pc, #160]	; (8000c00 <MX_GPIO_Init+0xbc>)
 8000b60:	2102      	movs	r1, #2
 8000b62:	430a      	orrs	r2, r1
 8000b64:	635a      	str	r2, [r3, #52]	; 0x34
 8000b66:	4b26      	ldr	r3, [pc, #152]	; (8000c00 <MX_GPIO_Init+0xbc>)
 8000b68:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000b6a:	2202      	movs	r2, #2
 8000b6c:	4013      	ands	r3, r2
 8000b6e:	60bb      	str	r3, [r7, #8]
 8000b70:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8000b72:	4b23      	ldr	r3, [pc, #140]	; (8000c00 <MX_GPIO_Init+0xbc>)
 8000b74:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000b76:	4b22      	ldr	r3, [pc, #136]	; (8000c00 <MX_GPIO_Init+0xbc>)
 8000b78:	2101      	movs	r1, #1
 8000b7a:	430a      	orrs	r2, r1
 8000b7c:	635a      	str	r2, [r3, #52]	; 0x34
 8000b7e:	4b20      	ldr	r3, [pc, #128]	; (8000c00 <MX_GPIO_Init+0xbc>)
 8000b80:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000b82:	2201      	movs	r2, #1
 8000b84:	4013      	ands	r3, r2
 8000b86:	607b      	str	r3, [r7, #4]
 8000b88:	687b      	ldr	r3, [r7, #4]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(LED_1_BLUE_GPIO_Port, LED_1_BLUE_Pin, GPIO_PIN_RESET);
 8000b8a:	4b1e      	ldr	r3, [pc, #120]	; (8000c04 <MX_GPIO_Init+0xc0>)
 8000b8c:	2200      	movs	r2, #0
 8000b8e:	2180      	movs	r1, #128	; 0x80
 8000b90:	0018      	movs	r0, r3
 8000b92:	f001 f99c 	bl	8001ece <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOA, LED_2_YELLOW_Pin | LED_3_GREEN_Pin | LED_4_RED_Pin,
 8000b96:	491c      	ldr	r1, [pc, #112]	; (8000c08 <MX_GPIO_Init+0xc4>)
 8000b98:	23a0      	movs	r3, #160	; 0xa0
 8000b9a:	05db      	lsls	r3, r3, #23
 8000b9c:	2200      	movs	r2, #0
 8000b9e:	0018      	movs	r0, r3
 8000ba0:	f001 f995 	bl	8001ece <HAL_GPIO_WritePin>
			GPIO_PIN_RESET);

	/*Configure GPIO pin : LED_1_BLUE_Pin */
	GPIO_InitStruct.Pin = LED_1_BLUE_Pin;
 8000ba4:	193b      	adds	r3, r7, r4
 8000ba6:	2280      	movs	r2, #128	; 0x80
 8000ba8:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000baa:	193b      	adds	r3, r7, r4
 8000bac:	2201      	movs	r2, #1
 8000bae:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000bb0:	193b      	adds	r3, r7, r4
 8000bb2:	2201      	movs	r2, #1
 8000bb4:	609a      	str	r2, [r3, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000bb6:	193b      	adds	r3, r7, r4
 8000bb8:	2200      	movs	r2, #0
 8000bba:	60da      	str	r2, [r3, #12]
	HAL_GPIO_Init(LED_1_BLUE_GPIO_Port, &GPIO_InitStruct);
 8000bbc:	193b      	adds	r3, r7, r4
 8000bbe:	4a11      	ldr	r2, [pc, #68]	; (8000c04 <MX_GPIO_Init+0xc0>)
 8000bc0:	0019      	movs	r1, r3
 8000bc2:	0010      	movs	r0, r2
 8000bc4:	f000 fffc 	bl	8001bc0 <HAL_GPIO_Init>

	/*Configure GPIO pins : LED_2_YELLOW_Pin LED_3_GREEN_Pin LED_4_RED_Pin */
	GPIO_InitStruct.Pin = LED_2_YELLOW_Pin | LED_3_GREEN_Pin | LED_4_RED_Pin;
 8000bc8:	0021      	movs	r1, r4
 8000bca:	187b      	adds	r3, r7, r1
 8000bcc:	4a0e      	ldr	r2, [pc, #56]	; (8000c08 <MX_GPIO_Init+0xc4>)
 8000bce:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000bd0:	187b      	adds	r3, r7, r1
 8000bd2:	2201      	movs	r2, #1
 8000bd4:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000bd6:	187b      	adds	r3, r7, r1
 8000bd8:	2201      	movs	r2, #1
 8000bda:	609a      	str	r2, [r3, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000bdc:	187b      	adds	r3, r7, r1
 8000bde:	2200      	movs	r2, #0
 8000be0:	60da      	str	r2, [r3, #12]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000be2:	187a      	adds	r2, r7, r1
 8000be4:	23a0      	movs	r3, #160	; 0xa0
 8000be6:	05db      	lsls	r3, r3, #23
 8000be8:	0011      	movs	r1, r2
 8000bea:	0018      	movs	r0, r3
 8000bec:	f000 ffe8 	bl	8001bc0 <HAL_GPIO_Init>

	/**/
	HAL_SYSCFG_SetPinBinding(
 8000bf0:	2014      	movs	r0, #20
 8000bf2:	f000 f98b 	bl	8000f0c <HAL_SYSCFG_SetPinBinding>
	HAL_BIND_SO8_PIN1_PB7 | HAL_BIND_SO8_PIN4_PA0 | HAL_BIND_SO8_PIN5_PA11);

}
 8000bf6:	46c0      	nop			; (mov r8, r8)
 8000bf8:	46bd      	mov	sp, r7
 8000bfa:	b009      	add	sp, #36	; 0x24
 8000bfc:	bd90      	pop	{r4, r7, pc}
 8000bfe:	46c0      	nop			; (mov r8, r8)
 8000c00:	40021000 	.word	0x40021000
 8000c04:	50000400 	.word	0x50000400
 8000c08:	00001801 	.word	0x00001801

08000c0c <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 8000c0c:	b580      	push	{r7, lr}
 8000c0e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000c10:	b672      	cpsid	i
}
 8000c12:	46c0      	nop			; (mov r8, r8)
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8000c14:	e7fe      	b.n	8000c14 <Error_Handler+0x8>
	...

08000c18 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000c18:	b580      	push	{r7, lr}
 8000c1a:	b082      	sub	sp, #8
 8000c1c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000c1e:	4b0f      	ldr	r3, [pc, #60]	; (8000c5c <HAL_MspInit+0x44>)
 8000c20:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000c22:	4b0e      	ldr	r3, [pc, #56]	; (8000c5c <HAL_MspInit+0x44>)
 8000c24:	2101      	movs	r1, #1
 8000c26:	430a      	orrs	r2, r1
 8000c28:	641a      	str	r2, [r3, #64]	; 0x40
 8000c2a:	4b0c      	ldr	r3, [pc, #48]	; (8000c5c <HAL_MspInit+0x44>)
 8000c2c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000c2e:	2201      	movs	r2, #1
 8000c30:	4013      	ands	r3, r2
 8000c32:	607b      	str	r3, [r7, #4]
 8000c34:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000c36:	4b09      	ldr	r3, [pc, #36]	; (8000c5c <HAL_MspInit+0x44>)
 8000c38:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8000c3a:	4b08      	ldr	r3, [pc, #32]	; (8000c5c <HAL_MspInit+0x44>)
 8000c3c:	2180      	movs	r1, #128	; 0x80
 8000c3e:	0549      	lsls	r1, r1, #21
 8000c40:	430a      	orrs	r2, r1
 8000c42:	63da      	str	r2, [r3, #60]	; 0x3c
 8000c44:	4b05      	ldr	r3, [pc, #20]	; (8000c5c <HAL_MspInit+0x44>)
 8000c46:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8000c48:	2380      	movs	r3, #128	; 0x80
 8000c4a:	055b      	lsls	r3, r3, #21
 8000c4c:	4013      	ands	r3, r2
 8000c4e:	603b      	str	r3, [r7, #0]
 8000c50:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000c52:	46c0      	nop			; (mov r8, r8)
 8000c54:	46bd      	mov	sp, r7
 8000c56:	b002      	add	sp, #8
 8000c58:	bd80      	pop	{r7, pc}
 8000c5a:	46c0      	nop			; (mov r8, r8)
 8000c5c:	40021000 	.word	0x40021000

08000c60 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8000c60:	b590      	push	{r4, r7, lr}
 8000c62:	b091      	sub	sp, #68	; 0x44
 8000c64:	af00      	add	r7, sp, #0
 8000c66:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c68:	232c      	movs	r3, #44	; 0x2c
 8000c6a:	18fb      	adds	r3, r7, r3
 8000c6c:	0018      	movs	r0, r3
 8000c6e:	2314      	movs	r3, #20
 8000c70:	001a      	movs	r2, r3
 8000c72:	2100      	movs	r1, #0
 8000c74:	f001 fda0 	bl	80027b8 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000c78:	2410      	movs	r4, #16
 8000c7a:	193b      	adds	r3, r7, r4
 8000c7c:	0018      	movs	r0, r3
 8000c7e:	231c      	movs	r3, #28
 8000c80:	001a      	movs	r2, r3
 8000c82:	2100      	movs	r1, #0
 8000c84:	f001 fd98 	bl	80027b8 <memset>
  if(hadc->Instance==ADC1)
 8000c88:	687b      	ldr	r3, [r7, #4]
 8000c8a:	681b      	ldr	r3, [r3, #0]
 8000c8c:	4a20      	ldr	r2, [pc, #128]	; (8000d10 <HAL_ADC_MspInit+0xb0>)
 8000c8e:	4293      	cmp	r3, r2
 8000c90:	d13a      	bne.n	8000d08 <HAL_ADC_MspInit+0xa8>

  /* USER CODE END ADC1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8000c92:	193b      	adds	r3, r7, r4
 8000c94:	2280      	movs	r2, #128	; 0x80
 8000c96:	01d2      	lsls	r2, r2, #7
 8000c98:	601a      	str	r2, [r3, #0]
    PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_SYSCLK;
 8000c9a:	193b      	adds	r3, r7, r4
 8000c9c:	2200      	movs	r2, #0
 8000c9e:	615a      	str	r2, [r3, #20]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000ca0:	193b      	adds	r3, r7, r4
 8000ca2:	0018      	movs	r0, r3
 8000ca4:	f001 fc76 	bl	8002594 <HAL_RCCEx_PeriphCLKConfig>
 8000ca8:	1e03      	subs	r3, r0, #0
 8000caa:	d001      	beq.n	8000cb0 <HAL_ADC_MspInit+0x50>
    {
      Error_Handler();
 8000cac:	f7ff ffae 	bl	8000c0c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_ADC_CLK_ENABLE();
 8000cb0:	4b18      	ldr	r3, [pc, #96]	; (8000d14 <HAL_ADC_MspInit+0xb4>)
 8000cb2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000cb4:	4b17      	ldr	r3, [pc, #92]	; (8000d14 <HAL_ADC_MspInit+0xb4>)
 8000cb6:	2180      	movs	r1, #128	; 0x80
 8000cb8:	0349      	lsls	r1, r1, #13
 8000cba:	430a      	orrs	r2, r1
 8000cbc:	641a      	str	r2, [r3, #64]	; 0x40
 8000cbe:	4b15      	ldr	r3, [pc, #84]	; (8000d14 <HAL_ADC_MspInit+0xb4>)
 8000cc0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000cc2:	2380      	movs	r3, #128	; 0x80
 8000cc4:	035b      	lsls	r3, r3, #13
 8000cc6:	4013      	ands	r3, r2
 8000cc8:	60fb      	str	r3, [r7, #12]
 8000cca:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000ccc:	4b11      	ldr	r3, [pc, #68]	; (8000d14 <HAL_ADC_MspInit+0xb4>)
 8000cce:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000cd0:	4b10      	ldr	r3, [pc, #64]	; (8000d14 <HAL_ADC_MspInit+0xb4>)
 8000cd2:	2101      	movs	r1, #1
 8000cd4:	430a      	orrs	r2, r1
 8000cd6:	635a      	str	r2, [r3, #52]	; 0x34
 8000cd8:	4b0e      	ldr	r3, [pc, #56]	; (8000d14 <HAL_ADC_MspInit+0xb4>)
 8000cda:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000cdc:	2201      	movs	r2, #1
 8000cde:	4013      	ands	r3, r2
 8000ce0:	60bb      	str	r3, [r7, #8]
 8000ce2:	68bb      	ldr	r3, [r7, #8]
    /**ADC1 GPIO Configuration
    PA13     ------> ADC1_IN13
    */
    GPIO_InitStruct.Pin = RNG_Pin;
 8000ce4:	212c      	movs	r1, #44	; 0x2c
 8000ce6:	187b      	adds	r3, r7, r1
 8000ce8:	2280      	movs	r2, #128	; 0x80
 8000cea:	0192      	lsls	r2, r2, #6
 8000cec:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000cee:	187b      	adds	r3, r7, r1
 8000cf0:	2203      	movs	r2, #3
 8000cf2:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cf4:	187b      	adds	r3, r7, r1
 8000cf6:	2200      	movs	r2, #0
 8000cf8:	609a      	str	r2, [r3, #8]
    HAL_GPIO_Init(RNG_GPIO_Port, &GPIO_InitStruct);
 8000cfa:	187a      	adds	r2, r7, r1
 8000cfc:	23a0      	movs	r3, #160	; 0xa0
 8000cfe:	05db      	lsls	r3, r3, #23
 8000d00:	0011      	movs	r1, r2
 8000d02:	0018      	movs	r0, r3
 8000d04:	f000 ff5c 	bl	8001bc0 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8000d08:	46c0      	nop			; (mov r8, r8)
 8000d0a:	46bd      	mov	sp, r7
 8000d0c:	b011      	add	sp, #68	; 0x44
 8000d0e:	bd90      	pop	{r4, r7, pc}
 8000d10:	40012400 	.word	0x40012400
 8000d14:	40021000 	.word	0x40021000

08000d18 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000d18:	b580      	push	{r7, lr}
 8000d1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000d1c:	e7fe      	b.n	8000d1c <NMI_Handler+0x4>

08000d1e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000d1e:	b580      	push	{r7, lr}
 8000d20:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000d22:	e7fe      	b.n	8000d22 <HardFault_Handler+0x4>

08000d24 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000d24:	b580      	push	{r7, lr}
 8000d26:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8000d28:	46c0      	nop			; (mov r8, r8)
 8000d2a:	46bd      	mov	sp, r7
 8000d2c:	bd80      	pop	{r7, pc}

08000d2e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000d2e:	b580      	push	{r7, lr}
 8000d30:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000d32:	46c0      	nop			; (mov r8, r8)
 8000d34:	46bd      	mov	sp, r7
 8000d36:	bd80      	pop	{r7, pc}

08000d38 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000d38:	b580      	push	{r7, lr}
 8000d3a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000d3c:	f000 f8aa 	bl	8000e94 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000d40:	46c0      	nop			; (mov r8, r8)
 8000d42:	46bd      	mov	sp, r7
 8000d44:	bd80      	pop	{r7, pc}
	...

08000d48 <SystemInit>:
 8000d48:	b580      	push	{r7, lr}
 8000d4a:	af00      	add	r7, sp, #0
 8000d4c:	4b03      	ldr	r3, [pc, #12]	; (8000d5c <SystemInit+0x14>)
 8000d4e:	2280      	movs	r2, #128	; 0x80
 8000d50:	0512      	lsls	r2, r2, #20
 8000d52:	609a      	str	r2, [r3, #8]
 8000d54:	46c0      	nop			; (mov r8, r8)
 8000d56:	46bd      	mov	sp, r7
 8000d58:	bd80      	pop	{r7, pc}
 8000d5a:	46c0      	nop			; (mov r8, r8)
 8000d5c:	e000ed00 	.word	0xe000ed00

08000d60 <Reset_Handler>:
 8000d60:	480d      	ldr	r0, [pc, #52]	; (8000d98 <LoopForever+0x2>)
 8000d62:	4685      	mov	sp, r0
 8000d64:	2100      	movs	r1, #0
 8000d66:	e003      	b.n	8000d70 <LoopCopyDataInit>

08000d68 <CopyDataInit>:
 8000d68:	4b0c      	ldr	r3, [pc, #48]	; (8000d9c <LoopForever+0x6>)
 8000d6a:	585b      	ldr	r3, [r3, r1]
 8000d6c:	5043      	str	r3, [r0, r1]
 8000d6e:	3104      	adds	r1, #4

08000d70 <LoopCopyDataInit>:
 8000d70:	480b      	ldr	r0, [pc, #44]	; (8000da0 <LoopForever+0xa>)
 8000d72:	4b0c      	ldr	r3, [pc, #48]	; (8000da4 <LoopForever+0xe>)
 8000d74:	1842      	adds	r2, r0, r1
 8000d76:	429a      	cmp	r2, r3
 8000d78:	d3f6      	bcc.n	8000d68 <CopyDataInit>
 8000d7a:	4a0b      	ldr	r2, [pc, #44]	; (8000da8 <LoopForever+0x12>)
 8000d7c:	e002      	b.n	8000d84 <LoopFillZerobss>

08000d7e <FillZerobss>:
 8000d7e:	2300      	movs	r3, #0
 8000d80:	6013      	str	r3, [r2, #0]
 8000d82:	3204      	adds	r2, #4

08000d84 <LoopFillZerobss>:
 8000d84:	4b09      	ldr	r3, [pc, #36]	; (8000dac <LoopForever+0x16>)
 8000d86:	429a      	cmp	r2, r3
 8000d88:	d3f9      	bcc.n	8000d7e <FillZerobss>
 8000d8a:	f7ff ffdd 	bl	8000d48 <SystemInit>
 8000d8e:	f001 fcef 	bl	8002770 <__libc_init_array>
 8000d92:	f7ff fd79 	bl	8000888 <main>

08000d96 <LoopForever>:
 8000d96:	e7fe      	b.n	8000d96 <LoopForever>
 8000d98:	20001800 	.word	0x20001800
 8000d9c:	08002828 	.word	0x08002828
 8000da0:	20000000 	.word	0x20000000
 8000da4:	20000028 	.word	0x20000028
 8000da8:	20000028 	.word	0x20000028
 8000dac:	20000114 	.word	0x20000114

08000db0 <ADC1_IRQHandler>:
 8000db0:	e7fe      	b.n	8000db0 <ADC1_IRQHandler>
	...

08000db4 <LL_SYSCFG_ConfigPinMux>:
 8000db4:	b580      	push	{r7, lr}
 8000db6:	b082      	sub	sp, #8
 8000db8:	af00      	add	r7, sp, #0
 8000dba:	6078      	str	r0, [r7, #4]
 8000dbc:	4b03      	ldr	r3, [pc, #12]	; (8000dcc <LL_SYSCFG_ConfigPinMux+0x18>)
 8000dbe:	687a      	ldr	r2, [r7, #4]
 8000dc0:	63da      	str	r2, [r3, #60]	; 0x3c
 8000dc2:	46c0      	nop			; (mov r8, r8)
 8000dc4:	46bd      	mov	sp, r7
 8000dc6:	b002      	add	sp, #8
 8000dc8:	bd80      	pop	{r7, pc}
 8000dca:	46c0      	nop			; (mov r8, r8)
 8000dcc:	40010000 	.word	0x40010000

08000dd0 <HAL_Init>:
 8000dd0:	b580      	push	{r7, lr}
 8000dd2:	b082      	sub	sp, #8
 8000dd4:	af00      	add	r7, sp, #0
 8000dd6:	1dfb      	adds	r3, r7, #7
 8000dd8:	2200      	movs	r2, #0
 8000dda:	701a      	strb	r2, [r3, #0]
 8000ddc:	2003      	movs	r0, #3
 8000dde:	f000 f80f 	bl	8000e00 <HAL_InitTick>
 8000de2:	1e03      	subs	r3, r0, #0
 8000de4:	d003      	beq.n	8000dee <HAL_Init+0x1e>
 8000de6:	1dfb      	adds	r3, r7, #7
 8000de8:	2201      	movs	r2, #1
 8000dea:	701a      	strb	r2, [r3, #0]
 8000dec:	e001      	b.n	8000df2 <HAL_Init+0x22>
 8000dee:	f7ff ff13 	bl	8000c18 <HAL_MspInit>
 8000df2:	1dfb      	adds	r3, r7, #7
 8000df4:	781b      	ldrb	r3, [r3, #0]
 8000df6:	0018      	movs	r0, r3
 8000df8:	46bd      	mov	sp, r7
 8000dfa:	b002      	add	sp, #8
 8000dfc:	bd80      	pop	{r7, pc}
	...

08000e00 <HAL_InitTick>:
 8000e00:	b590      	push	{r4, r7, lr}
 8000e02:	b085      	sub	sp, #20
 8000e04:	af00      	add	r7, sp, #0
 8000e06:	6078      	str	r0, [r7, #4]
 8000e08:	230f      	movs	r3, #15
 8000e0a:	18fb      	adds	r3, r7, r3
 8000e0c:	2200      	movs	r2, #0
 8000e0e:	701a      	strb	r2, [r3, #0]
 8000e10:	4b1d      	ldr	r3, [pc, #116]	; (8000e88 <HAL_InitTick+0x88>)
 8000e12:	681b      	ldr	r3, [r3, #0]
 8000e14:	2b00      	cmp	r3, #0
 8000e16:	d02b      	beq.n	8000e70 <HAL_InitTick+0x70>
 8000e18:	4b1c      	ldr	r3, [pc, #112]	; (8000e8c <HAL_InitTick+0x8c>)
 8000e1a:	681c      	ldr	r4, [r3, #0]
 8000e1c:	4b1a      	ldr	r3, [pc, #104]	; (8000e88 <HAL_InitTick+0x88>)
 8000e1e:	681b      	ldr	r3, [r3, #0]
 8000e20:	0019      	movs	r1, r3
 8000e22:	23fa      	movs	r3, #250	; 0xfa
 8000e24:	0098      	lsls	r0, r3, #2
 8000e26:	f7ff f96f 	bl	8000108 <__udivsi3>
 8000e2a:	0003      	movs	r3, r0
 8000e2c:	0019      	movs	r1, r3
 8000e2e:	0020      	movs	r0, r4
 8000e30:	f7ff f96a 	bl	8000108 <__udivsi3>
 8000e34:	0003      	movs	r3, r0
 8000e36:	0018      	movs	r0, r3
 8000e38:	f000 feb5 	bl	8001ba6 <HAL_SYSTICK_Config>
 8000e3c:	1e03      	subs	r3, r0, #0
 8000e3e:	d112      	bne.n	8000e66 <HAL_InitTick+0x66>
 8000e40:	687b      	ldr	r3, [r7, #4]
 8000e42:	2b03      	cmp	r3, #3
 8000e44:	d80a      	bhi.n	8000e5c <HAL_InitTick+0x5c>
 8000e46:	6879      	ldr	r1, [r7, #4]
 8000e48:	2301      	movs	r3, #1
 8000e4a:	425b      	negs	r3, r3
 8000e4c:	2200      	movs	r2, #0
 8000e4e:	0018      	movs	r0, r3
 8000e50:	f000 fe94 	bl	8001b7c <HAL_NVIC_SetPriority>
 8000e54:	4b0e      	ldr	r3, [pc, #56]	; (8000e90 <HAL_InitTick+0x90>)
 8000e56:	687a      	ldr	r2, [r7, #4]
 8000e58:	601a      	str	r2, [r3, #0]
 8000e5a:	e00d      	b.n	8000e78 <HAL_InitTick+0x78>
 8000e5c:	230f      	movs	r3, #15
 8000e5e:	18fb      	adds	r3, r7, r3
 8000e60:	2201      	movs	r2, #1
 8000e62:	701a      	strb	r2, [r3, #0]
 8000e64:	e008      	b.n	8000e78 <HAL_InitTick+0x78>
 8000e66:	230f      	movs	r3, #15
 8000e68:	18fb      	adds	r3, r7, r3
 8000e6a:	2201      	movs	r2, #1
 8000e6c:	701a      	strb	r2, [r3, #0]
 8000e6e:	e003      	b.n	8000e78 <HAL_InitTick+0x78>
 8000e70:	230f      	movs	r3, #15
 8000e72:	18fb      	adds	r3, r7, r3
 8000e74:	2201      	movs	r2, #1
 8000e76:	701a      	strb	r2, [r3, #0]
 8000e78:	230f      	movs	r3, #15
 8000e7a:	18fb      	adds	r3, r7, r3
 8000e7c:	781b      	ldrb	r3, [r3, #0]
 8000e7e:	0018      	movs	r0, r3
 8000e80:	46bd      	mov	sp, r7
 8000e82:	b005      	add	sp, #20
 8000e84:	bd90      	pop	{r4, r7, pc}
 8000e86:	46c0      	nop			; (mov r8, r8)
 8000e88:	20000024 	.word	0x20000024
 8000e8c:	2000001c 	.word	0x2000001c
 8000e90:	20000020 	.word	0x20000020

08000e94 <HAL_IncTick>:
 8000e94:	b580      	push	{r7, lr}
 8000e96:	af00      	add	r7, sp, #0
 8000e98:	4b04      	ldr	r3, [pc, #16]	; (8000eac <HAL_IncTick+0x18>)
 8000e9a:	681a      	ldr	r2, [r3, #0]
 8000e9c:	4b04      	ldr	r3, [pc, #16]	; (8000eb0 <HAL_IncTick+0x1c>)
 8000e9e:	681b      	ldr	r3, [r3, #0]
 8000ea0:	18d2      	adds	r2, r2, r3
 8000ea2:	4b02      	ldr	r3, [pc, #8]	; (8000eac <HAL_IncTick+0x18>)
 8000ea4:	601a      	str	r2, [r3, #0]
 8000ea6:	46c0      	nop			; (mov r8, r8)
 8000ea8:	46bd      	mov	sp, r7
 8000eaa:	bd80      	pop	{r7, pc}
 8000eac:	20000110 	.word	0x20000110
 8000eb0:	20000024 	.word	0x20000024

08000eb4 <HAL_GetTick>:
 8000eb4:	b580      	push	{r7, lr}
 8000eb6:	af00      	add	r7, sp, #0
 8000eb8:	4b02      	ldr	r3, [pc, #8]	; (8000ec4 <HAL_GetTick+0x10>)
 8000eba:	681b      	ldr	r3, [r3, #0]
 8000ebc:	0018      	movs	r0, r3
 8000ebe:	46bd      	mov	sp, r7
 8000ec0:	bd80      	pop	{r7, pc}
 8000ec2:	46c0      	nop			; (mov r8, r8)
 8000ec4:	20000110 	.word	0x20000110

08000ec8 <HAL_Delay>:
 8000ec8:	b580      	push	{r7, lr}
 8000eca:	b084      	sub	sp, #16
 8000ecc:	af00      	add	r7, sp, #0
 8000ece:	6078      	str	r0, [r7, #4]
 8000ed0:	f7ff fff0 	bl	8000eb4 <HAL_GetTick>
 8000ed4:	0003      	movs	r3, r0
 8000ed6:	60bb      	str	r3, [r7, #8]
 8000ed8:	687b      	ldr	r3, [r7, #4]
 8000eda:	60fb      	str	r3, [r7, #12]
 8000edc:	68fb      	ldr	r3, [r7, #12]
 8000ede:	3301      	adds	r3, #1
 8000ee0:	d004      	beq.n	8000eec <HAL_Delay+0x24>
 8000ee2:	4b09      	ldr	r3, [pc, #36]	; (8000f08 <HAL_Delay+0x40>)
 8000ee4:	681b      	ldr	r3, [r3, #0]
 8000ee6:	68fa      	ldr	r2, [r7, #12]
 8000ee8:	18d3      	adds	r3, r2, r3
 8000eea:	60fb      	str	r3, [r7, #12]
 8000eec:	46c0      	nop			; (mov r8, r8)
 8000eee:	f7ff ffe1 	bl	8000eb4 <HAL_GetTick>
 8000ef2:	0002      	movs	r2, r0
 8000ef4:	68bb      	ldr	r3, [r7, #8]
 8000ef6:	1ad3      	subs	r3, r2, r3
 8000ef8:	68fa      	ldr	r2, [r7, #12]
 8000efa:	429a      	cmp	r2, r3
 8000efc:	d8f7      	bhi.n	8000eee <HAL_Delay+0x26>
 8000efe:	46c0      	nop			; (mov r8, r8)
 8000f00:	46c0      	nop			; (mov r8, r8)
 8000f02:	46bd      	mov	sp, r7
 8000f04:	b004      	add	sp, #16
 8000f06:	bd80      	pop	{r7, pc}
 8000f08:	20000024 	.word	0x20000024

08000f0c <HAL_SYSCFG_SetPinBinding>:
 8000f0c:	b580      	push	{r7, lr}
 8000f0e:	b082      	sub	sp, #8
 8000f10:	af00      	add	r7, sp, #0
 8000f12:	6078      	str	r0, [r7, #4]
 8000f14:	687b      	ldr	r3, [r7, #4]
 8000f16:	0018      	movs	r0, r3
 8000f18:	f7ff ff4c 	bl	8000db4 <LL_SYSCFG_ConfigPinMux>
 8000f1c:	46c0      	nop			; (mov r8, r8)
 8000f1e:	46bd      	mov	sp, r7
 8000f20:	b002      	add	sp, #8
 8000f22:	bd80      	pop	{r7, pc}

08000f24 <LL_ADC_SetCommonPathInternalCh>:
 8000f24:	b580      	push	{r7, lr}
 8000f26:	b082      	sub	sp, #8
 8000f28:	af00      	add	r7, sp, #0
 8000f2a:	6078      	str	r0, [r7, #4]
 8000f2c:	6039      	str	r1, [r7, #0]
 8000f2e:	687b      	ldr	r3, [r7, #4]
 8000f30:	681b      	ldr	r3, [r3, #0]
 8000f32:	4a05      	ldr	r2, [pc, #20]	; (8000f48 <LL_ADC_SetCommonPathInternalCh+0x24>)
 8000f34:	401a      	ands	r2, r3
 8000f36:	683b      	ldr	r3, [r7, #0]
 8000f38:	431a      	orrs	r2, r3
 8000f3a:	687b      	ldr	r3, [r7, #4]
 8000f3c:	601a      	str	r2, [r3, #0]
 8000f3e:	46c0      	nop			; (mov r8, r8)
 8000f40:	46bd      	mov	sp, r7
 8000f42:	b002      	add	sp, #8
 8000f44:	bd80      	pop	{r7, pc}
 8000f46:	46c0      	nop			; (mov r8, r8)
 8000f48:	ff3fffff 	.word	0xff3fffff

08000f4c <LL_ADC_GetCommonPathInternalCh>:
 8000f4c:	b580      	push	{r7, lr}
 8000f4e:	b082      	sub	sp, #8
 8000f50:	af00      	add	r7, sp, #0
 8000f52:	6078      	str	r0, [r7, #4]
 8000f54:	687b      	ldr	r3, [r7, #4]
 8000f56:	681a      	ldr	r2, [r3, #0]
 8000f58:	23c0      	movs	r3, #192	; 0xc0
 8000f5a:	041b      	lsls	r3, r3, #16
 8000f5c:	4013      	ands	r3, r2
 8000f5e:	0018      	movs	r0, r3
 8000f60:	46bd      	mov	sp, r7
 8000f62:	b002      	add	sp, #8
 8000f64:	bd80      	pop	{r7, pc}

08000f66 <LL_ADC_SetSamplingTimeCommonChannels>:
 8000f66:	b580      	push	{r7, lr}
 8000f68:	b084      	sub	sp, #16
 8000f6a:	af00      	add	r7, sp, #0
 8000f6c:	60f8      	str	r0, [r7, #12]
 8000f6e:	60b9      	str	r1, [r7, #8]
 8000f70:	607a      	str	r2, [r7, #4]
 8000f72:	68fb      	ldr	r3, [r7, #12]
 8000f74:	695b      	ldr	r3, [r3, #20]
 8000f76:	68ba      	ldr	r2, [r7, #8]
 8000f78:	2104      	movs	r1, #4
 8000f7a:	400a      	ands	r2, r1
 8000f7c:	2107      	movs	r1, #7
 8000f7e:	4091      	lsls	r1, r2
 8000f80:	000a      	movs	r2, r1
 8000f82:	43d2      	mvns	r2, r2
 8000f84:	401a      	ands	r2, r3
 8000f86:	68bb      	ldr	r3, [r7, #8]
 8000f88:	2104      	movs	r1, #4
 8000f8a:	400b      	ands	r3, r1
 8000f8c:	6879      	ldr	r1, [r7, #4]
 8000f8e:	4099      	lsls	r1, r3
 8000f90:	000b      	movs	r3, r1
 8000f92:	431a      	orrs	r2, r3
 8000f94:	68fb      	ldr	r3, [r7, #12]
 8000f96:	615a      	str	r2, [r3, #20]
 8000f98:	46c0      	nop			; (mov r8, r8)
 8000f9a:	46bd      	mov	sp, r7
 8000f9c:	b004      	add	sp, #16
 8000f9e:	bd80      	pop	{r7, pc}

08000fa0 <LL_ADC_GetSamplingTimeCommonChannels>:
 8000fa0:	b580      	push	{r7, lr}
 8000fa2:	b082      	sub	sp, #8
 8000fa4:	af00      	add	r7, sp, #0
 8000fa6:	6078      	str	r0, [r7, #4]
 8000fa8:	6039      	str	r1, [r7, #0]
 8000faa:	687b      	ldr	r3, [r7, #4]
 8000fac:	695b      	ldr	r3, [r3, #20]
 8000fae:	683a      	ldr	r2, [r7, #0]
 8000fb0:	2104      	movs	r1, #4
 8000fb2:	400a      	ands	r2, r1
 8000fb4:	2107      	movs	r1, #7
 8000fb6:	4091      	lsls	r1, r2
 8000fb8:	000a      	movs	r2, r1
 8000fba:	401a      	ands	r2, r3
 8000fbc:	683b      	ldr	r3, [r7, #0]
 8000fbe:	2104      	movs	r1, #4
 8000fc0:	400b      	ands	r3, r1
 8000fc2:	40da      	lsrs	r2, r3
 8000fc4:	0013      	movs	r3, r2
 8000fc6:	0018      	movs	r0, r3
 8000fc8:	46bd      	mov	sp, r7
 8000fca:	b002      	add	sp, #8
 8000fcc:	bd80      	pop	{r7, pc}

08000fce <LL_ADC_REG_SetSequencerRanks>:
 8000fce:	b580      	push	{r7, lr}
 8000fd0:	b084      	sub	sp, #16
 8000fd2:	af00      	add	r7, sp, #0
 8000fd4:	60f8      	str	r0, [r7, #12]
 8000fd6:	60b9      	str	r1, [r7, #8]
 8000fd8:	607a      	str	r2, [r7, #4]
 8000fda:	68fb      	ldr	r3, [r7, #12]
 8000fdc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000fde:	68ba      	ldr	r2, [r7, #8]
 8000fe0:	211f      	movs	r1, #31
 8000fe2:	400a      	ands	r2, r1
 8000fe4:	210f      	movs	r1, #15
 8000fe6:	4091      	lsls	r1, r2
 8000fe8:	000a      	movs	r2, r1
 8000fea:	43d2      	mvns	r2, r2
 8000fec:	401a      	ands	r2, r3
 8000fee:	687b      	ldr	r3, [r7, #4]
 8000ff0:	0e9b      	lsrs	r3, r3, #26
 8000ff2:	210f      	movs	r1, #15
 8000ff4:	4019      	ands	r1, r3
 8000ff6:	68bb      	ldr	r3, [r7, #8]
 8000ff8:	201f      	movs	r0, #31
 8000ffa:	4003      	ands	r3, r0
 8000ffc:	4099      	lsls	r1, r3
 8000ffe:	000b      	movs	r3, r1
 8001000:	431a      	orrs	r2, r3
 8001002:	68fb      	ldr	r3, [r7, #12]
 8001004:	629a      	str	r2, [r3, #40]	; 0x28
 8001006:	46c0      	nop			; (mov r8, r8)
 8001008:	46bd      	mov	sp, r7
 800100a:	b004      	add	sp, #16
 800100c:	bd80      	pop	{r7, pc}

0800100e <LL_ADC_REG_SetSequencerChAdd>:
 800100e:	b580      	push	{r7, lr}
 8001010:	b082      	sub	sp, #8
 8001012:	af00      	add	r7, sp, #0
 8001014:	6078      	str	r0, [r7, #4]
 8001016:	6039      	str	r1, [r7, #0]
 8001018:	687b      	ldr	r3, [r7, #4]
 800101a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800101c:	683b      	ldr	r3, [r7, #0]
 800101e:	025b      	lsls	r3, r3, #9
 8001020:	0a5b      	lsrs	r3, r3, #9
 8001022:	431a      	orrs	r2, r3
 8001024:	687b      	ldr	r3, [r7, #4]
 8001026:	629a      	str	r2, [r3, #40]	; 0x28
 8001028:	46c0      	nop			; (mov r8, r8)
 800102a:	46bd      	mov	sp, r7
 800102c:	b002      	add	sp, #8
 800102e:	bd80      	pop	{r7, pc}

08001030 <LL_ADC_REG_SetSequencerChRem>:
 8001030:	b580      	push	{r7, lr}
 8001032:	b082      	sub	sp, #8
 8001034:	af00      	add	r7, sp, #0
 8001036:	6078      	str	r0, [r7, #4]
 8001038:	6039      	str	r1, [r7, #0]
 800103a:	687b      	ldr	r3, [r7, #4]
 800103c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800103e:	683a      	ldr	r2, [r7, #0]
 8001040:	0252      	lsls	r2, r2, #9
 8001042:	0a52      	lsrs	r2, r2, #9
 8001044:	43d2      	mvns	r2, r2
 8001046:	401a      	ands	r2, r3
 8001048:	687b      	ldr	r3, [r7, #4]
 800104a:	629a      	str	r2, [r3, #40]	; 0x28
 800104c:	46c0      	nop			; (mov r8, r8)
 800104e:	46bd      	mov	sp, r7
 8001050:	b002      	add	sp, #8
 8001052:	bd80      	pop	{r7, pc}

08001054 <LL_ADC_SetChannelSamplingTime>:
 8001054:	b580      	push	{r7, lr}
 8001056:	b084      	sub	sp, #16
 8001058:	af00      	add	r7, sp, #0
 800105a:	60f8      	str	r0, [r7, #12]
 800105c:	60b9      	str	r1, [r7, #8]
 800105e:	607a      	str	r2, [r7, #4]
 8001060:	68fb      	ldr	r3, [r7, #12]
 8001062:	695b      	ldr	r3, [r3, #20]
 8001064:	68ba      	ldr	r2, [r7, #8]
 8001066:	0212      	lsls	r2, r2, #8
 8001068:	43d2      	mvns	r2, r2
 800106a:	401a      	ands	r2, r3
 800106c:	68bb      	ldr	r3, [r7, #8]
 800106e:	021b      	lsls	r3, r3, #8
 8001070:	6879      	ldr	r1, [r7, #4]
 8001072:	400b      	ands	r3, r1
 8001074:	4904      	ldr	r1, [pc, #16]	; (8001088 <LL_ADC_SetChannelSamplingTime+0x34>)
 8001076:	400b      	ands	r3, r1
 8001078:	431a      	orrs	r2, r3
 800107a:	68fb      	ldr	r3, [r7, #12]
 800107c:	615a      	str	r2, [r3, #20]
 800107e:	46c0      	nop			; (mov r8, r8)
 8001080:	46bd      	mov	sp, r7
 8001082:	b004      	add	sp, #16
 8001084:	bd80      	pop	{r7, pc}
 8001086:	46c0      	nop			; (mov r8, r8)
 8001088:	7fffff00 	.word	0x7fffff00

0800108c <LL_ADC_EnableInternalRegulator>:
 800108c:	b580      	push	{r7, lr}
 800108e:	b082      	sub	sp, #8
 8001090:	af00      	add	r7, sp, #0
 8001092:	6078      	str	r0, [r7, #4]
 8001094:	687b      	ldr	r3, [r7, #4]
 8001096:	689b      	ldr	r3, [r3, #8]
 8001098:	4a05      	ldr	r2, [pc, #20]	; (80010b0 <LL_ADC_EnableInternalRegulator+0x24>)
 800109a:	4013      	ands	r3, r2
 800109c:	2280      	movs	r2, #128	; 0x80
 800109e:	0552      	lsls	r2, r2, #21
 80010a0:	431a      	orrs	r2, r3
 80010a2:	687b      	ldr	r3, [r7, #4]
 80010a4:	609a      	str	r2, [r3, #8]
 80010a6:	46c0      	nop			; (mov r8, r8)
 80010a8:	46bd      	mov	sp, r7
 80010aa:	b002      	add	sp, #8
 80010ac:	bd80      	pop	{r7, pc}
 80010ae:	46c0      	nop			; (mov r8, r8)
 80010b0:	6fffffe8 	.word	0x6fffffe8

080010b4 <LL_ADC_IsInternalRegulatorEnabled>:
 80010b4:	b580      	push	{r7, lr}
 80010b6:	b082      	sub	sp, #8
 80010b8:	af00      	add	r7, sp, #0
 80010ba:	6078      	str	r0, [r7, #4]
 80010bc:	687b      	ldr	r3, [r7, #4]
 80010be:	689a      	ldr	r2, [r3, #8]
 80010c0:	2380      	movs	r3, #128	; 0x80
 80010c2:	055b      	lsls	r3, r3, #21
 80010c4:	401a      	ands	r2, r3
 80010c6:	2380      	movs	r3, #128	; 0x80
 80010c8:	055b      	lsls	r3, r3, #21
 80010ca:	429a      	cmp	r2, r3
 80010cc:	d101      	bne.n	80010d2 <LL_ADC_IsInternalRegulatorEnabled+0x1e>
 80010ce:	2301      	movs	r3, #1
 80010d0:	e000      	b.n	80010d4 <LL_ADC_IsInternalRegulatorEnabled+0x20>
 80010d2:	2300      	movs	r3, #0
 80010d4:	0018      	movs	r0, r3
 80010d6:	46bd      	mov	sp, r7
 80010d8:	b002      	add	sp, #8
 80010da:	bd80      	pop	{r7, pc}

080010dc <LL_ADC_Enable>:
 80010dc:	b580      	push	{r7, lr}
 80010de:	b082      	sub	sp, #8
 80010e0:	af00      	add	r7, sp, #0
 80010e2:	6078      	str	r0, [r7, #4]
 80010e4:	687b      	ldr	r3, [r7, #4]
 80010e6:	689b      	ldr	r3, [r3, #8]
 80010e8:	4a04      	ldr	r2, [pc, #16]	; (80010fc <LL_ADC_Enable+0x20>)
 80010ea:	4013      	ands	r3, r2
 80010ec:	2201      	movs	r2, #1
 80010ee:	431a      	orrs	r2, r3
 80010f0:	687b      	ldr	r3, [r7, #4]
 80010f2:	609a      	str	r2, [r3, #8]
 80010f4:	46c0      	nop			; (mov r8, r8)
 80010f6:	46bd      	mov	sp, r7
 80010f8:	b002      	add	sp, #8
 80010fa:	bd80      	pop	{r7, pc}
 80010fc:	7fffffe8 	.word	0x7fffffe8

08001100 <LL_ADC_IsEnabled>:
 8001100:	b580      	push	{r7, lr}
 8001102:	b082      	sub	sp, #8
 8001104:	af00      	add	r7, sp, #0
 8001106:	6078      	str	r0, [r7, #4]
 8001108:	687b      	ldr	r3, [r7, #4]
 800110a:	689b      	ldr	r3, [r3, #8]
 800110c:	2201      	movs	r2, #1
 800110e:	4013      	ands	r3, r2
 8001110:	2b01      	cmp	r3, #1
 8001112:	d101      	bne.n	8001118 <LL_ADC_IsEnabled+0x18>
 8001114:	2301      	movs	r3, #1
 8001116:	e000      	b.n	800111a <LL_ADC_IsEnabled+0x1a>
 8001118:	2300      	movs	r3, #0
 800111a:	0018      	movs	r0, r3
 800111c:	46bd      	mov	sp, r7
 800111e:	b002      	add	sp, #8
 8001120:	bd80      	pop	{r7, pc}
	...

08001124 <LL_ADC_REG_StartConversion>:
 8001124:	b580      	push	{r7, lr}
 8001126:	b082      	sub	sp, #8
 8001128:	af00      	add	r7, sp, #0
 800112a:	6078      	str	r0, [r7, #4]
 800112c:	687b      	ldr	r3, [r7, #4]
 800112e:	689b      	ldr	r3, [r3, #8]
 8001130:	4a04      	ldr	r2, [pc, #16]	; (8001144 <LL_ADC_REG_StartConversion+0x20>)
 8001132:	4013      	ands	r3, r2
 8001134:	2204      	movs	r2, #4
 8001136:	431a      	orrs	r2, r3
 8001138:	687b      	ldr	r3, [r7, #4]
 800113a:	609a      	str	r2, [r3, #8]
 800113c:	46c0      	nop			; (mov r8, r8)
 800113e:	46bd      	mov	sp, r7
 8001140:	b002      	add	sp, #8
 8001142:	bd80      	pop	{r7, pc}
 8001144:	7fffffe8 	.word	0x7fffffe8

08001148 <LL_ADC_REG_IsConversionOngoing>:
 8001148:	b580      	push	{r7, lr}
 800114a:	b082      	sub	sp, #8
 800114c:	af00      	add	r7, sp, #0
 800114e:	6078      	str	r0, [r7, #4]
 8001150:	687b      	ldr	r3, [r7, #4]
 8001152:	689b      	ldr	r3, [r3, #8]
 8001154:	2204      	movs	r2, #4
 8001156:	4013      	ands	r3, r2
 8001158:	2b04      	cmp	r3, #4
 800115a:	d101      	bne.n	8001160 <LL_ADC_REG_IsConversionOngoing+0x18>
 800115c:	2301      	movs	r3, #1
 800115e:	e000      	b.n	8001162 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8001160:	2300      	movs	r3, #0
 8001162:	0018      	movs	r0, r3
 8001164:	46bd      	mov	sp, r7
 8001166:	b002      	add	sp, #8
 8001168:	bd80      	pop	{r7, pc}
	...

0800116c <HAL_ADC_Init>:
 800116c:	b580      	push	{r7, lr}
 800116e:	b088      	sub	sp, #32
 8001170:	af00      	add	r7, sp, #0
 8001172:	6078      	str	r0, [r7, #4]
 8001174:	231f      	movs	r3, #31
 8001176:	18fb      	adds	r3, r7, r3
 8001178:	2200      	movs	r2, #0
 800117a:	701a      	strb	r2, [r3, #0]
 800117c:	2300      	movs	r3, #0
 800117e:	61bb      	str	r3, [r7, #24]
 8001180:	2300      	movs	r3, #0
 8001182:	617b      	str	r3, [r7, #20]
 8001184:	2300      	movs	r3, #0
 8001186:	60bb      	str	r3, [r7, #8]
 8001188:	687b      	ldr	r3, [r7, #4]
 800118a:	2b00      	cmp	r3, #0
 800118c:	d101      	bne.n	8001192 <HAL_ADC_Init+0x26>
 800118e:	2301      	movs	r3, #1
 8001190:	e1a0      	b.n	80014d4 <HAL_ADC_Init+0x368>
 8001192:	687b      	ldr	r3, [r7, #4]
 8001194:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001196:	2b00      	cmp	r3, #0
 8001198:	d10a      	bne.n	80011b0 <HAL_ADC_Init+0x44>
 800119a:	687b      	ldr	r3, [r7, #4]
 800119c:	0018      	movs	r0, r3
 800119e:	f7ff fd5f 	bl	8000c60 <HAL_ADC_MspInit>
 80011a2:	687b      	ldr	r3, [r7, #4]
 80011a4:	2200      	movs	r2, #0
 80011a6:	65da      	str	r2, [r3, #92]	; 0x5c
 80011a8:	687b      	ldr	r3, [r7, #4]
 80011aa:	2254      	movs	r2, #84	; 0x54
 80011ac:	2100      	movs	r1, #0
 80011ae:	5499      	strb	r1, [r3, r2]
 80011b0:	687b      	ldr	r3, [r7, #4]
 80011b2:	681b      	ldr	r3, [r3, #0]
 80011b4:	0018      	movs	r0, r3
 80011b6:	f7ff ff7d 	bl	80010b4 <LL_ADC_IsInternalRegulatorEnabled>
 80011ba:	1e03      	subs	r3, r0, #0
 80011bc:	d114      	bne.n	80011e8 <HAL_ADC_Init+0x7c>
 80011be:	687b      	ldr	r3, [r7, #4]
 80011c0:	681b      	ldr	r3, [r3, #0]
 80011c2:	0018      	movs	r0, r3
 80011c4:	f7ff ff62 	bl	800108c <LL_ADC_EnableInternalRegulator>
 80011c8:	4bc4      	ldr	r3, [pc, #784]	; (80014dc <HAL_ADC_Init+0x370>)
 80011ca:	681b      	ldr	r3, [r3, #0]
 80011cc:	49c4      	ldr	r1, [pc, #784]	; (80014e0 <HAL_ADC_Init+0x374>)
 80011ce:	0018      	movs	r0, r3
 80011d0:	f7fe ff9a 	bl	8000108 <__udivsi3>
 80011d4:	0003      	movs	r3, r0
 80011d6:	005b      	lsls	r3, r3, #1
 80011d8:	60bb      	str	r3, [r7, #8]
 80011da:	e002      	b.n	80011e2 <HAL_ADC_Init+0x76>
 80011dc:	68bb      	ldr	r3, [r7, #8]
 80011de:	3b01      	subs	r3, #1
 80011e0:	60bb      	str	r3, [r7, #8]
 80011e2:	68bb      	ldr	r3, [r7, #8]
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	d1f9      	bne.n	80011dc <HAL_ADC_Init+0x70>
 80011e8:	687b      	ldr	r3, [r7, #4]
 80011ea:	681b      	ldr	r3, [r3, #0]
 80011ec:	0018      	movs	r0, r3
 80011ee:	f7ff ff61 	bl	80010b4 <LL_ADC_IsInternalRegulatorEnabled>
 80011f2:	1e03      	subs	r3, r0, #0
 80011f4:	d10f      	bne.n	8001216 <HAL_ADC_Init+0xaa>
 80011f6:	687b      	ldr	r3, [r7, #4]
 80011f8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80011fa:	2210      	movs	r2, #16
 80011fc:	431a      	orrs	r2, r3
 80011fe:	687b      	ldr	r3, [r7, #4]
 8001200:	659a      	str	r2, [r3, #88]	; 0x58
 8001202:	687b      	ldr	r3, [r7, #4]
 8001204:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001206:	2201      	movs	r2, #1
 8001208:	431a      	orrs	r2, r3
 800120a:	687b      	ldr	r3, [r7, #4]
 800120c:	65da      	str	r2, [r3, #92]	; 0x5c
 800120e:	231f      	movs	r3, #31
 8001210:	18fb      	adds	r3, r7, r3
 8001212:	2201      	movs	r2, #1
 8001214:	701a      	strb	r2, [r3, #0]
 8001216:	687b      	ldr	r3, [r7, #4]
 8001218:	681b      	ldr	r3, [r3, #0]
 800121a:	0018      	movs	r0, r3
 800121c:	f7ff ff94 	bl	8001148 <LL_ADC_REG_IsConversionOngoing>
 8001220:	0003      	movs	r3, r0
 8001222:	60fb      	str	r3, [r7, #12]
 8001224:	687b      	ldr	r3, [r7, #4]
 8001226:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001228:	2210      	movs	r2, #16
 800122a:	4013      	ands	r3, r2
 800122c:	d000      	beq.n	8001230 <HAL_ADC_Init+0xc4>
 800122e:	e144      	b.n	80014ba <HAL_ADC_Init+0x34e>
 8001230:	68fb      	ldr	r3, [r7, #12]
 8001232:	2b00      	cmp	r3, #0
 8001234:	d000      	beq.n	8001238 <HAL_ADC_Init+0xcc>
 8001236:	e140      	b.n	80014ba <HAL_ADC_Init+0x34e>
 8001238:	687b      	ldr	r3, [r7, #4]
 800123a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800123c:	4aa9      	ldr	r2, [pc, #676]	; (80014e4 <HAL_ADC_Init+0x378>)
 800123e:	4013      	ands	r3, r2
 8001240:	2202      	movs	r2, #2
 8001242:	431a      	orrs	r2, r3
 8001244:	687b      	ldr	r3, [r7, #4]
 8001246:	659a      	str	r2, [r3, #88]	; 0x58
 8001248:	687b      	ldr	r3, [r7, #4]
 800124a:	681b      	ldr	r3, [r3, #0]
 800124c:	0018      	movs	r0, r3
 800124e:	f7ff ff57 	bl	8001100 <LL_ADC_IsEnabled>
 8001252:	1e03      	subs	r3, r0, #0
 8001254:	d000      	beq.n	8001258 <HAL_ADC_Init+0xec>
 8001256:	e0ad      	b.n	80013b4 <HAL_ADC_Init+0x248>
 8001258:	687b      	ldr	r3, [r7, #4]
 800125a:	689a      	ldr	r2, [r3, #8]
 800125c:	687b      	ldr	r3, [r7, #4]
 800125e:	7e1b      	ldrb	r3, [r3, #24]
 8001260:	039b      	lsls	r3, r3, #14
 8001262:	431a      	orrs	r2, r3
 8001264:	687b      	ldr	r3, [r7, #4]
 8001266:	7e5b      	ldrb	r3, [r3, #25]
 8001268:	03db      	lsls	r3, r3, #15
 800126a:	431a      	orrs	r2, r3
 800126c:	687b      	ldr	r3, [r7, #4]
 800126e:	7e9b      	ldrb	r3, [r3, #26]
 8001270:	035b      	lsls	r3, r3, #13
 8001272:	431a      	orrs	r2, r3
 8001274:	687b      	ldr	r3, [r7, #4]
 8001276:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001278:	2b00      	cmp	r3, #0
 800127a:	d002      	beq.n	8001282 <HAL_ADC_Init+0x116>
 800127c:	2380      	movs	r3, #128	; 0x80
 800127e:	015b      	lsls	r3, r3, #5
 8001280:	e000      	b.n	8001284 <HAL_ADC_Init+0x118>
 8001282:	2300      	movs	r3, #0
 8001284:	431a      	orrs	r2, r3
 8001286:	687b      	ldr	r3, [r7, #4]
 8001288:	68db      	ldr	r3, [r3, #12]
 800128a:	431a      	orrs	r2, r3
 800128c:	687b      	ldr	r3, [r7, #4]
 800128e:	691b      	ldr	r3, [r3, #16]
 8001290:	2b00      	cmp	r3, #0
 8001292:	da04      	bge.n	800129e <HAL_ADC_Init+0x132>
 8001294:	687b      	ldr	r3, [r7, #4]
 8001296:	691b      	ldr	r3, [r3, #16]
 8001298:	005b      	lsls	r3, r3, #1
 800129a:	085b      	lsrs	r3, r3, #1
 800129c:	e001      	b.n	80012a2 <HAL_ADC_Init+0x136>
 800129e:	2380      	movs	r3, #128	; 0x80
 80012a0:	039b      	lsls	r3, r3, #14
 80012a2:	431a      	orrs	r2, r3
 80012a4:	687b      	ldr	r3, [r7, #4]
 80012a6:	212c      	movs	r1, #44	; 0x2c
 80012a8:	5c5b      	ldrb	r3, [r3, r1]
 80012aa:	005b      	lsls	r3, r3, #1
 80012ac:	4313      	orrs	r3, r2
 80012ae:	69ba      	ldr	r2, [r7, #24]
 80012b0:	4313      	orrs	r3, r2
 80012b2:	61bb      	str	r3, [r7, #24]
 80012b4:	687b      	ldr	r3, [r7, #4]
 80012b6:	2220      	movs	r2, #32
 80012b8:	5c9b      	ldrb	r3, [r3, r2]
 80012ba:	2b01      	cmp	r3, #1
 80012bc:	d115      	bne.n	80012ea <HAL_ADC_Init+0x17e>
 80012be:	687b      	ldr	r3, [r7, #4]
 80012c0:	7e9b      	ldrb	r3, [r3, #26]
 80012c2:	2b00      	cmp	r3, #0
 80012c4:	d105      	bne.n	80012d2 <HAL_ADC_Init+0x166>
 80012c6:	69bb      	ldr	r3, [r7, #24]
 80012c8:	2280      	movs	r2, #128	; 0x80
 80012ca:	0252      	lsls	r2, r2, #9
 80012cc:	4313      	orrs	r3, r2
 80012ce:	61bb      	str	r3, [r7, #24]
 80012d0:	e00b      	b.n	80012ea <HAL_ADC_Init+0x17e>
 80012d2:	687b      	ldr	r3, [r7, #4]
 80012d4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80012d6:	2220      	movs	r2, #32
 80012d8:	431a      	orrs	r2, r3
 80012da:	687b      	ldr	r3, [r7, #4]
 80012dc:	659a      	str	r2, [r3, #88]	; 0x58
 80012de:	687b      	ldr	r3, [r7, #4]
 80012e0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80012e2:	2201      	movs	r2, #1
 80012e4:	431a      	orrs	r2, r3
 80012e6:	687b      	ldr	r3, [r7, #4]
 80012e8:	65da      	str	r2, [r3, #92]	; 0x5c
 80012ea:	687b      	ldr	r3, [r7, #4]
 80012ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80012ee:	2b00      	cmp	r3, #0
 80012f0:	d00a      	beq.n	8001308 <HAL_ADC_Init+0x19c>
 80012f2:	687b      	ldr	r3, [r7, #4]
 80012f4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80012f6:	23e0      	movs	r3, #224	; 0xe0
 80012f8:	005b      	lsls	r3, r3, #1
 80012fa:	401a      	ands	r2, r3
 80012fc:	687b      	ldr	r3, [r7, #4]
 80012fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001300:	4313      	orrs	r3, r2
 8001302:	69ba      	ldr	r2, [r7, #24]
 8001304:	4313      	orrs	r3, r2
 8001306:	61bb      	str	r3, [r7, #24]
 8001308:	687b      	ldr	r3, [r7, #4]
 800130a:	681b      	ldr	r3, [r3, #0]
 800130c:	68db      	ldr	r3, [r3, #12]
 800130e:	4a76      	ldr	r2, [pc, #472]	; (80014e8 <HAL_ADC_Init+0x37c>)
 8001310:	4013      	ands	r3, r2
 8001312:	0019      	movs	r1, r3
 8001314:	687b      	ldr	r3, [r7, #4]
 8001316:	681b      	ldr	r3, [r3, #0]
 8001318:	69ba      	ldr	r2, [r7, #24]
 800131a:	430a      	orrs	r2, r1
 800131c:	60da      	str	r2, [r3, #12]
 800131e:	687b      	ldr	r3, [r7, #4]
 8001320:	685b      	ldr	r3, [r3, #4]
 8001322:	0f9b      	lsrs	r3, r3, #30
 8001324:	079a      	lsls	r2, r3, #30
 8001326:	687b      	ldr	r3, [r7, #4]
 8001328:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800132a:	4313      	orrs	r3, r2
 800132c:	697a      	ldr	r2, [r7, #20]
 800132e:	4313      	orrs	r3, r2
 8001330:	617b      	str	r3, [r7, #20]
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	223c      	movs	r2, #60	; 0x3c
 8001336:	5c9b      	ldrb	r3, [r3, r2]
 8001338:	2b01      	cmp	r3, #1
 800133a:	d111      	bne.n	8001360 <HAL_ADC_Init+0x1f4>
 800133c:	687b      	ldr	r3, [r7, #4]
 800133e:	685b      	ldr	r3, [r3, #4]
 8001340:	0f9b      	lsrs	r3, r3, #30
 8001342:	079a      	lsls	r2, r3, #30
 8001344:	687b      	ldr	r3, [r7, #4]
 8001346:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001348:	431a      	orrs	r2, r3
 800134a:	687b      	ldr	r3, [r7, #4]
 800134c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800134e:	431a      	orrs	r2, r3
 8001350:	687b      	ldr	r3, [r7, #4]
 8001352:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001354:	431a      	orrs	r2, r3
 8001356:	697b      	ldr	r3, [r7, #20]
 8001358:	4313      	orrs	r3, r2
 800135a:	2201      	movs	r2, #1
 800135c:	4313      	orrs	r3, r2
 800135e:	617b      	str	r3, [r7, #20]
 8001360:	687b      	ldr	r3, [r7, #4]
 8001362:	681b      	ldr	r3, [r3, #0]
 8001364:	691b      	ldr	r3, [r3, #16]
 8001366:	4a61      	ldr	r2, [pc, #388]	; (80014ec <HAL_ADC_Init+0x380>)
 8001368:	4013      	ands	r3, r2
 800136a:	0019      	movs	r1, r3
 800136c:	687b      	ldr	r3, [r7, #4]
 800136e:	681b      	ldr	r3, [r3, #0]
 8001370:	697a      	ldr	r2, [r7, #20]
 8001372:	430a      	orrs	r2, r1
 8001374:	611a      	str	r2, [r3, #16]
 8001376:	687b      	ldr	r3, [r7, #4]
 8001378:	685a      	ldr	r2, [r3, #4]
 800137a:	23c0      	movs	r3, #192	; 0xc0
 800137c:	061b      	lsls	r3, r3, #24
 800137e:	429a      	cmp	r2, r3
 8001380:	d018      	beq.n	80013b4 <HAL_ADC_Init+0x248>
 8001382:	687b      	ldr	r3, [r7, #4]
 8001384:	685a      	ldr	r2, [r3, #4]
 8001386:	2380      	movs	r3, #128	; 0x80
 8001388:	05db      	lsls	r3, r3, #23
 800138a:	429a      	cmp	r2, r3
 800138c:	d012      	beq.n	80013b4 <HAL_ADC_Init+0x248>
 800138e:	687b      	ldr	r3, [r7, #4]
 8001390:	685a      	ldr	r2, [r3, #4]
 8001392:	2380      	movs	r3, #128	; 0x80
 8001394:	061b      	lsls	r3, r3, #24
 8001396:	429a      	cmp	r2, r3
 8001398:	d00c      	beq.n	80013b4 <HAL_ADC_Init+0x248>
 800139a:	4b55      	ldr	r3, [pc, #340]	; (80014f0 <HAL_ADC_Init+0x384>)
 800139c:	681b      	ldr	r3, [r3, #0]
 800139e:	4a55      	ldr	r2, [pc, #340]	; (80014f4 <HAL_ADC_Init+0x388>)
 80013a0:	4013      	ands	r3, r2
 80013a2:	0019      	movs	r1, r3
 80013a4:	687b      	ldr	r3, [r7, #4]
 80013a6:	685a      	ldr	r2, [r3, #4]
 80013a8:	23f0      	movs	r3, #240	; 0xf0
 80013aa:	039b      	lsls	r3, r3, #14
 80013ac:	401a      	ands	r2, r3
 80013ae:	4b50      	ldr	r3, [pc, #320]	; (80014f0 <HAL_ADC_Init+0x384>)
 80013b0:	430a      	orrs	r2, r1
 80013b2:	601a      	str	r2, [r3, #0]
 80013b4:	687b      	ldr	r3, [r7, #4]
 80013b6:	6818      	ldr	r0, [r3, #0]
 80013b8:	687b      	ldr	r3, [r7, #4]
 80013ba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80013bc:	001a      	movs	r2, r3
 80013be:	2100      	movs	r1, #0
 80013c0:	f7ff fdd1 	bl	8000f66 <LL_ADC_SetSamplingTimeCommonChannels>
 80013c4:	687b      	ldr	r3, [r7, #4]
 80013c6:	6818      	ldr	r0, [r3, #0]
 80013c8:	687b      	ldr	r3, [r7, #4]
 80013ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80013cc:	494a      	ldr	r1, [pc, #296]	; (80014f8 <HAL_ADC_Init+0x38c>)
 80013ce:	001a      	movs	r2, r3
 80013d0:	f7ff fdc9 	bl	8000f66 <LL_ADC_SetSamplingTimeCommonChannels>
 80013d4:	687b      	ldr	r3, [r7, #4]
 80013d6:	691b      	ldr	r3, [r3, #16]
 80013d8:	2b00      	cmp	r3, #0
 80013da:	d109      	bne.n	80013f0 <HAL_ADC_Init+0x284>
 80013dc:	687b      	ldr	r3, [r7, #4]
 80013de:	681b      	ldr	r3, [r3, #0]
 80013e0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80013e2:	687b      	ldr	r3, [r7, #4]
 80013e4:	681b      	ldr	r3, [r3, #0]
 80013e6:	2110      	movs	r1, #16
 80013e8:	4249      	negs	r1, r1
 80013ea:	430a      	orrs	r2, r1
 80013ec:	629a      	str	r2, [r3, #40]	; 0x28
 80013ee:	e03a      	b.n	8001466 <HAL_ADC_Init+0x2fa>
 80013f0:	687b      	ldr	r3, [r7, #4]
 80013f2:	691a      	ldr	r2, [r3, #16]
 80013f4:	2380      	movs	r3, #128	; 0x80
 80013f6:	039b      	lsls	r3, r3, #14
 80013f8:	429a      	cmp	r2, r3
 80013fa:	d134      	bne.n	8001466 <HAL_ADC_Init+0x2fa>
 80013fc:	2300      	movs	r3, #0
 80013fe:	613b      	str	r3, [r7, #16]
 8001400:	e00c      	b.n	800141c <HAL_ADC_Init+0x2b0>
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8001406:	693b      	ldr	r3, [r7, #16]
 8001408:	009b      	lsls	r3, r3, #2
 800140a:	40da      	lsrs	r2, r3
 800140c:	0013      	movs	r3, r2
 800140e:	220f      	movs	r2, #15
 8001410:	4013      	ands	r3, r2
 8001412:	2b0f      	cmp	r3, #15
 8001414:	d006      	beq.n	8001424 <HAL_ADC_Init+0x2b8>
 8001416:	693b      	ldr	r3, [r7, #16]
 8001418:	3301      	adds	r3, #1
 800141a:	613b      	str	r3, [r7, #16]
 800141c:	693b      	ldr	r3, [r7, #16]
 800141e:	2b07      	cmp	r3, #7
 8001420:	d9ef      	bls.n	8001402 <HAL_ADC_Init+0x296>
 8001422:	e000      	b.n	8001426 <HAL_ADC_Init+0x2ba>
 8001424:	46c0      	nop			; (mov r8, r8)
 8001426:	693b      	ldr	r3, [r7, #16]
 8001428:	2b01      	cmp	r3, #1
 800142a:	d109      	bne.n	8001440 <HAL_ADC_Init+0x2d4>
 800142c:	687b      	ldr	r3, [r7, #4]
 800142e:	681b      	ldr	r3, [r3, #0]
 8001430:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001432:	687b      	ldr	r3, [r7, #4]
 8001434:	681b      	ldr	r3, [r3, #0]
 8001436:	2110      	movs	r1, #16
 8001438:	4249      	negs	r1, r1
 800143a:	430a      	orrs	r2, r1
 800143c:	629a      	str	r2, [r3, #40]	; 0x28
 800143e:	e012      	b.n	8001466 <HAL_ADC_Init+0x2fa>
 8001440:	687b      	ldr	r3, [r7, #4]
 8001442:	681b      	ldr	r3, [r3, #0]
 8001444:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001446:	687b      	ldr	r3, [r7, #4]
 8001448:	69db      	ldr	r3, [r3, #28]
 800144a:	3b01      	subs	r3, #1
 800144c:	009b      	lsls	r3, r3, #2
 800144e:	221c      	movs	r2, #28
 8001450:	4013      	ands	r3, r2
 8001452:	2210      	movs	r2, #16
 8001454:	4252      	negs	r2, r2
 8001456:	409a      	lsls	r2, r3
 8001458:	0011      	movs	r1, r2
 800145a:	687b      	ldr	r3, [r7, #4]
 800145c:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800145e:	687b      	ldr	r3, [r7, #4]
 8001460:	681b      	ldr	r3, [r3, #0]
 8001462:	430a      	orrs	r2, r1
 8001464:	629a      	str	r2, [r3, #40]	; 0x28
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	681b      	ldr	r3, [r3, #0]
 800146a:	2100      	movs	r1, #0
 800146c:	0018      	movs	r0, r3
 800146e:	f7ff fd97 	bl	8000fa0 <LL_ADC_GetSamplingTimeCommonChannels>
 8001472:	0002      	movs	r2, r0
 8001474:	687b      	ldr	r3, [r7, #4]
 8001476:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001478:	429a      	cmp	r2, r3
 800147a:	d10b      	bne.n	8001494 <HAL_ADC_Init+0x328>
 800147c:	687b      	ldr	r3, [r7, #4]
 800147e:	2200      	movs	r2, #0
 8001480:	65da      	str	r2, [r3, #92]	; 0x5c
 8001482:	687b      	ldr	r3, [r7, #4]
 8001484:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001486:	2203      	movs	r2, #3
 8001488:	4393      	bics	r3, r2
 800148a:	2201      	movs	r2, #1
 800148c:	431a      	orrs	r2, r3
 800148e:	687b      	ldr	r3, [r7, #4]
 8001490:	659a      	str	r2, [r3, #88]	; 0x58
 8001492:	e01c      	b.n	80014ce <HAL_ADC_Init+0x362>
 8001494:	687b      	ldr	r3, [r7, #4]
 8001496:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001498:	2212      	movs	r2, #18
 800149a:	4393      	bics	r3, r2
 800149c:	2210      	movs	r2, #16
 800149e:	431a      	orrs	r2, r3
 80014a0:	687b      	ldr	r3, [r7, #4]
 80014a2:	659a      	str	r2, [r3, #88]	; 0x58
 80014a4:	687b      	ldr	r3, [r7, #4]
 80014a6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80014a8:	2201      	movs	r2, #1
 80014aa:	431a      	orrs	r2, r3
 80014ac:	687b      	ldr	r3, [r7, #4]
 80014ae:	65da      	str	r2, [r3, #92]	; 0x5c
 80014b0:	231f      	movs	r3, #31
 80014b2:	18fb      	adds	r3, r7, r3
 80014b4:	2201      	movs	r2, #1
 80014b6:	701a      	strb	r2, [r3, #0]
 80014b8:	e009      	b.n	80014ce <HAL_ADC_Init+0x362>
 80014ba:	687b      	ldr	r3, [r7, #4]
 80014bc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80014be:	2210      	movs	r2, #16
 80014c0:	431a      	orrs	r2, r3
 80014c2:	687b      	ldr	r3, [r7, #4]
 80014c4:	659a      	str	r2, [r3, #88]	; 0x58
 80014c6:	231f      	movs	r3, #31
 80014c8:	18fb      	adds	r3, r7, r3
 80014ca:	2201      	movs	r2, #1
 80014cc:	701a      	strb	r2, [r3, #0]
 80014ce:	231f      	movs	r3, #31
 80014d0:	18fb      	adds	r3, r7, r3
 80014d2:	781b      	ldrb	r3, [r3, #0]
 80014d4:	0018      	movs	r0, r3
 80014d6:	46bd      	mov	sp, r7
 80014d8:	b008      	add	sp, #32
 80014da:	bd80      	pop	{r7, pc}
 80014dc:	2000001c 	.word	0x2000001c
 80014e0:	00030d40 	.word	0x00030d40
 80014e4:	fffffefd 	.word	0xfffffefd
 80014e8:	fffe0201 	.word	0xfffe0201
 80014ec:	1ffffc02 	.word	0x1ffffc02
 80014f0:	40012708 	.word	0x40012708
 80014f4:	ffc3ffff 	.word	0xffc3ffff
 80014f8:	7fffff04 	.word	0x7fffff04

080014fc <HAL_ADC_Start>:
 80014fc:	b5b0      	push	{r4, r5, r7, lr}
 80014fe:	b084      	sub	sp, #16
 8001500:	af00      	add	r7, sp, #0
 8001502:	6078      	str	r0, [r7, #4]
 8001504:	687b      	ldr	r3, [r7, #4]
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	0018      	movs	r0, r3
 800150a:	f7ff fe1d 	bl	8001148 <LL_ADC_REG_IsConversionOngoing>
 800150e:	1e03      	subs	r3, r0, #0
 8001510:	d135      	bne.n	800157e <HAL_ADC_Start+0x82>
 8001512:	687b      	ldr	r3, [r7, #4]
 8001514:	2254      	movs	r2, #84	; 0x54
 8001516:	5c9b      	ldrb	r3, [r3, r2]
 8001518:	2b01      	cmp	r3, #1
 800151a:	d101      	bne.n	8001520 <HAL_ADC_Start+0x24>
 800151c:	2302      	movs	r3, #2
 800151e:	e035      	b.n	800158c <HAL_ADC_Start+0x90>
 8001520:	687b      	ldr	r3, [r7, #4]
 8001522:	2254      	movs	r2, #84	; 0x54
 8001524:	2101      	movs	r1, #1
 8001526:	5499      	strb	r1, [r3, r2]
 8001528:	250f      	movs	r5, #15
 800152a:	197c      	adds	r4, r7, r5
 800152c:	687b      	ldr	r3, [r7, #4]
 800152e:	0018      	movs	r0, r3
 8001530:	f000 fa14 	bl	800195c <ADC_Enable>
 8001534:	0003      	movs	r3, r0
 8001536:	7023      	strb	r3, [r4, #0]
 8001538:	197b      	adds	r3, r7, r5
 800153a:	781b      	ldrb	r3, [r3, #0]
 800153c:	2b00      	cmp	r3, #0
 800153e:	d119      	bne.n	8001574 <HAL_ADC_Start+0x78>
 8001540:	687b      	ldr	r3, [r7, #4]
 8001542:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001544:	4a13      	ldr	r2, [pc, #76]	; (8001594 <HAL_ADC_Start+0x98>)
 8001546:	4013      	ands	r3, r2
 8001548:	2280      	movs	r2, #128	; 0x80
 800154a:	0052      	lsls	r2, r2, #1
 800154c:	431a      	orrs	r2, r3
 800154e:	687b      	ldr	r3, [r7, #4]
 8001550:	659a      	str	r2, [r3, #88]	; 0x58
 8001552:	687b      	ldr	r3, [r7, #4]
 8001554:	2200      	movs	r2, #0
 8001556:	65da      	str	r2, [r3, #92]	; 0x5c
 8001558:	687b      	ldr	r3, [r7, #4]
 800155a:	681b      	ldr	r3, [r3, #0]
 800155c:	221c      	movs	r2, #28
 800155e:	601a      	str	r2, [r3, #0]
 8001560:	687b      	ldr	r3, [r7, #4]
 8001562:	2254      	movs	r2, #84	; 0x54
 8001564:	2100      	movs	r1, #0
 8001566:	5499      	strb	r1, [r3, r2]
 8001568:	687b      	ldr	r3, [r7, #4]
 800156a:	681b      	ldr	r3, [r3, #0]
 800156c:	0018      	movs	r0, r3
 800156e:	f7ff fdd9 	bl	8001124 <LL_ADC_REG_StartConversion>
 8001572:	e008      	b.n	8001586 <HAL_ADC_Start+0x8a>
 8001574:	687b      	ldr	r3, [r7, #4]
 8001576:	2254      	movs	r2, #84	; 0x54
 8001578:	2100      	movs	r1, #0
 800157a:	5499      	strb	r1, [r3, r2]
 800157c:	e003      	b.n	8001586 <HAL_ADC_Start+0x8a>
 800157e:	230f      	movs	r3, #15
 8001580:	18fb      	adds	r3, r7, r3
 8001582:	2202      	movs	r2, #2
 8001584:	701a      	strb	r2, [r3, #0]
 8001586:	230f      	movs	r3, #15
 8001588:	18fb      	adds	r3, r7, r3
 800158a:	781b      	ldrb	r3, [r3, #0]
 800158c:	0018      	movs	r0, r3
 800158e:	46bd      	mov	sp, r7
 8001590:	b004      	add	sp, #16
 8001592:	bdb0      	pop	{r4, r5, r7, pc}
 8001594:	fffff0fe 	.word	0xfffff0fe

08001598 <HAL_ADC_GetValue>:
 8001598:	b580      	push	{r7, lr}
 800159a:	b082      	sub	sp, #8
 800159c:	af00      	add	r7, sp, #0
 800159e:	6078      	str	r0, [r7, #4]
 80015a0:	687b      	ldr	r3, [r7, #4]
 80015a2:	681b      	ldr	r3, [r3, #0]
 80015a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015a6:	0018      	movs	r0, r3
 80015a8:	46bd      	mov	sp, r7
 80015aa:	b002      	add	sp, #8
 80015ac:	bd80      	pop	{r7, pc}
	...

080015b0 <HAL_ADC_ConfigChannel>:
 80015b0:	b580      	push	{r7, lr}
 80015b2:	b086      	sub	sp, #24
 80015b4:	af00      	add	r7, sp, #0
 80015b6:	6078      	str	r0, [r7, #4]
 80015b8:	6039      	str	r1, [r7, #0]
 80015ba:	2317      	movs	r3, #23
 80015bc:	18fb      	adds	r3, r7, r3
 80015be:	2200      	movs	r2, #0
 80015c0:	701a      	strb	r2, [r3, #0]
 80015c2:	2300      	movs	r3, #0
 80015c4:	60fb      	str	r3, [r7, #12]
 80015c6:	687b      	ldr	r3, [r7, #4]
 80015c8:	2254      	movs	r2, #84	; 0x54
 80015ca:	5c9b      	ldrb	r3, [r3, r2]
 80015cc:	2b01      	cmp	r3, #1
 80015ce:	d101      	bne.n	80015d4 <HAL_ADC_ConfigChannel+0x24>
 80015d0:	2302      	movs	r3, #2
 80015d2:	e1be      	b.n	8001952 <HAL_ADC_ConfigChannel+0x3a2>
 80015d4:	687b      	ldr	r3, [r7, #4]
 80015d6:	2254      	movs	r2, #84	; 0x54
 80015d8:	2101      	movs	r1, #1
 80015da:	5499      	strb	r1, [r3, r2]
 80015dc:	687b      	ldr	r3, [r7, #4]
 80015de:	681b      	ldr	r3, [r3, #0]
 80015e0:	0018      	movs	r0, r3
 80015e2:	f7ff fdb1 	bl	8001148 <LL_ADC_REG_IsConversionOngoing>
 80015e6:	1e03      	subs	r3, r0, #0
 80015e8:	d000      	beq.n	80015ec <HAL_ADC_ConfigChannel+0x3c>
 80015ea:	e1a1      	b.n	8001930 <HAL_ADC_ConfigChannel+0x380>
 80015ec:	683b      	ldr	r3, [r7, #0]
 80015ee:	685b      	ldr	r3, [r3, #4]
 80015f0:	2b02      	cmp	r3, #2
 80015f2:	d100      	bne.n	80015f6 <HAL_ADC_ConfigChannel+0x46>
 80015f4:	e152      	b.n	800189c <HAL_ADC_ConfigChannel+0x2ec>
 80015f6:	687b      	ldr	r3, [r7, #4]
 80015f8:	691a      	ldr	r2, [r3, #16]
 80015fa:	2380      	movs	r3, #128	; 0x80
 80015fc:	061b      	lsls	r3, r3, #24
 80015fe:	429a      	cmp	r2, r3
 8001600:	d004      	beq.n	800160c <HAL_ADC_ConfigChannel+0x5c>
 8001602:	687b      	ldr	r3, [r7, #4]
 8001604:	691b      	ldr	r3, [r3, #16]
 8001606:	4ac2      	ldr	r2, [pc, #776]	; (8001910 <HAL_ADC_ConfigChannel+0x360>)
 8001608:	4293      	cmp	r3, r2
 800160a:	d108      	bne.n	800161e <HAL_ADC_ConfigChannel+0x6e>
 800160c:	687b      	ldr	r3, [r7, #4]
 800160e:	681a      	ldr	r2, [r3, #0]
 8001610:	683b      	ldr	r3, [r7, #0]
 8001612:	681b      	ldr	r3, [r3, #0]
 8001614:	0019      	movs	r1, r3
 8001616:	0010      	movs	r0, r2
 8001618:	f7ff fcf9 	bl	800100e <LL_ADC_REG_SetSequencerChAdd>
 800161c:	e0ed      	b.n	80017fa <HAL_ADC_ConfigChannel+0x24a>
 800161e:	687b      	ldr	r3, [r7, #4]
 8001620:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8001622:	683b      	ldr	r3, [r7, #0]
 8001624:	685b      	ldr	r3, [r3, #4]
 8001626:	211f      	movs	r1, #31
 8001628:	400b      	ands	r3, r1
 800162a:	210f      	movs	r1, #15
 800162c:	4099      	lsls	r1, r3
 800162e:	000b      	movs	r3, r1
 8001630:	43db      	mvns	r3, r3
 8001632:	4013      	ands	r3, r2
 8001634:	0019      	movs	r1, r3
 8001636:	683b      	ldr	r3, [r7, #0]
 8001638:	681b      	ldr	r3, [r3, #0]
 800163a:	025b      	lsls	r3, r3, #9
 800163c:	0a5b      	lsrs	r3, r3, #9
 800163e:	d105      	bne.n	800164c <HAL_ADC_ConfigChannel+0x9c>
 8001640:	683b      	ldr	r3, [r7, #0]
 8001642:	681b      	ldr	r3, [r3, #0]
 8001644:	0e9b      	lsrs	r3, r3, #26
 8001646:	221f      	movs	r2, #31
 8001648:	4013      	ands	r3, r2
 800164a:	e0bc      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 800164c:	683b      	ldr	r3, [r7, #0]
 800164e:	681b      	ldr	r3, [r3, #0]
 8001650:	2201      	movs	r2, #1
 8001652:	4013      	ands	r3, r2
 8001654:	d000      	beq.n	8001658 <HAL_ADC_ConfigChannel+0xa8>
 8001656:	e0b5      	b.n	80017c4 <HAL_ADC_ConfigChannel+0x214>
 8001658:	683b      	ldr	r3, [r7, #0]
 800165a:	681b      	ldr	r3, [r3, #0]
 800165c:	2202      	movs	r2, #2
 800165e:	4013      	ands	r3, r2
 8001660:	d000      	beq.n	8001664 <HAL_ADC_ConfigChannel+0xb4>
 8001662:	e0ad      	b.n	80017c0 <HAL_ADC_ConfigChannel+0x210>
 8001664:	683b      	ldr	r3, [r7, #0]
 8001666:	681b      	ldr	r3, [r3, #0]
 8001668:	2204      	movs	r2, #4
 800166a:	4013      	ands	r3, r2
 800166c:	d000      	beq.n	8001670 <HAL_ADC_ConfigChannel+0xc0>
 800166e:	e0a5      	b.n	80017bc <HAL_ADC_ConfigChannel+0x20c>
 8001670:	683b      	ldr	r3, [r7, #0]
 8001672:	681b      	ldr	r3, [r3, #0]
 8001674:	2208      	movs	r2, #8
 8001676:	4013      	ands	r3, r2
 8001678:	d000      	beq.n	800167c <HAL_ADC_ConfigChannel+0xcc>
 800167a:	e09d      	b.n	80017b8 <HAL_ADC_ConfigChannel+0x208>
 800167c:	683b      	ldr	r3, [r7, #0]
 800167e:	681b      	ldr	r3, [r3, #0]
 8001680:	2210      	movs	r2, #16
 8001682:	4013      	ands	r3, r2
 8001684:	d000      	beq.n	8001688 <HAL_ADC_ConfigChannel+0xd8>
 8001686:	e095      	b.n	80017b4 <HAL_ADC_ConfigChannel+0x204>
 8001688:	683b      	ldr	r3, [r7, #0]
 800168a:	681b      	ldr	r3, [r3, #0]
 800168c:	2220      	movs	r2, #32
 800168e:	4013      	ands	r3, r2
 8001690:	d000      	beq.n	8001694 <HAL_ADC_ConfigChannel+0xe4>
 8001692:	e08d      	b.n	80017b0 <HAL_ADC_ConfigChannel+0x200>
 8001694:	683b      	ldr	r3, [r7, #0]
 8001696:	681b      	ldr	r3, [r3, #0]
 8001698:	2240      	movs	r2, #64	; 0x40
 800169a:	4013      	ands	r3, r2
 800169c:	d000      	beq.n	80016a0 <HAL_ADC_ConfigChannel+0xf0>
 800169e:	e085      	b.n	80017ac <HAL_ADC_ConfigChannel+0x1fc>
 80016a0:	683b      	ldr	r3, [r7, #0]
 80016a2:	681b      	ldr	r3, [r3, #0]
 80016a4:	2280      	movs	r2, #128	; 0x80
 80016a6:	4013      	ands	r3, r2
 80016a8:	d000      	beq.n	80016ac <HAL_ADC_ConfigChannel+0xfc>
 80016aa:	e07d      	b.n	80017a8 <HAL_ADC_ConfigChannel+0x1f8>
 80016ac:	683b      	ldr	r3, [r7, #0]
 80016ae:	681a      	ldr	r2, [r3, #0]
 80016b0:	2380      	movs	r3, #128	; 0x80
 80016b2:	005b      	lsls	r3, r3, #1
 80016b4:	4013      	ands	r3, r2
 80016b6:	d000      	beq.n	80016ba <HAL_ADC_ConfigChannel+0x10a>
 80016b8:	e074      	b.n	80017a4 <HAL_ADC_ConfigChannel+0x1f4>
 80016ba:	683b      	ldr	r3, [r7, #0]
 80016bc:	681a      	ldr	r2, [r3, #0]
 80016be:	2380      	movs	r3, #128	; 0x80
 80016c0:	009b      	lsls	r3, r3, #2
 80016c2:	4013      	ands	r3, r2
 80016c4:	d000      	beq.n	80016c8 <HAL_ADC_ConfigChannel+0x118>
 80016c6:	e06b      	b.n	80017a0 <HAL_ADC_ConfigChannel+0x1f0>
 80016c8:	683b      	ldr	r3, [r7, #0]
 80016ca:	681a      	ldr	r2, [r3, #0]
 80016cc:	2380      	movs	r3, #128	; 0x80
 80016ce:	00db      	lsls	r3, r3, #3
 80016d0:	4013      	ands	r3, r2
 80016d2:	d000      	beq.n	80016d6 <HAL_ADC_ConfigChannel+0x126>
 80016d4:	e062      	b.n	800179c <HAL_ADC_ConfigChannel+0x1ec>
 80016d6:	683b      	ldr	r3, [r7, #0]
 80016d8:	681a      	ldr	r2, [r3, #0]
 80016da:	2380      	movs	r3, #128	; 0x80
 80016dc:	011b      	lsls	r3, r3, #4
 80016de:	4013      	ands	r3, r2
 80016e0:	d000      	beq.n	80016e4 <HAL_ADC_ConfigChannel+0x134>
 80016e2:	e059      	b.n	8001798 <HAL_ADC_ConfigChannel+0x1e8>
 80016e4:	683b      	ldr	r3, [r7, #0]
 80016e6:	681a      	ldr	r2, [r3, #0]
 80016e8:	2380      	movs	r3, #128	; 0x80
 80016ea:	015b      	lsls	r3, r3, #5
 80016ec:	4013      	ands	r3, r2
 80016ee:	d151      	bne.n	8001794 <HAL_ADC_ConfigChannel+0x1e4>
 80016f0:	683b      	ldr	r3, [r7, #0]
 80016f2:	681a      	ldr	r2, [r3, #0]
 80016f4:	2380      	movs	r3, #128	; 0x80
 80016f6:	019b      	lsls	r3, r3, #6
 80016f8:	4013      	ands	r3, r2
 80016fa:	d149      	bne.n	8001790 <HAL_ADC_ConfigChannel+0x1e0>
 80016fc:	683b      	ldr	r3, [r7, #0]
 80016fe:	681a      	ldr	r2, [r3, #0]
 8001700:	2380      	movs	r3, #128	; 0x80
 8001702:	01db      	lsls	r3, r3, #7
 8001704:	4013      	ands	r3, r2
 8001706:	d141      	bne.n	800178c <HAL_ADC_ConfigChannel+0x1dc>
 8001708:	683b      	ldr	r3, [r7, #0]
 800170a:	681a      	ldr	r2, [r3, #0]
 800170c:	2380      	movs	r3, #128	; 0x80
 800170e:	021b      	lsls	r3, r3, #8
 8001710:	4013      	ands	r3, r2
 8001712:	d139      	bne.n	8001788 <HAL_ADC_ConfigChannel+0x1d8>
 8001714:	683b      	ldr	r3, [r7, #0]
 8001716:	681a      	ldr	r2, [r3, #0]
 8001718:	2380      	movs	r3, #128	; 0x80
 800171a:	025b      	lsls	r3, r3, #9
 800171c:	4013      	ands	r3, r2
 800171e:	d131      	bne.n	8001784 <HAL_ADC_ConfigChannel+0x1d4>
 8001720:	683b      	ldr	r3, [r7, #0]
 8001722:	681a      	ldr	r2, [r3, #0]
 8001724:	2380      	movs	r3, #128	; 0x80
 8001726:	029b      	lsls	r3, r3, #10
 8001728:	4013      	ands	r3, r2
 800172a:	d129      	bne.n	8001780 <HAL_ADC_ConfigChannel+0x1d0>
 800172c:	683b      	ldr	r3, [r7, #0]
 800172e:	681a      	ldr	r2, [r3, #0]
 8001730:	2380      	movs	r3, #128	; 0x80
 8001732:	02db      	lsls	r3, r3, #11
 8001734:	4013      	ands	r3, r2
 8001736:	d121      	bne.n	800177c <HAL_ADC_ConfigChannel+0x1cc>
 8001738:	683b      	ldr	r3, [r7, #0]
 800173a:	681a      	ldr	r2, [r3, #0]
 800173c:	2380      	movs	r3, #128	; 0x80
 800173e:	031b      	lsls	r3, r3, #12
 8001740:	4013      	ands	r3, r2
 8001742:	d119      	bne.n	8001778 <HAL_ADC_ConfigChannel+0x1c8>
 8001744:	683b      	ldr	r3, [r7, #0]
 8001746:	681a      	ldr	r2, [r3, #0]
 8001748:	2380      	movs	r3, #128	; 0x80
 800174a:	035b      	lsls	r3, r3, #13
 800174c:	4013      	ands	r3, r2
 800174e:	d111      	bne.n	8001774 <HAL_ADC_ConfigChannel+0x1c4>
 8001750:	683b      	ldr	r3, [r7, #0]
 8001752:	681a      	ldr	r2, [r3, #0]
 8001754:	2380      	movs	r3, #128	; 0x80
 8001756:	039b      	lsls	r3, r3, #14
 8001758:	4013      	ands	r3, r2
 800175a:	d109      	bne.n	8001770 <HAL_ADC_ConfigChannel+0x1c0>
 800175c:	683b      	ldr	r3, [r7, #0]
 800175e:	681a      	ldr	r2, [r3, #0]
 8001760:	2380      	movs	r3, #128	; 0x80
 8001762:	03db      	lsls	r3, r3, #15
 8001764:	4013      	ands	r3, r2
 8001766:	d001      	beq.n	800176c <HAL_ADC_ConfigChannel+0x1bc>
 8001768:	2316      	movs	r3, #22
 800176a:	e02c      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 800176c:	2300      	movs	r3, #0
 800176e:	e02a      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 8001770:	2315      	movs	r3, #21
 8001772:	e028      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 8001774:	2314      	movs	r3, #20
 8001776:	e026      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 8001778:	2313      	movs	r3, #19
 800177a:	e024      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 800177c:	2312      	movs	r3, #18
 800177e:	e022      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 8001780:	2311      	movs	r3, #17
 8001782:	e020      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 8001784:	2310      	movs	r3, #16
 8001786:	e01e      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 8001788:	230f      	movs	r3, #15
 800178a:	e01c      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 800178c:	230e      	movs	r3, #14
 800178e:	e01a      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 8001790:	230d      	movs	r3, #13
 8001792:	e018      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 8001794:	230c      	movs	r3, #12
 8001796:	e016      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 8001798:	230b      	movs	r3, #11
 800179a:	e014      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 800179c:	230a      	movs	r3, #10
 800179e:	e012      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 80017a0:	2309      	movs	r3, #9
 80017a2:	e010      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 80017a4:	2308      	movs	r3, #8
 80017a6:	e00e      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 80017a8:	2307      	movs	r3, #7
 80017aa:	e00c      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 80017ac:	2306      	movs	r3, #6
 80017ae:	e00a      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 80017b0:	2305      	movs	r3, #5
 80017b2:	e008      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 80017b4:	2304      	movs	r3, #4
 80017b6:	e006      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 80017b8:	2303      	movs	r3, #3
 80017ba:	e004      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 80017bc:	2302      	movs	r3, #2
 80017be:	e002      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 80017c0:	2301      	movs	r3, #1
 80017c2:	e000      	b.n	80017c6 <HAL_ADC_ConfigChannel+0x216>
 80017c4:	2300      	movs	r3, #0
 80017c6:	683a      	ldr	r2, [r7, #0]
 80017c8:	6852      	ldr	r2, [r2, #4]
 80017ca:	201f      	movs	r0, #31
 80017cc:	4002      	ands	r2, r0
 80017ce:	4093      	lsls	r3, r2
 80017d0:	000a      	movs	r2, r1
 80017d2:	431a      	orrs	r2, r3
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	661a      	str	r2, [r3, #96]	; 0x60
 80017d8:	683b      	ldr	r3, [r7, #0]
 80017da:	685b      	ldr	r3, [r3, #4]
 80017dc:	089b      	lsrs	r3, r3, #2
 80017de:	1c5a      	adds	r2, r3, #1
 80017e0:	687b      	ldr	r3, [r7, #4]
 80017e2:	69db      	ldr	r3, [r3, #28]
 80017e4:	429a      	cmp	r2, r3
 80017e6:	d808      	bhi.n	80017fa <HAL_ADC_ConfigChannel+0x24a>
 80017e8:	687b      	ldr	r3, [r7, #4]
 80017ea:	6818      	ldr	r0, [r3, #0]
 80017ec:	683b      	ldr	r3, [r7, #0]
 80017ee:	6859      	ldr	r1, [r3, #4]
 80017f0:	683b      	ldr	r3, [r7, #0]
 80017f2:	681b      	ldr	r3, [r3, #0]
 80017f4:	001a      	movs	r2, r3
 80017f6:	f7ff fbea 	bl	8000fce <LL_ADC_REG_SetSequencerRanks>
 80017fa:	687b      	ldr	r3, [r7, #4]
 80017fc:	6818      	ldr	r0, [r3, #0]
 80017fe:	683b      	ldr	r3, [r7, #0]
 8001800:	6819      	ldr	r1, [r3, #0]
 8001802:	683b      	ldr	r3, [r7, #0]
 8001804:	689b      	ldr	r3, [r3, #8]
 8001806:	001a      	movs	r2, r3
 8001808:	f7ff fc24 	bl	8001054 <LL_ADC_SetChannelSamplingTime>
 800180c:	683b      	ldr	r3, [r7, #0]
 800180e:	681b      	ldr	r3, [r3, #0]
 8001810:	2b00      	cmp	r3, #0
 8001812:	db00      	blt.n	8001816 <HAL_ADC_ConfigChannel+0x266>
 8001814:	e096      	b.n	8001944 <HAL_ADC_ConfigChannel+0x394>
 8001816:	4b3f      	ldr	r3, [pc, #252]	; (8001914 <HAL_ADC_ConfigChannel+0x364>)
 8001818:	0018      	movs	r0, r3
 800181a:	f7ff fb97 	bl	8000f4c <LL_ADC_GetCommonPathInternalCh>
 800181e:	0003      	movs	r3, r0
 8001820:	613b      	str	r3, [r7, #16]
 8001822:	683b      	ldr	r3, [r7, #0]
 8001824:	681b      	ldr	r3, [r3, #0]
 8001826:	4a3c      	ldr	r2, [pc, #240]	; (8001918 <HAL_ADC_ConfigChannel+0x368>)
 8001828:	4293      	cmp	r3, r2
 800182a:	d123      	bne.n	8001874 <HAL_ADC_ConfigChannel+0x2c4>
 800182c:	693a      	ldr	r2, [r7, #16]
 800182e:	2380      	movs	r3, #128	; 0x80
 8001830:	041b      	lsls	r3, r3, #16
 8001832:	4013      	ands	r3, r2
 8001834:	d11e      	bne.n	8001874 <HAL_ADC_ConfigChannel+0x2c4>
 8001836:	693b      	ldr	r3, [r7, #16]
 8001838:	2280      	movs	r2, #128	; 0x80
 800183a:	0412      	lsls	r2, r2, #16
 800183c:	4313      	orrs	r3, r2
 800183e:	4a35      	ldr	r2, [pc, #212]	; (8001914 <HAL_ADC_ConfigChannel+0x364>)
 8001840:	0019      	movs	r1, r3
 8001842:	0010      	movs	r0, r2
 8001844:	f7ff fb6e 	bl	8000f24 <LL_ADC_SetCommonPathInternalCh>
 8001848:	4b34      	ldr	r3, [pc, #208]	; (800191c <HAL_ADC_ConfigChannel+0x36c>)
 800184a:	681b      	ldr	r3, [r3, #0]
 800184c:	4934      	ldr	r1, [pc, #208]	; (8001920 <HAL_ADC_ConfigChannel+0x370>)
 800184e:	0018      	movs	r0, r3
 8001850:	f7fe fc5a 	bl	8000108 <__udivsi3>
 8001854:	0003      	movs	r3, r0
 8001856:	001a      	movs	r2, r3
 8001858:	0013      	movs	r3, r2
 800185a:	005b      	lsls	r3, r3, #1
 800185c:	189b      	adds	r3, r3, r2
 800185e:	009b      	lsls	r3, r3, #2
 8001860:	3301      	adds	r3, #1
 8001862:	60fb      	str	r3, [r7, #12]
 8001864:	e002      	b.n	800186c <HAL_ADC_ConfigChannel+0x2bc>
 8001866:	68fb      	ldr	r3, [r7, #12]
 8001868:	3b01      	subs	r3, #1
 800186a:	60fb      	str	r3, [r7, #12]
 800186c:	68fb      	ldr	r3, [r7, #12]
 800186e:	2b00      	cmp	r3, #0
 8001870:	d1f9      	bne.n	8001866 <HAL_ADC_ConfigChannel+0x2b6>
 8001872:	e067      	b.n	8001944 <HAL_ADC_ConfigChannel+0x394>
 8001874:	683b      	ldr	r3, [r7, #0]
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	4a2a      	ldr	r2, [pc, #168]	; (8001924 <HAL_ADC_ConfigChannel+0x374>)
 800187a:	4293      	cmp	r3, r2
 800187c:	d162      	bne.n	8001944 <HAL_ADC_ConfigChannel+0x394>
 800187e:	693a      	ldr	r2, [r7, #16]
 8001880:	2380      	movs	r3, #128	; 0x80
 8001882:	03db      	lsls	r3, r3, #15
 8001884:	4013      	ands	r3, r2
 8001886:	d15d      	bne.n	8001944 <HAL_ADC_ConfigChannel+0x394>
 8001888:	693b      	ldr	r3, [r7, #16]
 800188a:	2280      	movs	r2, #128	; 0x80
 800188c:	03d2      	lsls	r2, r2, #15
 800188e:	4313      	orrs	r3, r2
 8001890:	4a20      	ldr	r2, [pc, #128]	; (8001914 <HAL_ADC_ConfigChannel+0x364>)
 8001892:	0019      	movs	r1, r3
 8001894:	0010      	movs	r0, r2
 8001896:	f7ff fb45 	bl	8000f24 <LL_ADC_SetCommonPathInternalCh>
 800189a:	e053      	b.n	8001944 <HAL_ADC_ConfigChannel+0x394>
 800189c:	687b      	ldr	r3, [r7, #4]
 800189e:	691a      	ldr	r2, [r3, #16]
 80018a0:	2380      	movs	r3, #128	; 0x80
 80018a2:	061b      	lsls	r3, r3, #24
 80018a4:	429a      	cmp	r2, r3
 80018a6:	d004      	beq.n	80018b2 <HAL_ADC_ConfigChannel+0x302>
 80018a8:	687b      	ldr	r3, [r7, #4]
 80018aa:	691b      	ldr	r3, [r3, #16]
 80018ac:	4a18      	ldr	r2, [pc, #96]	; (8001910 <HAL_ADC_ConfigChannel+0x360>)
 80018ae:	4293      	cmp	r3, r2
 80018b0:	d107      	bne.n	80018c2 <HAL_ADC_ConfigChannel+0x312>
 80018b2:	687b      	ldr	r3, [r7, #4]
 80018b4:	681a      	ldr	r2, [r3, #0]
 80018b6:	683b      	ldr	r3, [r7, #0]
 80018b8:	681b      	ldr	r3, [r3, #0]
 80018ba:	0019      	movs	r1, r3
 80018bc:	0010      	movs	r0, r2
 80018be:	f7ff fbb7 	bl	8001030 <LL_ADC_REG_SetSequencerChRem>
 80018c2:	683b      	ldr	r3, [r7, #0]
 80018c4:	681b      	ldr	r3, [r3, #0]
 80018c6:	2b00      	cmp	r3, #0
 80018c8:	da3c      	bge.n	8001944 <HAL_ADC_ConfigChannel+0x394>
 80018ca:	4b12      	ldr	r3, [pc, #72]	; (8001914 <HAL_ADC_ConfigChannel+0x364>)
 80018cc:	0018      	movs	r0, r3
 80018ce:	f7ff fb3d 	bl	8000f4c <LL_ADC_GetCommonPathInternalCh>
 80018d2:	0003      	movs	r3, r0
 80018d4:	613b      	str	r3, [r7, #16]
 80018d6:	683b      	ldr	r3, [r7, #0]
 80018d8:	681b      	ldr	r3, [r3, #0]
 80018da:	4a0f      	ldr	r2, [pc, #60]	; (8001918 <HAL_ADC_ConfigChannel+0x368>)
 80018dc:	4293      	cmp	r3, r2
 80018de:	d108      	bne.n	80018f2 <HAL_ADC_ConfigChannel+0x342>
 80018e0:	693b      	ldr	r3, [r7, #16]
 80018e2:	4a11      	ldr	r2, [pc, #68]	; (8001928 <HAL_ADC_ConfigChannel+0x378>)
 80018e4:	4013      	ands	r3, r2
 80018e6:	4a0b      	ldr	r2, [pc, #44]	; (8001914 <HAL_ADC_ConfigChannel+0x364>)
 80018e8:	0019      	movs	r1, r3
 80018ea:	0010      	movs	r0, r2
 80018ec:	f7ff fb1a 	bl	8000f24 <LL_ADC_SetCommonPathInternalCh>
 80018f0:	e028      	b.n	8001944 <HAL_ADC_ConfigChannel+0x394>
 80018f2:	683b      	ldr	r3, [r7, #0]
 80018f4:	681b      	ldr	r3, [r3, #0]
 80018f6:	4a0b      	ldr	r2, [pc, #44]	; (8001924 <HAL_ADC_ConfigChannel+0x374>)
 80018f8:	4293      	cmp	r3, r2
 80018fa:	d123      	bne.n	8001944 <HAL_ADC_ConfigChannel+0x394>
 80018fc:	693b      	ldr	r3, [r7, #16]
 80018fe:	4a0b      	ldr	r2, [pc, #44]	; (800192c <HAL_ADC_ConfigChannel+0x37c>)
 8001900:	4013      	ands	r3, r2
 8001902:	4a04      	ldr	r2, [pc, #16]	; (8001914 <HAL_ADC_ConfigChannel+0x364>)
 8001904:	0019      	movs	r1, r3
 8001906:	0010      	movs	r0, r2
 8001908:	f7ff fb0c 	bl	8000f24 <LL_ADC_SetCommonPathInternalCh>
 800190c:	e01a      	b.n	8001944 <HAL_ADC_ConfigChannel+0x394>
 800190e:	46c0      	nop			; (mov r8, r8)
 8001910:	80000004 	.word	0x80000004
 8001914:	40012708 	.word	0x40012708
 8001918:	a4000200 	.word	0xa4000200
 800191c:	2000001c 	.word	0x2000001c
 8001920:	00030d40 	.word	0x00030d40
 8001924:	a8000400 	.word	0xa8000400
 8001928:	ff7fffff 	.word	0xff7fffff
 800192c:	ffbfffff 	.word	0xffbfffff
 8001930:	687b      	ldr	r3, [r7, #4]
 8001932:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001934:	2220      	movs	r2, #32
 8001936:	431a      	orrs	r2, r3
 8001938:	687b      	ldr	r3, [r7, #4]
 800193a:	659a      	str	r2, [r3, #88]	; 0x58
 800193c:	2317      	movs	r3, #23
 800193e:	18fb      	adds	r3, r7, r3
 8001940:	2201      	movs	r2, #1
 8001942:	701a      	strb	r2, [r3, #0]
 8001944:	687b      	ldr	r3, [r7, #4]
 8001946:	2254      	movs	r2, #84	; 0x54
 8001948:	2100      	movs	r1, #0
 800194a:	5499      	strb	r1, [r3, r2]
 800194c:	2317      	movs	r3, #23
 800194e:	18fb      	adds	r3, r7, r3
 8001950:	781b      	ldrb	r3, [r3, #0]
 8001952:	0018      	movs	r0, r3
 8001954:	46bd      	mov	sp, r7
 8001956:	b006      	add	sp, #24
 8001958:	bd80      	pop	{r7, pc}
 800195a:	46c0      	nop			; (mov r8, r8)

0800195c <ADC_Enable>:
 800195c:	b580      	push	{r7, lr}
 800195e:	b084      	sub	sp, #16
 8001960:	af00      	add	r7, sp, #0
 8001962:	6078      	str	r0, [r7, #4]
 8001964:	2300      	movs	r3, #0
 8001966:	60bb      	str	r3, [r7, #8]
 8001968:	687b      	ldr	r3, [r7, #4]
 800196a:	681b      	ldr	r3, [r3, #0]
 800196c:	0018      	movs	r0, r3
 800196e:	f7ff fbc7 	bl	8001100 <LL_ADC_IsEnabled>
 8001972:	1e03      	subs	r3, r0, #0
 8001974:	d162      	bne.n	8001a3c <ADC_Enable+0xe0>
 8001976:	687b      	ldr	r3, [r7, #4]
 8001978:	681b      	ldr	r3, [r3, #0]
 800197a:	689b      	ldr	r3, [r3, #8]
 800197c:	4a32      	ldr	r2, [pc, #200]	; (8001a48 <ADC_Enable+0xec>)
 800197e:	4013      	ands	r3, r2
 8001980:	d00d      	beq.n	800199e <ADC_Enable+0x42>
 8001982:	687b      	ldr	r3, [r7, #4]
 8001984:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001986:	2210      	movs	r2, #16
 8001988:	431a      	orrs	r2, r3
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	659a      	str	r2, [r3, #88]	; 0x58
 800198e:	687b      	ldr	r3, [r7, #4]
 8001990:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001992:	2201      	movs	r2, #1
 8001994:	431a      	orrs	r2, r3
 8001996:	687b      	ldr	r3, [r7, #4]
 8001998:	65da      	str	r2, [r3, #92]	; 0x5c
 800199a:	2301      	movs	r3, #1
 800199c:	e04f      	b.n	8001a3e <ADC_Enable+0xe2>
 800199e:	687b      	ldr	r3, [r7, #4]
 80019a0:	681b      	ldr	r3, [r3, #0]
 80019a2:	0018      	movs	r0, r3
 80019a4:	f7ff fb9a 	bl	80010dc <LL_ADC_Enable>
 80019a8:	4b28      	ldr	r3, [pc, #160]	; (8001a4c <ADC_Enable+0xf0>)
 80019aa:	0018      	movs	r0, r3
 80019ac:	f7ff face 	bl	8000f4c <LL_ADC_GetCommonPathInternalCh>
 80019b0:	0002      	movs	r2, r0
 80019b2:	2380      	movs	r3, #128	; 0x80
 80019b4:	041b      	lsls	r3, r3, #16
 80019b6:	4013      	ands	r3, r2
 80019b8:	d00f      	beq.n	80019da <ADC_Enable+0x7e>
 80019ba:	4b25      	ldr	r3, [pc, #148]	; (8001a50 <ADC_Enable+0xf4>)
 80019bc:	681b      	ldr	r3, [r3, #0]
 80019be:	4925      	ldr	r1, [pc, #148]	; (8001a54 <ADC_Enable+0xf8>)
 80019c0:	0018      	movs	r0, r3
 80019c2:	f7fe fba1 	bl	8000108 <__udivsi3>
 80019c6:	0003      	movs	r3, r0
 80019c8:	3301      	adds	r3, #1
 80019ca:	60bb      	str	r3, [r7, #8]
 80019cc:	e002      	b.n	80019d4 <ADC_Enable+0x78>
 80019ce:	68bb      	ldr	r3, [r7, #8]
 80019d0:	3b01      	subs	r3, #1
 80019d2:	60bb      	str	r3, [r7, #8]
 80019d4:	68bb      	ldr	r3, [r7, #8]
 80019d6:	2b00      	cmp	r3, #0
 80019d8:	d1f9      	bne.n	80019ce <ADC_Enable+0x72>
 80019da:	687b      	ldr	r3, [r7, #4]
 80019dc:	7e5b      	ldrb	r3, [r3, #25]
 80019de:	2b01      	cmp	r3, #1
 80019e0:	d02c      	beq.n	8001a3c <ADC_Enable+0xe0>
 80019e2:	f7ff fa67 	bl	8000eb4 <HAL_GetTick>
 80019e6:	0003      	movs	r3, r0
 80019e8:	60fb      	str	r3, [r7, #12]
 80019ea:	e020      	b.n	8001a2e <ADC_Enable+0xd2>
 80019ec:	687b      	ldr	r3, [r7, #4]
 80019ee:	681b      	ldr	r3, [r3, #0]
 80019f0:	0018      	movs	r0, r3
 80019f2:	f7ff fb85 	bl	8001100 <LL_ADC_IsEnabled>
 80019f6:	1e03      	subs	r3, r0, #0
 80019f8:	d104      	bne.n	8001a04 <ADC_Enable+0xa8>
 80019fa:	687b      	ldr	r3, [r7, #4]
 80019fc:	681b      	ldr	r3, [r3, #0]
 80019fe:	0018      	movs	r0, r3
 8001a00:	f7ff fb6c 	bl	80010dc <LL_ADC_Enable>
 8001a04:	f7ff fa56 	bl	8000eb4 <HAL_GetTick>
 8001a08:	0002      	movs	r2, r0
 8001a0a:	68fb      	ldr	r3, [r7, #12]
 8001a0c:	1ad3      	subs	r3, r2, r3
 8001a0e:	2b02      	cmp	r3, #2
 8001a10:	d90d      	bls.n	8001a2e <ADC_Enable+0xd2>
 8001a12:	687b      	ldr	r3, [r7, #4]
 8001a14:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001a16:	2210      	movs	r2, #16
 8001a18:	431a      	orrs	r2, r3
 8001a1a:	687b      	ldr	r3, [r7, #4]
 8001a1c:	659a      	str	r2, [r3, #88]	; 0x58
 8001a1e:	687b      	ldr	r3, [r7, #4]
 8001a20:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001a22:	2201      	movs	r2, #1
 8001a24:	431a      	orrs	r2, r3
 8001a26:	687b      	ldr	r3, [r7, #4]
 8001a28:	65da      	str	r2, [r3, #92]	; 0x5c
 8001a2a:	2301      	movs	r3, #1
 8001a2c:	e007      	b.n	8001a3e <ADC_Enable+0xe2>
 8001a2e:	687b      	ldr	r3, [r7, #4]
 8001a30:	681b      	ldr	r3, [r3, #0]
 8001a32:	681b      	ldr	r3, [r3, #0]
 8001a34:	2201      	movs	r2, #1
 8001a36:	4013      	ands	r3, r2
 8001a38:	2b01      	cmp	r3, #1
 8001a3a:	d1d7      	bne.n	80019ec <ADC_Enable+0x90>
 8001a3c:	2300      	movs	r3, #0
 8001a3e:	0018      	movs	r0, r3
 8001a40:	46bd      	mov	sp, r7
 8001a42:	b004      	add	sp, #16
 8001a44:	bd80      	pop	{r7, pc}
 8001a46:	46c0      	nop			; (mov r8, r8)
 8001a48:	80000017 	.word	0x80000017
 8001a4c:	40012708 	.word	0x40012708
 8001a50:	2000001c 	.word	0x2000001c
 8001a54:	00030d40 	.word	0x00030d40

08001a58 <__NVIC_SetPriority>:
 8001a58:	b590      	push	{r4, r7, lr}
 8001a5a:	b083      	sub	sp, #12
 8001a5c:	af00      	add	r7, sp, #0
 8001a5e:	0002      	movs	r2, r0
 8001a60:	6039      	str	r1, [r7, #0]
 8001a62:	1dfb      	adds	r3, r7, #7
 8001a64:	701a      	strb	r2, [r3, #0]
 8001a66:	1dfb      	adds	r3, r7, #7
 8001a68:	781b      	ldrb	r3, [r3, #0]
 8001a6a:	2b7f      	cmp	r3, #127	; 0x7f
 8001a6c:	d828      	bhi.n	8001ac0 <__NVIC_SetPriority+0x68>
 8001a6e:	4a2f      	ldr	r2, [pc, #188]	; (8001b2c <__NVIC_SetPriority+0xd4>)
 8001a70:	1dfb      	adds	r3, r7, #7
 8001a72:	781b      	ldrb	r3, [r3, #0]
 8001a74:	b25b      	sxtb	r3, r3
 8001a76:	089b      	lsrs	r3, r3, #2
 8001a78:	33c0      	adds	r3, #192	; 0xc0
 8001a7a:	009b      	lsls	r3, r3, #2
 8001a7c:	589b      	ldr	r3, [r3, r2]
 8001a7e:	1dfa      	adds	r2, r7, #7
 8001a80:	7812      	ldrb	r2, [r2, #0]
 8001a82:	0011      	movs	r1, r2
 8001a84:	2203      	movs	r2, #3
 8001a86:	400a      	ands	r2, r1
 8001a88:	00d2      	lsls	r2, r2, #3
 8001a8a:	21ff      	movs	r1, #255	; 0xff
 8001a8c:	4091      	lsls	r1, r2
 8001a8e:	000a      	movs	r2, r1
 8001a90:	43d2      	mvns	r2, r2
 8001a92:	401a      	ands	r2, r3
 8001a94:	0011      	movs	r1, r2
 8001a96:	683b      	ldr	r3, [r7, #0]
 8001a98:	019b      	lsls	r3, r3, #6
 8001a9a:	22ff      	movs	r2, #255	; 0xff
 8001a9c:	401a      	ands	r2, r3
 8001a9e:	1dfb      	adds	r3, r7, #7
 8001aa0:	781b      	ldrb	r3, [r3, #0]
 8001aa2:	0018      	movs	r0, r3
 8001aa4:	2303      	movs	r3, #3
 8001aa6:	4003      	ands	r3, r0
 8001aa8:	00db      	lsls	r3, r3, #3
 8001aaa:	409a      	lsls	r2, r3
 8001aac:	481f      	ldr	r0, [pc, #124]	; (8001b2c <__NVIC_SetPriority+0xd4>)
 8001aae:	1dfb      	adds	r3, r7, #7
 8001ab0:	781b      	ldrb	r3, [r3, #0]
 8001ab2:	b25b      	sxtb	r3, r3
 8001ab4:	089b      	lsrs	r3, r3, #2
 8001ab6:	430a      	orrs	r2, r1
 8001ab8:	33c0      	adds	r3, #192	; 0xc0
 8001aba:	009b      	lsls	r3, r3, #2
 8001abc:	501a      	str	r2, [r3, r0]
 8001abe:	e031      	b.n	8001b24 <__NVIC_SetPriority+0xcc>
 8001ac0:	4a1b      	ldr	r2, [pc, #108]	; (8001b30 <__NVIC_SetPriority+0xd8>)
 8001ac2:	1dfb      	adds	r3, r7, #7
 8001ac4:	781b      	ldrb	r3, [r3, #0]
 8001ac6:	0019      	movs	r1, r3
 8001ac8:	230f      	movs	r3, #15
 8001aca:	400b      	ands	r3, r1
 8001acc:	3b08      	subs	r3, #8
 8001ace:	089b      	lsrs	r3, r3, #2
 8001ad0:	3306      	adds	r3, #6
 8001ad2:	009b      	lsls	r3, r3, #2
 8001ad4:	18d3      	adds	r3, r2, r3
 8001ad6:	3304      	adds	r3, #4
 8001ad8:	681b      	ldr	r3, [r3, #0]
 8001ada:	1dfa      	adds	r2, r7, #7
 8001adc:	7812      	ldrb	r2, [r2, #0]
 8001ade:	0011      	movs	r1, r2
 8001ae0:	2203      	movs	r2, #3
 8001ae2:	400a      	ands	r2, r1
 8001ae4:	00d2      	lsls	r2, r2, #3
 8001ae6:	21ff      	movs	r1, #255	; 0xff
 8001ae8:	4091      	lsls	r1, r2
 8001aea:	000a      	movs	r2, r1
 8001aec:	43d2      	mvns	r2, r2
 8001aee:	401a      	ands	r2, r3
 8001af0:	0011      	movs	r1, r2
 8001af2:	683b      	ldr	r3, [r7, #0]
 8001af4:	019b      	lsls	r3, r3, #6
 8001af6:	22ff      	movs	r2, #255	; 0xff
 8001af8:	401a      	ands	r2, r3
 8001afa:	1dfb      	adds	r3, r7, #7
 8001afc:	781b      	ldrb	r3, [r3, #0]
 8001afe:	0018      	movs	r0, r3
 8001b00:	2303      	movs	r3, #3
 8001b02:	4003      	ands	r3, r0
 8001b04:	00db      	lsls	r3, r3, #3
 8001b06:	409a      	lsls	r2, r3
 8001b08:	4809      	ldr	r0, [pc, #36]	; (8001b30 <__NVIC_SetPriority+0xd8>)
 8001b0a:	1dfb      	adds	r3, r7, #7
 8001b0c:	781b      	ldrb	r3, [r3, #0]
 8001b0e:	001c      	movs	r4, r3
 8001b10:	230f      	movs	r3, #15
 8001b12:	4023      	ands	r3, r4
 8001b14:	3b08      	subs	r3, #8
 8001b16:	089b      	lsrs	r3, r3, #2
 8001b18:	430a      	orrs	r2, r1
 8001b1a:	3306      	adds	r3, #6
 8001b1c:	009b      	lsls	r3, r3, #2
 8001b1e:	18c3      	adds	r3, r0, r3
 8001b20:	3304      	adds	r3, #4
 8001b22:	601a      	str	r2, [r3, #0]
 8001b24:	46c0      	nop			; (mov r8, r8)
 8001b26:	46bd      	mov	sp, r7
 8001b28:	b003      	add	sp, #12
 8001b2a:	bd90      	pop	{r4, r7, pc}
 8001b2c:	e000e100 	.word	0xe000e100
 8001b30:	e000ed00 	.word	0xe000ed00

08001b34 <SysTick_Config>:
 8001b34:	b580      	push	{r7, lr}
 8001b36:	b082      	sub	sp, #8
 8001b38:	af00      	add	r7, sp, #0
 8001b3a:	6078      	str	r0, [r7, #4]
 8001b3c:	687b      	ldr	r3, [r7, #4]
 8001b3e:	1e5a      	subs	r2, r3, #1
 8001b40:	2380      	movs	r3, #128	; 0x80
 8001b42:	045b      	lsls	r3, r3, #17
 8001b44:	429a      	cmp	r2, r3
 8001b46:	d301      	bcc.n	8001b4c <SysTick_Config+0x18>
 8001b48:	2301      	movs	r3, #1
 8001b4a:	e010      	b.n	8001b6e <SysTick_Config+0x3a>
 8001b4c:	4b0a      	ldr	r3, [pc, #40]	; (8001b78 <SysTick_Config+0x44>)
 8001b4e:	687a      	ldr	r2, [r7, #4]
 8001b50:	3a01      	subs	r2, #1
 8001b52:	605a      	str	r2, [r3, #4]
 8001b54:	2301      	movs	r3, #1
 8001b56:	425b      	negs	r3, r3
 8001b58:	2103      	movs	r1, #3
 8001b5a:	0018      	movs	r0, r3
 8001b5c:	f7ff ff7c 	bl	8001a58 <__NVIC_SetPriority>
 8001b60:	4b05      	ldr	r3, [pc, #20]	; (8001b78 <SysTick_Config+0x44>)
 8001b62:	2200      	movs	r2, #0
 8001b64:	609a      	str	r2, [r3, #8]
 8001b66:	4b04      	ldr	r3, [pc, #16]	; (8001b78 <SysTick_Config+0x44>)
 8001b68:	2207      	movs	r2, #7
 8001b6a:	601a      	str	r2, [r3, #0]
 8001b6c:	2300      	movs	r3, #0
 8001b6e:	0018      	movs	r0, r3
 8001b70:	46bd      	mov	sp, r7
 8001b72:	b002      	add	sp, #8
 8001b74:	bd80      	pop	{r7, pc}
 8001b76:	46c0      	nop			; (mov r8, r8)
 8001b78:	e000e010 	.word	0xe000e010

08001b7c <HAL_NVIC_SetPriority>:
 8001b7c:	b580      	push	{r7, lr}
 8001b7e:	b084      	sub	sp, #16
 8001b80:	af00      	add	r7, sp, #0
 8001b82:	60b9      	str	r1, [r7, #8]
 8001b84:	607a      	str	r2, [r7, #4]
 8001b86:	210f      	movs	r1, #15
 8001b88:	187b      	adds	r3, r7, r1
 8001b8a:	1c02      	adds	r2, r0, #0
 8001b8c:	701a      	strb	r2, [r3, #0]
 8001b8e:	68ba      	ldr	r2, [r7, #8]
 8001b90:	187b      	adds	r3, r7, r1
 8001b92:	781b      	ldrb	r3, [r3, #0]
 8001b94:	b25b      	sxtb	r3, r3
 8001b96:	0011      	movs	r1, r2
 8001b98:	0018      	movs	r0, r3
 8001b9a:	f7ff ff5d 	bl	8001a58 <__NVIC_SetPriority>
 8001b9e:	46c0      	nop			; (mov r8, r8)
 8001ba0:	46bd      	mov	sp, r7
 8001ba2:	b004      	add	sp, #16
 8001ba4:	bd80      	pop	{r7, pc}

08001ba6 <HAL_SYSTICK_Config>:
 8001ba6:	b580      	push	{r7, lr}
 8001ba8:	b082      	sub	sp, #8
 8001baa:	af00      	add	r7, sp, #0
 8001bac:	6078      	str	r0, [r7, #4]
 8001bae:	687b      	ldr	r3, [r7, #4]
 8001bb0:	0018      	movs	r0, r3
 8001bb2:	f7ff ffbf 	bl	8001b34 <SysTick_Config>
 8001bb6:	0003      	movs	r3, r0
 8001bb8:	0018      	movs	r0, r3
 8001bba:	46bd      	mov	sp, r7
 8001bbc:	b002      	add	sp, #8
 8001bbe:	bd80      	pop	{r7, pc}

08001bc0 <HAL_GPIO_Init>:
 8001bc0:	b580      	push	{r7, lr}
 8001bc2:	b086      	sub	sp, #24
 8001bc4:	af00      	add	r7, sp, #0
 8001bc6:	6078      	str	r0, [r7, #4]
 8001bc8:	6039      	str	r1, [r7, #0]
 8001bca:	2300      	movs	r3, #0
 8001bcc:	613b      	str	r3, [r7, #16]
 8001bce:	e14d      	b.n	8001e6c <HAL_GPIO_Init+0x2ac>
 8001bd0:	683b      	ldr	r3, [r7, #0]
 8001bd2:	681b      	ldr	r3, [r3, #0]
 8001bd4:	2101      	movs	r1, #1
 8001bd6:	693a      	ldr	r2, [r7, #16]
 8001bd8:	4091      	lsls	r1, r2
 8001bda:	000a      	movs	r2, r1
 8001bdc:	4013      	ands	r3, r2
 8001bde:	60fb      	str	r3, [r7, #12]
 8001be0:	68fb      	ldr	r3, [r7, #12]
 8001be2:	2b00      	cmp	r3, #0
 8001be4:	d100      	bne.n	8001be8 <HAL_GPIO_Init+0x28>
 8001be6:	e13e      	b.n	8001e66 <HAL_GPIO_Init+0x2a6>
 8001be8:	683b      	ldr	r3, [r7, #0]
 8001bea:	685b      	ldr	r3, [r3, #4]
 8001bec:	2b02      	cmp	r3, #2
 8001bee:	d003      	beq.n	8001bf8 <HAL_GPIO_Init+0x38>
 8001bf0:	683b      	ldr	r3, [r7, #0]
 8001bf2:	685b      	ldr	r3, [r3, #4]
 8001bf4:	2b12      	cmp	r3, #18
 8001bf6:	d125      	bne.n	8001c44 <HAL_GPIO_Init+0x84>
 8001bf8:	693b      	ldr	r3, [r7, #16]
 8001bfa:	08da      	lsrs	r2, r3, #3
 8001bfc:	687b      	ldr	r3, [r7, #4]
 8001bfe:	3208      	adds	r2, #8
 8001c00:	0092      	lsls	r2, r2, #2
 8001c02:	58d3      	ldr	r3, [r2, r3]
 8001c04:	617b      	str	r3, [r7, #20]
 8001c06:	693b      	ldr	r3, [r7, #16]
 8001c08:	2207      	movs	r2, #7
 8001c0a:	4013      	ands	r3, r2
 8001c0c:	009b      	lsls	r3, r3, #2
 8001c0e:	220f      	movs	r2, #15
 8001c10:	409a      	lsls	r2, r3
 8001c12:	0013      	movs	r3, r2
 8001c14:	43da      	mvns	r2, r3
 8001c16:	697b      	ldr	r3, [r7, #20]
 8001c18:	4013      	ands	r3, r2
 8001c1a:	617b      	str	r3, [r7, #20]
 8001c1c:	683b      	ldr	r3, [r7, #0]
 8001c1e:	691b      	ldr	r3, [r3, #16]
 8001c20:	220f      	movs	r2, #15
 8001c22:	401a      	ands	r2, r3
 8001c24:	693b      	ldr	r3, [r7, #16]
 8001c26:	2107      	movs	r1, #7
 8001c28:	400b      	ands	r3, r1
 8001c2a:	009b      	lsls	r3, r3, #2
 8001c2c:	409a      	lsls	r2, r3
 8001c2e:	0013      	movs	r3, r2
 8001c30:	697a      	ldr	r2, [r7, #20]
 8001c32:	4313      	orrs	r3, r2
 8001c34:	617b      	str	r3, [r7, #20]
 8001c36:	693b      	ldr	r3, [r7, #16]
 8001c38:	08da      	lsrs	r2, r3, #3
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	3208      	adds	r2, #8
 8001c3e:	0092      	lsls	r2, r2, #2
 8001c40:	6979      	ldr	r1, [r7, #20]
 8001c42:	50d1      	str	r1, [r2, r3]
 8001c44:	687b      	ldr	r3, [r7, #4]
 8001c46:	681b      	ldr	r3, [r3, #0]
 8001c48:	617b      	str	r3, [r7, #20]
 8001c4a:	693b      	ldr	r3, [r7, #16]
 8001c4c:	005b      	lsls	r3, r3, #1
 8001c4e:	2203      	movs	r2, #3
 8001c50:	409a      	lsls	r2, r3
 8001c52:	0013      	movs	r3, r2
 8001c54:	43da      	mvns	r2, r3
 8001c56:	697b      	ldr	r3, [r7, #20]
 8001c58:	4013      	ands	r3, r2
 8001c5a:	617b      	str	r3, [r7, #20]
 8001c5c:	683b      	ldr	r3, [r7, #0]
 8001c5e:	685b      	ldr	r3, [r3, #4]
 8001c60:	2203      	movs	r2, #3
 8001c62:	401a      	ands	r2, r3
 8001c64:	693b      	ldr	r3, [r7, #16]
 8001c66:	005b      	lsls	r3, r3, #1
 8001c68:	409a      	lsls	r2, r3
 8001c6a:	0013      	movs	r3, r2
 8001c6c:	697a      	ldr	r2, [r7, #20]
 8001c6e:	4313      	orrs	r3, r2
 8001c70:	617b      	str	r3, [r7, #20]
 8001c72:	687b      	ldr	r3, [r7, #4]
 8001c74:	697a      	ldr	r2, [r7, #20]
 8001c76:	601a      	str	r2, [r3, #0]
 8001c78:	683b      	ldr	r3, [r7, #0]
 8001c7a:	685b      	ldr	r3, [r3, #4]
 8001c7c:	2b01      	cmp	r3, #1
 8001c7e:	d00b      	beq.n	8001c98 <HAL_GPIO_Init+0xd8>
 8001c80:	683b      	ldr	r3, [r7, #0]
 8001c82:	685b      	ldr	r3, [r3, #4]
 8001c84:	2b02      	cmp	r3, #2
 8001c86:	d007      	beq.n	8001c98 <HAL_GPIO_Init+0xd8>
 8001c88:	683b      	ldr	r3, [r7, #0]
 8001c8a:	685b      	ldr	r3, [r3, #4]
 8001c8c:	2b11      	cmp	r3, #17
 8001c8e:	d003      	beq.n	8001c98 <HAL_GPIO_Init+0xd8>
 8001c90:	683b      	ldr	r3, [r7, #0]
 8001c92:	685b      	ldr	r3, [r3, #4]
 8001c94:	2b12      	cmp	r3, #18
 8001c96:	d130      	bne.n	8001cfa <HAL_GPIO_Init+0x13a>
 8001c98:	687b      	ldr	r3, [r7, #4]
 8001c9a:	689b      	ldr	r3, [r3, #8]
 8001c9c:	617b      	str	r3, [r7, #20]
 8001c9e:	693b      	ldr	r3, [r7, #16]
 8001ca0:	005b      	lsls	r3, r3, #1
 8001ca2:	2203      	movs	r2, #3
 8001ca4:	409a      	lsls	r2, r3
 8001ca6:	0013      	movs	r3, r2
 8001ca8:	43da      	mvns	r2, r3
 8001caa:	697b      	ldr	r3, [r7, #20]
 8001cac:	4013      	ands	r3, r2
 8001cae:	617b      	str	r3, [r7, #20]
 8001cb0:	683b      	ldr	r3, [r7, #0]
 8001cb2:	68da      	ldr	r2, [r3, #12]
 8001cb4:	693b      	ldr	r3, [r7, #16]
 8001cb6:	005b      	lsls	r3, r3, #1
 8001cb8:	409a      	lsls	r2, r3
 8001cba:	0013      	movs	r3, r2
 8001cbc:	697a      	ldr	r2, [r7, #20]
 8001cbe:	4313      	orrs	r3, r2
 8001cc0:	617b      	str	r3, [r7, #20]
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	697a      	ldr	r2, [r7, #20]
 8001cc6:	609a      	str	r2, [r3, #8]
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	685b      	ldr	r3, [r3, #4]
 8001ccc:	617b      	str	r3, [r7, #20]
 8001cce:	2201      	movs	r2, #1
 8001cd0:	693b      	ldr	r3, [r7, #16]
 8001cd2:	409a      	lsls	r2, r3
 8001cd4:	0013      	movs	r3, r2
 8001cd6:	43da      	mvns	r2, r3
 8001cd8:	697b      	ldr	r3, [r7, #20]
 8001cda:	4013      	ands	r3, r2
 8001cdc:	617b      	str	r3, [r7, #20]
 8001cde:	683b      	ldr	r3, [r7, #0]
 8001ce0:	685b      	ldr	r3, [r3, #4]
 8001ce2:	091b      	lsrs	r3, r3, #4
 8001ce4:	2201      	movs	r2, #1
 8001ce6:	401a      	ands	r2, r3
 8001ce8:	693b      	ldr	r3, [r7, #16]
 8001cea:	409a      	lsls	r2, r3
 8001cec:	0013      	movs	r3, r2
 8001cee:	697a      	ldr	r2, [r7, #20]
 8001cf0:	4313      	orrs	r3, r2
 8001cf2:	617b      	str	r3, [r7, #20]
 8001cf4:	687b      	ldr	r3, [r7, #4]
 8001cf6:	697a      	ldr	r2, [r7, #20]
 8001cf8:	605a      	str	r2, [r3, #4]
 8001cfa:	683b      	ldr	r3, [r7, #0]
 8001cfc:	685b      	ldr	r3, [r3, #4]
 8001cfe:	2b03      	cmp	r3, #3
 8001d00:	d017      	beq.n	8001d32 <HAL_GPIO_Init+0x172>
 8001d02:	687b      	ldr	r3, [r7, #4]
 8001d04:	68db      	ldr	r3, [r3, #12]
 8001d06:	617b      	str	r3, [r7, #20]
 8001d08:	693b      	ldr	r3, [r7, #16]
 8001d0a:	005b      	lsls	r3, r3, #1
 8001d0c:	2203      	movs	r2, #3
 8001d0e:	409a      	lsls	r2, r3
 8001d10:	0013      	movs	r3, r2
 8001d12:	43da      	mvns	r2, r3
 8001d14:	697b      	ldr	r3, [r7, #20]
 8001d16:	4013      	ands	r3, r2
 8001d18:	617b      	str	r3, [r7, #20]
 8001d1a:	683b      	ldr	r3, [r7, #0]
 8001d1c:	689a      	ldr	r2, [r3, #8]
 8001d1e:	693b      	ldr	r3, [r7, #16]
 8001d20:	005b      	lsls	r3, r3, #1
 8001d22:	409a      	lsls	r2, r3
 8001d24:	0013      	movs	r3, r2
 8001d26:	697a      	ldr	r2, [r7, #20]
 8001d28:	4313      	orrs	r3, r2
 8001d2a:	617b      	str	r3, [r7, #20]
 8001d2c:	687b      	ldr	r3, [r7, #4]
 8001d2e:	697a      	ldr	r2, [r7, #20]
 8001d30:	60da      	str	r2, [r3, #12]
 8001d32:	683b      	ldr	r3, [r7, #0]
 8001d34:	685a      	ldr	r2, [r3, #4]
 8001d36:	2380      	movs	r3, #128	; 0x80
 8001d38:	055b      	lsls	r3, r3, #21
 8001d3a:	4013      	ands	r3, r2
 8001d3c:	d100      	bne.n	8001d40 <HAL_GPIO_Init+0x180>
 8001d3e:	e092      	b.n	8001e66 <HAL_GPIO_Init+0x2a6>
 8001d40:	4a50      	ldr	r2, [pc, #320]	; (8001e84 <HAL_GPIO_Init+0x2c4>)
 8001d42:	693b      	ldr	r3, [r7, #16]
 8001d44:	089b      	lsrs	r3, r3, #2
 8001d46:	3318      	adds	r3, #24
 8001d48:	009b      	lsls	r3, r3, #2
 8001d4a:	589b      	ldr	r3, [r3, r2]
 8001d4c:	617b      	str	r3, [r7, #20]
 8001d4e:	693b      	ldr	r3, [r7, #16]
 8001d50:	2203      	movs	r2, #3
 8001d52:	4013      	ands	r3, r2
 8001d54:	00db      	lsls	r3, r3, #3
 8001d56:	220f      	movs	r2, #15
 8001d58:	409a      	lsls	r2, r3
 8001d5a:	0013      	movs	r3, r2
 8001d5c:	43da      	mvns	r2, r3
 8001d5e:	697b      	ldr	r3, [r7, #20]
 8001d60:	4013      	ands	r3, r2
 8001d62:	617b      	str	r3, [r7, #20]
 8001d64:	687a      	ldr	r2, [r7, #4]
 8001d66:	23a0      	movs	r3, #160	; 0xa0
 8001d68:	05db      	lsls	r3, r3, #23
 8001d6a:	429a      	cmp	r2, r3
 8001d6c:	d013      	beq.n	8001d96 <HAL_GPIO_Init+0x1d6>
 8001d6e:	687b      	ldr	r3, [r7, #4]
 8001d70:	4a45      	ldr	r2, [pc, #276]	; (8001e88 <HAL_GPIO_Init+0x2c8>)
 8001d72:	4293      	cmp	r3, r2
 8001d74:	d00d      	beq.n	8001d92 <HAL_GPIO_Init+0x1d2>
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	4a44      	ldr	r2, [pc, #272]	; (8001e8c <HAL_GPIO_Init+0x2cc>)
 8001d7a:	4293      	cmp	r3, r2
 8001d7c:	d007      	beq.n	8001d8e <HAL_GPIO_Init+0x1ce>
 8001d7e:	687b      	ldr	r3, [r7, #4]
 8001d80:	4a43      	ldr	r2, [pc, #268]	; (8001e90 <HAL_GPIO_Init+0x2d0>)
 8001d82:	4293      	cmp	r3, r2
 8001d84:	d101      	bne.n	8001d8a <HAL_GPIO_Init+0x1ca>
 8001d86:	2303      	movs	r3, #3
 8001d88:	e006      	b.n	8001d98 <HAL_GPIO_Init+0x1d8>
 8001d8a:	2305      	movs	r3, #5
 8001d8c:	e004      	b.n	8001d98 <HAL_GPIO_Init+0x1d8>
 8001d8e:	2302      	movs	r3, #2
 8001d90:	e002      	b.n	8001d98 <HAL_GPIO_Init+0x1d8>
 8001d92:	2301      	movs	r3, #1
 8001d94:	e000      	b.n	8001d98 <HAL_GPIO_Init+0x1d8>
 8001d96:	2300      	movs	r3, #0
 8001d98:	693a      	ldr	r2, [r7, #16]
 8001d9a:	2103      	movs	r1, #3
 8001d9c:	400a      	ands	r2, r1
 8001d9e:	00d2      	lsls	r2, r2, #3
 8001da0:	4093      	lsls	r3, r2
 8001da2:	697a      	ldr	r2, [r7, #20]
 8001da4:	4313      	orrs	r3, r2
 8001da6:	617b      	str	r3, [r7, #20]
 8001da8:	4936      	ldr	r1, [pc, #216]	; (8001e84 <HAL_GPIO_Init+0x2c4>)
 8001daa:	693b      	ldr	r3, [r7, #16]
 8001dac:	089b      	lsrs	r3, r3, #2
 8001dae:	3318      	adds	r3, #24
 8001db0:	009b      	lsls	r3, r3, #2
 8001db2:	697a      	ldr	r2, [r7, #20]
 8001db4:	505a      	str	r2, [r3, r1]
 8001db6:	4a33      	ldr	r2, [pc, #204]	; (8001e84 <HAL_GPIO_Init+0x2c4>)
 8001db8:	2380      	movs	r3, #128	; 0x80
 8001dba:	58d3      	ldr	r3, [r2, r3]
 8001dbc:	617b      	str	r3, [r7, #20]
 8001dbe:	68fb      	ldr	r3, [r7, #12]
 8001dc0:	43da      	mvns	r2, r3
 8001dc2:	697b      	ldr	r3, [r7, #20]
 8001dc4:	4013      	ands	r3, r2
 8001dc6:	617b      	str	r3, [r7, #20]
 8001dc8:	683b      	ldr	r3, [r7, #0]
 8001dca:	685a      	ldr	r2, [r3, #4]
 8001dcc:	2380      	movs	r3, #128	; 0x80
 8001dce:	025b      	lsls	r3, r3, #9
 8001dd0:	4013      	ands	r3, r2
 8001dd2:	d003      	beq.n	8001ddc <HAL_GPIO_Init+0x21c>
 8001dd4:	697a      	ldr	r2, [r7, #20]
 8001dd6:	68fb      	ldr	r3, [r7, #12]
 8001dd8:	4313      	orrs	r3, r2
 8001dda:	617b      	str	r3, [r7, #20]
 8001ddc:	4929      	ldr	r1, [pc, #164]	; (8001e84 <HAL_GPIO_Init+0x2c4>)
 8001dde:	2280      	movs	r2, #128	; 0x80
 8001de0:	697b      	ldr	r3, [r7, #20]
 8001de2:	508b      	str	r3, [r1, r2]
 8001de4:	4a27      	ldr	r2, [pc, #156]	; (8001e84 <HAL_GPIO_Init+0x2c4>)
 8001de6:	2384      	movs	r3, #132	; 0x84
 8001de8:	58d3      	ldr	r3, [r2, r3]
 8001dea:	617b      	str	r3, [r7, #20]
 8001dec:	68fb      	ldr	r3, [r7, #12]
 8001dee:	43da      	mvns	r2, r3
 8001df0:	697b      	ldr	r3, [r7, #20]
 8001df2:	4013      	ands	r3, r2
 8001df4:	617b      	str	r3, [r7, #20]
 8001df6:	683b      	ldr	r3, [r7, #0]
 8001df8:	685a      	ldr	r2, [r3, #4]
 8001dfa:	2380      	movs	r3, #128	; 0x80
 8001dfc:	029b      	lsls	r3, r3, #10
 8001dfe:	4013      	ands	r3, r2
 8001e00:	d003      	beq.n	8001e0a <HAL_GPIO_Init+0x24a>
 8001e02:	697a      	ldr	r2, [r7, #20]
 8001e04:	68fb      	ldr	r3, [r7, #12]
 8001e06:	4313      	orrs	r3, r2
 8001e08:	617b      	str	r3, [r7, #20]
 8001e0a:	491e      	ldr	r1, [pc, #120]	; (8001e84 <HAL_GPIO_Init+0x2c4>)
 8001e0c:	2284      	movs	r2, #132	; 0x84
 8001e0e:	697b      	ldr	r3, [r7, #20]
 8001e10:	508b      	str	r3, [r1, r2]
 8001e12:	4b1c      	ldr	r3, [pc, #112]	; (8001e84 <HAL_GPIO_Init+0x2c4>)
 8001e14:	681b      	ldr	r3, [r3, #0]
 8001e16:	617b      	str	r3, [r7, #20]
 8001e18:	68fb      	ldr	r3, [r7, #12]
 8001e1a:	43da      	mvns	r2, r3
 8001e1c:	697b      	ldr	r3, [r7, #20]
 8001e1e:	4013      	ands	r3, r2
 8001e20:	617b      	str	r3, [r7, #20]
 8001e22:	683b      	ldr	r3, [r7, #0]
 8001e24:	685a      	ldr	r2, [r3, #4]
 8001e26:	2380      	movs	r3, #128	; 0x80
 8001e28:	035b      	lsls	r3, r3, #13
 8001e2a:	4013      	ands	r3, r2
 8001e2c:	d003      	beq.n	8001e36 <HAL_GPIO_Init+0x276>
 8001e2e:	697a      	ldr	r2, [r7, #20]
 8001e30:	68fb      	ldr	r3, [r7, #12]
 8001e32:	4313      	orrs	r3, r2
 8001e34:	617b      	str	r3, [r7, #20]
 8001e36:	4b13      	ldr	r3, [pc, #76]	; (8001e84 <HAL_GPIO_Init+0x2c4>)
 8001e38:	697a      	ldr	r2, [r7, #20]
 8001e3a:	601a      	str	r2, [r3, #0]
 8001e3c:	4b11      	ldr	r3, [pc, #68]	; (8001e84 <HAL_GPIO_Init+0x2c4>)
 8001e3e:	685b      	ldr	r3, [r3, #4]
 8001e40:	617b      	str	r3, [r7, #20]
 8001e42:	68fb      	ldr	r3, [r7, #12]
 8001e44:	43da      	mvns	r2, r3
 8001e46:	697b      	ldr	r3, [r7, #20]
 8001e48:	4013      	ands	r3, r2
 8001e4a:	617b      	str	r3, [r7, #20]
 8001e4c:	683b      	ldr	r3, [r7, #0]
 8001e4e:	685a      	ldr	r2, [r3, #4]
 8001e50:	2380      	movs	r3, #128	; 0x80
 8001e52:	039b      	lsls	r3, r3, #14
 8001e54:	4013      	ands	r3, r2
 8001e56:	d003      	beq.n	8001e60 <HAL_GPIO_Init+0x2a0>
 8001e58:	697a      	ldr	r2, [r7, #20]
 8001e5a:	68fb      	ldr	r3, [r7, #12]
 8001e5c:	4313      	orrs	r3, r2
 8001e5e:	617b      	str	r3, [r7, #20]
 8001e60:	4b08      	ldr	r3, [pc, #32]	; (8001e84 <HAL_GPIO_Init+0x2c4>)
 8001e62:	697a      	ldr	r2, [r7, #20]
 8001e64:	605a      	str	r2, [r3, #4]
 8001e66:	693b      	ldr	r3, [r7, #16]
 8001e68:	3301      	adds	r3, #1
 8001e6a:	613b      	str	r3, [r7, #16]
 8001e6c:	683b      	ldr	r3, [r7, #0]
 8001e6e:	681a      	ldr	r2, [r3, #0]
 8001e70:	693b      	ldr	r3, [r7, #16]
 8001e72:	40da      	lsrs	r2, r3
 8001e74:	1e13      	subs	r3, r2, #0
 8001e76:	d000      	beq.n	8001e7a <HAL_GPIO_Init+0x2ba>
 8001e78:	e6aa      	b.n	8001bd0 <HAL_GPIO_Init+0x10>
 8001e7a:	46c0      	nop			; (mov r8, r8)
 8001e7c:	46c0      	nop			; (mov r8, r8)
 8001e7e:	46bd      	mov	sp, r7
 8001e80:	b006      	add	sp, #24
 8001e82:	bd80      	pop	{r7, pc}
 8001e84:	40021800 	.word	0x40021800
 8001e88:	50000400 	.word	0x50000400
 8001e8c:	50000800 	.word	0x50000800
 8001e90:	50001400 	.word	0x50001400

08001e94 <HAL_GPIO_ReadPin>:
 8001e94:	b580      	push	{r7, lr}
 8001e96:	b084      	sub	sp, #16
 8001e98:	af00      	add	r7, sp, #0
 8001e9a:	6078      	str	r0, [r7, #4]
 8001e9c:	000a      	movs	r2, r1
 8001e9e:	1cbb      	adds	r3, r7, #2
 8001ea0:	801a      	strh	r2, [r3, #0]
 8001ea2:	687b      	ldr	r3, [r7, #4]
 8001ea4:	691b      	ldr	r3, [r3, #16]
 8001ea6:	1cba      	adds	r2, r7, #2
 8001ea8:	8812      	ldrh	r2, [r2, #0]
 8001eaa:	4013      	ands	r3, r2
 8001eac:	d004      	beq.n	8001eb8 <HAL_GPIO_ReadPin+0x24>
 8001eae:	230f      	movs	r3, #15
 8001eb0:	18fb      	adds	r3, r7, r3
 8001eb2:	2201      	movs	r2, #1
 8001eb4:	701a      	strb	r2, [r3, #0]
 8001eb6:	e003      	b.n	8001ec0 <HAL_GPIO_ReadPin+0x2c>
 8001eb8:	230f      	movs	r3, #15
 8001eba:	18fb      	adds	r3, r7, r3
 8001ebc:	2200      	movs	r2, #0
 8001ebe:	701a      	strb	r2, [r3, #0]
 8001ec0:	230f      	movs	r3, #15
 8001ec2:	18fb      	adds	r3, r7, r3
 8001ec4:	781b      	ldrb	r3, [r3, #0]
 8001ec6:	0018      	movs	r0, r3
 8001ec8:	46bd      	mov	sp, r7
 8001eca:	b004      	add	sp, #16
 8001ecc:	bd80      	pop	{r7, pc}

08001ece <HAL_GPIO_WritePin>:
 8001ece:	b580      	push	{r7, lr}
 8001ed0:	b082      	sub	sp, #8
 8001ed2:	af00      	add	r7, sp, #0
 8001ed4:	6078      	str	r0, [r7, #4]
 8001ed6:	0008      	movs	r0, r1
 8001ed8:	0011      	movs	r1, r2
 8001eda:	1cbb      	adds	r3, r7, #2
 8001edc:	1c02      	adds	r2, r0, #0
 8001ede:	801a      	strh	r2, [r3, #0]
 8001ee0:	1c7b      	adds	r3, r7, #1
 8001ee2:	1c0a      	adds	r2, r1, #0
 8001ee4:	701a      	strb	r2, [r3, #0]
 8001ee6:	1c7b      	adds	r3, r7, #1
 8001ee8:	781b      	ldrb	r3, [r3, #0]
 8001eea:	2b00      	cmp	r3, #0
 8001eec:	d004      	beq.n	8001ef8 <HAL_GPIO_WritePin+0x2a>
 8001eee:	1cbb      	adds	r3, r7, #2
 8001ef0:	881a      	ldrh	r2, [r3, #0]
 8001ef2:	687b      	ldr	r3, [r7, #4]
 8001ef4:	619a      	str	r2, [r3, #24]
 8001ef6:	e003      	b.n	8001f00 <HAL_GPIO_WritePin+0x32>
 8001ef8:	1cbb      	adds	r3, r7, #2
 8001efa:	881a      	ldrh	r2, [r3, #0]
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	629a      	str	r2, [r3, #40]	; 0x28
 8001f00:	46c0      	nop			; (mov r8, r8)
 8001f02:	46bd      	mov	sp, r7
 8001f04:	b002      	add	sp, #8
 8001f06:	bd80      	pop	{r7, pc}

08001f08 <HAL_RCC_OscConfig>:
 8001f08:	b580      	push	{r7, lr}
 8001f0a:	b086      	sub	sp, #24
 8001f0c:	af00      	add	r7, sp, #0
 8001f0e:	6078      	str	r0, [r7, #4]
 8001f10:	687b      	ldr	r3, [r7, #4]
 8001f12:	2b00      	cmp	r3, #0
 8001f14:	d101      	bne.n	8001f1a <HAL_RCC_OscConfig+0x12>
 8001f16:	2301      	movs	r3, #1
 8001f18:	e1e5      	b.n	80022e6 <HAL_RCC_OscConfig+0x3de>
 8001f1a:	687b      	ldr	r3, [r7, #4]
 8001f1c:	681b      	ldr	r3, [r3, #0]
 8001f1e:	2201      	movs	r2, #1
 8001f20:	4013      	ands	r3, r2
 8001f22:	d100      	bne.n	8001f26 <HAL_RCC_OscConfig+0x1e>
 8001f24:	e06f      	b.n	8002006 <HAL_RCC_OscConfig+0xfe>
 8001f26:	4bc4      	ldr	r3, [pc, #784]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8001f28:	689b      	ldr	r3, [r3, #8]
 8001f2a:	2238      	movs	r2, #56	; 0x38
 8001f2c:	4013      	ands	r3, r2
 8001f2e:	617b      	str	r3, [r7, #20]
 8001f30:	697b      	ldr	r3, [r7, #20]
 8001f32:	2b08      	cmp	r3, #8
 8001f34:	d10b      	bne.n	8001f4e <HAL_RCC_OscConfig+0x46>
 8001f36:	4bc0      	ldr	r3, [pc, #768]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8001f38:	681a      	ldr	r2, [r3, #0]
 8001f3a:	2380      	movs	r3, #128	; 0x80
 8001f3c:	029b      	lsls	r3, r3, #10
 8001f3e:	4013      	ands	r3, r2
 8001f40:	d061      	beq.n	8002006 <HAL_RCC_OscConfig+0xfe>
 8001f42:	687b      	ldr	r3, [r7, #4]
 8001f44:	685b      	ldr	r3, [r3, #4]
 8001f46:	2b00      	cmp	r3, #0
 8001f48:	d15d      	bne.n	8002006 <HAL_RCC_OscConfig+0xfe>
 8001f4a:	2301      	movs	r3, #1
 8001f4c:	e1cb      	b.n	80022e6 <HAL_RCC_OscConfig+0x3de>
 8001f4e:	687b      	ldr	r3, [r7, #4]
 8001f50:	685a      	ldr	r2, [r3, #4]
 8001f52:	2380      	movs	r3, #128	; 0x80
 8001f54:	025b      	lsls	r3, r3, #9
 8001f56:	429a      	cmp	r2, r3
 8001f58:	d107      	bne.n	8001f6a <HAL_RCC_OscConfig+0x62>
 8001f5a:	4bb7      	ldr	r3, [pc, #732]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8001f5c:	681a      	ldr	r2, [r3, #0]
 8001f5e:	4bb6      	ldr	r3, [pc, #728]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8001f60:	2180      	movs	r1, #128	; 0x80
 8001f62:	0249      	lsls	r1, r1, #9
 8001f64:	430a      	orrs	r2, r1
 8001f66:	601a      	str	r2, [r3, #0]
 8001f68:	e020      	b.n	8001fac <HAL_RCC_OscConfig+0xa4>
 8001f6a:	687b      	ldr	r3, [r7, #4]
 8001f6c:	685a      	ldr	r2, [r3, #4]
 8001f6e:	23a0      	movs	r3, #160	; 0xa0
 8001f70:	02db      	lsls	r3, r3, #11
 8001f72:	429a      	cmp	r2, r3
 8001f74:	d10e      	bne.n	8001f94 <HAL_RCC_OscConfig+0x8c>
 8001f76:	4bb0      	ldr	r3, [pc, #704]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8001f78:	681a      	ldr	r2, [r3, #0]
 8001f7a:	4baf      	ldr	r3, [pc, #700]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8001f7c:	2180      	movs	r1, #128	; 0x80
 8001f7e:	02c9      	lsls	r1, r1, #11
 8001f80:	430a      	orrs	r2, r1
 8001f82:	601a      	str	r2, [r3, #0]
 8001f84:	4bac      	ldr	r3, [pc, #688]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8001f86:	681a      	ldr	r2, [r3, #0]
 8001f88:	4bab      	ldr	r3, [pc, #684]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8001f8a:	2180      	movs	r1, #128	; 0x80
 8001f8c:	0249      	lsls	r1, r1, #9
 8001f8e:	430a      	orrs	r2, r1
 8001f90:	601a      	str	r2, [r3, #0]
 8001f92:	e00b      	b.n	8001fac <HAL_RCC_OscConfig+0xa4>
 8001f94:	4ba8      	ldr	r3, [pc, #672]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8001f96:	681a      	ldr	r2, [r3, #0]
 8001f98:	4ba7      	ldr	r3, [pc, #668]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8001f9a:	49a8      	ldr	r1, [pc, #672]	; (800223c <HAL_RCC_OscConfig+0x334>)
 8001f9c:	400a      	ands	r2, r1
 8001f9e:	601a      	str	r2, [r3, #0]
 8001fa0:	4ba5      	ldr	r3, [pc, #660]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8001fa2:	681a      	ldr	r2, [r3, #0]
 8001fa4:	4ba4      	ldr	r3, [pc, #656]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8001fa6:	49a6      	ldr	r1, [pc, #664]	; (8002240 <HAL_RCC_OscConfig+0x338>)
 8001fa8:	400a      	ands	r2, r1
 8001faa:	601a      	str	r2, [r3, #0]
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	685b      	ldr	r3, [r3, #4]
 8001fb0:	2b00      	cmp	r3, #0
 8001fb2:	d014      	beq.n	8001fde <HAL_RCC_OscConfig+0xd6>
 8001fb4:	f7fe ff7e 	bl	8000eb4 <HAL_GetTick>
 8001fb8:	0003      	movs	r3, r0
 8001fba:	613b      	str	r3, [r7, #16]
 8001fbc:	e008      	b.n	8001fd0 <HAL_RCC_OscConfig+0xc8>
 8001fbe:	f7fe ff79 	bl	8000eb4 <HAL_GetTick>
 8001fc2:	0002      	movs	r2, r0
 8001fc4:	693b      	ldr	r3, [r7, #16]
 8001fc6:	1ad3      	subs	r3, r2, r3
 8001fc8:	2b64      	cmp	r3, #100	; 0x64
 8001fca:	d901      	bls.n	8001fd0 <HAL_RCC_OscConfig+0xc8>
 8001fcc:	2303      	movs	r3, #3
 8001fce:	e18a      	b.n	80022e6 <HAL_RCC_OscConfig+0x3de>
 8001fd0:	4b99      	ldr	r3, [pc, #612]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8001fd2:	681a      	ldr	r2, [r3, #0]
 8001fd4:	2380      	movs	r3, #128	; 0x80
 8001fd6:	029b      	lsls	r3, r3, #10
 8001fd8:	4013      	ands	r3, r2
 8001fda:	d0f0      	beq.n	8001fbe <HAL_RCC_OscConfig+0xb6>
 8001fdc:	e013      	b.n	8002006 <HAL_RCC_OscConfig+0xfe>
 8001fde:	f7fe ff69 	bl	8000eb4 <HAL_GetTick>
 8001fe2:	0003      	movs	r3, r0
 8001fe4:	613b      	str	r3, [r7, #16]
 8001fe6:	e008      	b.n	8001ffa <HAL_RCC_OscConfig+0xf2>
 8001fe8:	f7fe ff64 	bl	8000eb4 <HAL_GetTick>
 8001fec:	0002      	movs	r2, r0
 8001fee:	693b      	ldr	r3, [r7, #16]
 8001ff0:	1ad3      	subs	r3, r2, r3
 8001ff2:	2b64      	cmp	r3, #100	; 0x64
 8001ff4:	d901      	bls.n	8001ffa <HAL_RCC_OscConfig+0xf2>
 8001ff6:	2303      	movs	r3, #3
 8001ff8:	e175      	b.n	80022e6 <HAL_RCC_OscConfig+0x3de>
 8001ffa:	4b8f      	ldr	r3, [pc, #572]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8001ffc:	681a      	ldr	r2, [r3, #0]
 8001ffe:	2380      	movs	r3, #128	; 0x80
 8002000:	029b      	lsls	r3, r3, #10
 8002002:	4013      	ands	r3, r2
 8002004:	d1f0      	bne.n	8001fe8 <HAL_RCC_OscConfig+0xe0>
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	681b      	ldr	r3, [r3, #0]
 800200a:	2202      	movs	r2, #2
 800200c:	4013      	ands	r3, r2
 800200e:	d100      	bne.n	8002012 <HAL_RCC_OscConfig+0x10a>
 8002010:	e08c      	b.n	800212c <HAL_RCC_OscConfig+0x224>
 8002012:	4b89      	ldr	r3, [pc, #548]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8002014:	689b      	ldr	r3, [r3, #8]
 8002016:	2238      	movs	r2, #56	; 0x38
 8002018:	4013      	ands	r3, r2
 800201a:	617b      	str	r3, [r7, #20]
 800201c:	697b      	ldr	r3, [r7, #20]
 800201e:	2b00      	cmp	r3, #0
 8002020:	d135      	bne.n	800208e <HAL_RCC_OscConfig+0x186>
 8002022:	4b85      	ldr	r3, [pc, #532]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8002024:	681a      	ldr	r2, [r3, #0]
 8002026:	2380      	movs	r3, #128	; 0x80
 8002028:	00db      	lsls	r3, r3, #3
 800202a:	4013      	ands	r3, r2
 800202c:	d005      	beq.n	800203a <HAL_RCC_OscConfig+0x132>
 800202e:	687b      	ldr	r3, [r7, #4]
 8002030:	68db      	ldr	r3, [r3, #12]
 8002032:	2b00      	cmp	r3, #0
 8002034:	d101      	bne.n	800203a <HAL_RCC_OscConfig+0x132>
 8002036:	2301      	movs	r3, #1
 8002038:	e155      	b.n	80022e6 <HAL_RCC_OscConfig+0x3de>
 800203a:	4b7f      	ldr	r3, [pc, #508]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 800203c:	685b      	ldr	r3, [r3, #4]
 800203e:	4a81      	ldr	r2, [pc, #516]	; (8002244 <HAL_RCC_OscConfig+0x33c>)
 8002040:	4013      	ands	r3, r2
 8002042:	0019      	movs	r1, r3
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	695b      	ldr	r3, [r3, #20]
 8002048:	021a      	lsls	r2, r3, #8
 800204a:	4b7b      	ldr	r3, [pc, #492]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 800204c:	430a      	orrs	r2, r1
 800204e:	605a      	str	r2, [r3, #4]
 8002050:	697b      	ldr	r3, [r7, #20]
 8002052:	2b00      	cmp	r3, #0
 8002054:	d112      	bne.n	800207c <HAL_RCC_OscConfig+0x174>
 8002056:	4b78      	ldr	r3, [pc, #480]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8002058:	681b      	ldr	r3, [r3, #0]
 800205a:	4a7b      	ldr	r2, [pc, #492]	; (8002248 <HAL_RCC_OscConfig+0x340>)
 800205c:	4013      	ands	r3, r2
 800205e:	0019      	movs	r1, r3
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	691a      	ldr	r2, [r3, #16]
 8002064:	4b74      	ldr	r3, [pc, #464]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8002066:	430a      	orrs	r2, r1
 8002068:	601a      	str	r2, [r3, #0]
 800206a:	4b73      	ldr	r3, [pc, #460]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 800206c:	681b      	ldr	r3, [r3, #0]
 800206e:	0adb      	lsrs	r3, r3, #11
 8002070:	2207      	movs	r2, #7
 8002072:	4013      	ands	r3, r2
 8002074:	4a75      	ldr	r2, [pc, #468]	; (800224c <HAL_RCC_OscConfig+0x344>)
 8002076:	40da      	lsrs	r2, r3
 8002078:	4b75      	ldr	r3, [pc, #468]	; (8002250 <HAL_RCC_OscConfig+0x348>)
 800207a:	601a      	str	r2, [r3, #0]
 800207c:	4b75      	ldr	r3, [pc, #468]	; (8002254 <HAL_RCC_OscConfig+0x34c>)
 800207e:	681b      	ldr	r3, [r3, #0]
 8002080:	0018      	movs	r0, r3
 8002082:	f7fe febd 	bl	8000e00 <HAL_InitTick>
 8002086:	1e03      	subs	r3, r0, #0
 8002088:	d050      	beq.n	800212c <HAL_RCC_OscConfig+0x224>
 800208a:	2301      	movs	r3, #1
 800208c:	e12b      	b.n	80022e6 <HAL_RCC_OscConfig+0x3de>
 800208e:	687b      	ldr	r3, [r7, #4]
 8002090:	68db      	ldr	r3, [r3, #12]
 8002092:	2b00      	cmp	r3, #0
 8002094:	d030      	beq.n	80020f8 <HAL_RCC_OscConfig+0x1f0>
 8002096:	4b68      	ldr	r3, [pc, #416]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8002098:	681b      	ldr	r3, [r3, #0]
 800209a:	4a6b      	ldr	r2, [pc, #428]	; (8002248 <HAL_RCC_OscConfig+0x340>)
 800209c:	4013      	ands	r3, r2
 800209e:	0019      	movs	r1, r3
 80020a0:	687b      	ldr	r3, [r7, #4]
 80020a2:	691a      	ldr	r2, [r3, #16]
 80020a4:	4b64      	ldr	r3, [pc, #400]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 80020a6:	430a      	orrs	r2, r1
 80020a8:	601a      	str	r2, [r3, #0]
 80020aa:	4b63      	ldr	r3, [pc, #396]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 80020ac:	681a      	ldr	r2, [r3, #0]
 80020ae:	4b62      	ldr	r3, [pc, #392]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 80020b0:	2180      	movs	r1, #128	; 0x80
 80020b2:	0049      	lsls	r1, r1, #1
 80020b4:	430a      	orrs	r2, r1
 80020b6:	601a      	str	r2, [r3, #0]
 80020b8:	f7fe fefc 	bl	8000eb4 <HAL_GetTick>
 80020bc:	0003      	movs	r3, r0
 80020be:	613b      	str	r3, [r7, #16]
 80020c0:	e008      	b.n	80020d4 <HAL_RCC_OscConfig+0x1cc>
 80020c2:	f7fe fef7 	bl	8000eb4 <HAL_GetTick>
 80020c6:	0002      	movs	r2, r0
 80020c8:	693b      	ldr	r3, [r7, #16]
 80020ca:	1ad3      	subs	r3, r2, r3
 80020cc:	2b02      	cmp	r3, #2
 80020ce:	d901      	bls.n	80020d4 <HAL_RCC_OscConfig+0x1cc>
 80020d0:	2303      	movs	r3, #3
 80020d2:	e108      	b.n	80022e6 <HAL_RCC_OscConfig+0x3de>
 80020d4:	4b58      	ldr	r3, [pc, #352]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 80020d6:	681a      	ldr	r2, [r3, #0]
 80020d8:	2380      	movs	r3, #128	; 0x80
 80020da:	00db      	lsls	r3, r3, #3
 80020dc:	4013      	ands	r3, r2
 80020de:	d0f0      	beq.n	80020c2 <HAL_RCC_OscConfig+0x1ba>
 80020e0:	4b55      	ldr	r3, [pc, #340]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 80020e2:	685b      	ldr	r3, [r3, #4]
 80020e4:	4a57      	ldr	r2, [pc, #348]	; (8002244 <HAL_RCC_OscConfig+0x33c>)
 80020e6:	4013      	ands	r3, r2
 80020e8:	0019      	movs	r1, r3
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	695b      	ldr	r3, [r3, #20]
 80020ee:	021a      	lsls	r2, r3, #8
 80020f0:	4b51      	ldr	r3, [pc, #324]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 80020f2:	430a      	orrs	r2, r1
 80020f4:	605a      	str	r2, [r3, #4]
 80020f6:	e019      	b.n	800212c <HAL_RCC_OscConfig+0x224>
 80020f8:	4b4f      	ldr	r3, [pc, #316]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 80020fa:	681a      	ldr	r2, [r3, #0]
 80020fc:	4b4e      	ldr	r3, [pc, #312]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 80020fe:	4956      	ldr	r1, [pc, #344]	; (8002258 <HAL_RCC_OscConfig+0x350>)
 8002100:	400a      	ands	r2, r1
 8002102:	601a      	str	r2, [r3, #0]
 8002104:	f7fe fed6 	bl	8000eb4 <HAL_GetTick>
 8002108:	0003      	movs	r3, r0
 800210a:	613b      	str	r3, [r7, #16]
 800210c:	e008      	b.n	8002120 <HAL_RCC_OscConfig+0x218>
 800210e:	f7fe fed1 	bl	8000eb4 <HAL_GetTick>
 8002112:	0002      	movs	r2, r0
 8002114:	693b      	ldr	r3, [r7, #16]
 8002116:	1ad3      	subs	r3, r2, r3
 8002118:	2b02      	cmp	r3, #2
 800211a:	d901      	bls.n	8002120 <HAL_RCC_OscConfig+0x218>
 800211c:	2303      	movs	r3, #3
 800211e:	e0e2      	b.n	80022e6 <HAL_RCC_OscConfig+0x3de>
 8002120:	4b45      	ldr	r3, [pc, #276]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8002122:	681a      	ldr	r2, [r3, #0]
 8002124:	2380      	movs	r3, #128	; 0x80
 8002126:	00db      	lsls	r3, r3, #3
 8002128:	4013      	ands	r3, r2
 800212a:	d1f0      	bne.n	800210e <HAL_RCC_OscConfig+0x206>
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	681b      	ldr	r3, [r3, #0]
 8002130:	2208      	movs	r2, #8
 8002132:	4013      	ands	r3, r2
 8002134:	d047      	beq.n	80021c6 <HAL_RCC_OscConfig+0x2be>
 8002136:	4b40      	ldr	r3, [pc, #256]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8002138:	689b      	ldr	r3, [r3, #8]
 800213a:	2238      	movs	r2, #56	; 0x38
 800213c:	4013      	ands	r3, r2
 800213e:	2b18      	cmp	r3, #24
 8002140:	d10a      	bne.n	8002158 <HAL_RCC_OscConfig+0x250>
 8002142:	4b3d      	ldr	r3, [pc, #244]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8002144:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002146:	2202      	movs	r2, #2
 8002148:	4013      	ands	r3, r2
 800214a:	d03c      	beq.n	80021c6 <HAL_RCC_OscConfig+0x2be>
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	699b      	ldr	r3, [r3, #24]
 8002150:	2b00      	cmp	r3, #0
 8002152:	d138      	bne.n	80021c6 <HAL_RCC_OscConfig+0x2be>
 8002154:	2301      	movs	r3, #1
 8002156:	e0c6      	b.n	80022e6 <HAL_RCC_OscConfig+0x3de>
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	699b      	ldr	r3, [r3, #24]
 800215c:	2b00      	cmp	r3, #0
 800215e:	d019      	beq.n	8002194 <HAL_RCC_OscConfig+0x28c>
 8002160:	4b35      	ldr	r3, [pc, #212]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8002162:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002164:	4b34      	ldr	r3, [pc, #208]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8002166:	2101      	movs	r1, #1
 8002168:	430a      	orrs	r2, r1
 800216a:	661a      	str	r2, [r3, #96]	; 0x60
 800216c:	f7fe fea2 	bl	8000eb4 <HAL_GetTick>
 8002170:	0003      	movs	r3, r0
 8002172:	613b      	str	r3, [r7, #16]
 8002174:	e008      	b.n	8002188 <HAL_RCC_OscConfig+0x280>
 8002176:	f7fe fe9d 	bl	8000eb4 <HAL_GetTick>
 800217a:	0002      	movs	r2, r0
 800217c:	693b      	ldr	r3, [r7, #16]
 800217e:	1ad3      	subs	r3, r2, r3
 8002180:	2b02      	cmp	r3, #2
 8002182:	d901      	bls.n	8002188 <HAL_RCC_OscConfig+0x280>
 8002184:	2303      	movs	r3, #3
 8002186:	e0ae      	b.n	80022e6 <HAL_RCC_OscConfig+0x3de>
 8002188:	4b2b      	ldr	r3, [pc, #172]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 800218a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800218c:	2202      	movs	r2, #2
 800218e:	4013      	ands	r3, r2
 8002190:	d0f1      	beq.n	8002176 <HAL_RCC_OscConfig+0x26e>
 8002192:	e018      	b.n	80021c6 <HAL_RCC_OscConfig+0x2be>
 8002194:	4b28      	ldr	r3, [pc, #160]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8002196:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002198:	4b27      	ldr	r3, [pc, #156]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 800219a:	2101      	movs	r1, #1
 800219c:	438a      	bics	r2, r1
 800219e:	661a      	str	r2, [r3, #96]	; 0x60
 80021a0:	f7fe fe88 	bl	8000eb4 <HAL_GetTick>
 80021a4:	0003      	movs	r3, r0
 80021a6:	613b      	str	r3, [r7, #16]
 80021a8:	e008      	b.n	80021bc <HAL_RCC_OscConfig+0x2b4>
 80021aa:	f7fe fe83 	bl	8000eb4 <HAL_GetTick>
 80021ae:	0002      	movs	r2, r0
 80021b0:	693b      	ldr	r3, [r7, #16]
 80021b2:	1ad3      	subs	r3, r2, r3
 80021b4:	2b02      	cmp	r3, #2
 80021b6:	d901      	bls.n	80021bc <HAL_RCC_OscConfig+0x2b4>
 80021b8:	2303      	movs	r3, #3
 80021ba:	e094      	b.n	80022e6 <HAL_RCC_OscConfig+0x3de>
 80021bc:	4b1e      	ldr	r3, [pc, #120]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 80021be:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80021c0:	2202      	movs	r2, #2
 80021c2:	4013      	ands	r3, r2
 80021c4:	d1f1      	bne.n	80021aa <HAL_RCC_OscConfig+0x2a2>
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	681b      	ldr	r3, [r3, #0]
 80021ca:	2204      	movs	r2, #4
 80021cc:	4013      	ands	r3, r2
 80021ce:	d100      	bne.n	80021d2 <HAL_RCC_OscConfig+0x2ca>
 80021d0:	e088      	b.n	80022e4 <HAL_RCC_OscConfig+0x3dc>
 80021d2:	230f      	movs	r3, #15
 80021d4:	18fb      	adds	r3, r7, r3
 80021d6:	2200      	movs	r2, #0
 80021d8:	701a      	strb	r2, [r3, #0]
 80021da:	4b17      	ldr	r3, [pc, #92]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 80021dc:	689b      	ldr	r3, [r3, #8]
 80021de:	2238      	movs	r2, #56	; 0x38
 80021e0:	4013      	ands	r3, r2
 80021e2:	2b20      	cmp	r3, #32
 80021e4:	d10c      	bne.n	8002200 <HAL_RCC_OscConfig+0x2f8>
 80021e6:	4b14      	ldr	r3, [pc, #80]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 80021e8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80021ea:	2202      	movs	r2, #2
 80021ec:	4013      	ands	r3, r2
 80021ee:	d100      	bne.n	80021f2 <HAL_RCC_OscConfig+0x2ea>
 80021f0:	e078      	b.n	80022e4 <HAL_RCC_OscConfig+0x3dc>
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	689b      	ldr	r3, [r3, #8]
 80021f6:	2b00      	cmp	r3, #0
 80021f8:	d000      	beq.n	80021fc <HAL_RCC_OscConfig+0x2f4>
 80021fa:	e073      	b.n	80022e4 <HAL_RCC_OscConfig+0x3dc>
 80021fc:	2301      	movs	r3, #1
 80021fe:	e072      	b.n	80022e6 <HAL_RCC_OscConfig+0x3de>
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	689b      	ldr	r3, [r3, #8]
 8002204:	2b01      	cmp	r3, #1
 8002206:	d106      	bne.n	8002216 <HAL_RCC_OscConfig+0x30e>
 8002208:	4b0b      	ldr	r3, [pc, #44]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 800220a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800220c:	4b0a      	ldr	r3, [pc, #40]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 800220e:	2101      	movs	r1, #1
 8002210:	430a      	orrs	r2, r1
 8002212:	65da      	str	r2, [r3, #92]	; 0x5c
 8002214:	e02e      	b.n	8002274 <HAL_RCC_OscConfig+0x36c>
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	689b      	ldr	r3, [r3, #8]
 800221a:	2b05      	cmp	r3, #5
 800221c:	d11e      	bne.n	800225c <HAL_RCC_OscConfig+0x354>
 800221e:	4b06      	ldr	r3, [pc, #24]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8002220:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8002222:	4b05      	ldr	r3, [pc, #20]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8002224:	2104      	movs	r1, #4
 8002226:	430a      	orrs	r2, r1
 8002228:	65da      	str	r2, [r3, #92]	; 0x5c
 800222a:	4b03      	ldr	r3, [pc, #12]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 800222c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800222e:	4b02      	ldr	r3, [pc, #8]	; (8002238 <HAL_RCC_OscConfig+0x330>)
 8002230:	2101      	movs	r1, #1
 8002232:	430a      	orrs	r2, r1
 8002234:	65da      	str	r2, [r3, #92]	; 0x5c
 8002236:	e01d      	b.n	8002274 <HAL_RCC_OscConfig+0x36c>
 8002238:	40021000 	.word	0x40021000
 800223c:	fffeffff 	.word	0xfffeffff
 8002240:	fffbffff 	.word	0xfffbffff
 8002244:	ffff80ff 	.word	0xffff80ff
 8002248:	ffffc7ff 	.word	0xffffc7ff
 800224c:	02dc6c00 	.word	0x02dc6c00
 8002250:	2000001c 	.word	0x2000001c
 8002254:	20000020 	.word	0x20000020
 8002258:	fffffeff 	.word	0xfffffeff
 800225c:	4b24      	ldr	r3, [pc, #144]	; (80022f0 <HAL_RCC_OscConfig+0x3e8>)
 800225e:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8002260:	4b23      	ldr	r3, [pc, #140]	; (80022f0 <HAL_RCC_OscConfig+0x3e8>)
 8002262:	2101      	movs	r1, #1
 8002264:	438a      	bics	r2, r1
 8002266:	65da      	str	r2, [r3, #92]	; 0x5c
 8002268:	4b21      	ldr	r3, [pc, #132]	; (80022f0 <HAL_RCC_OscConfig+0x3e8>)
 800226a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800226c:	4b20      	ldr	r3, [pc, #128]	; (80022f0 <HAL_RCC_OscConfig+0x3e8>)
 800226e:	2104      	movs	r1, #4
 8002270:	438a      	bics	r2, r1
 8002272:	65da      	str	r2, [r3, #92]	; 0x5c
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	689b      	ldr	r3, [r3, #8]
 8002278:	2b00      	cmp	r3, #0
 800227a:	d014      	beq.n	80022a6 <HAL_RCC_OscConfig+0x39e>
 800227c:	f7fe fe1a 	bl	8000eb4 <HAL_GetTick>
 8002280:	0003      	movs	r3, r0
 8002282:	613b      	str	r3, [r7, #16]
 8002284:	e009      	b.n	800229a <HAL_RCC_OscConfig+0x392>
 8002286:	f7fe fe15 	bl	8000eb4 <HAL_GetTick>
 800228a:	0002      	movs	r2, r0
 800228c:	693b      	ldr	r3, [r7, #16]
 800228e:	1ad3      	subs	r3, r2, r3
 8002290:	4a18      	ldr	r2, [pc, #96]	; (80022f4 <HAL_RCC_OscConfig+0x3ec>)
 8002292:	4293      	cmp	r3, r2
 8002294:	d901      	bls.n	800229a <HAL_RCC_OscConfig+0x392>
 8002296:	2303      	movs	r3, #3
 8002298:	e025      	b.n	80022e6 <HAL_RCC_OscConfig+0x3de>
 800229a:	4b15      	ldr	r3, [pc, #84]	; (80022f0 <HAL_RCC_OscConfig+0x3e8>)
 800229c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800229e:	2202      	movs	r2, #2
 80022a0:	4013      	ands	r3, r2
 80022a2:	d0f0      	beq.n	8002286 <HAL_RCC_OscConfig+0x37e>
 80022a4:	e013      	b.n	80022ce <HAL_RCC_OscConfig+0x3c6>
 80022a6:	f7fe fe05 	bl	8000eb4 <HAL_GetTick>
 80022aa:	0003      	movs	r3, r0
 80022ac:	613b      	str	r3, [r7, #16]
 80022ae:	e009      	b.n	80022c4 <HAL_RCC_OscConfig+0x3bc>
 80022b0:	f7fe fe00 	bl	8000eb4 <HAL_GetTick>
 80022b4:	0002      	movs	r2, r0
 80022b6:	693b      	ldr	r3, [r7, #16]
 80022b8:	1ad3      	subs	r3, r2, r3
 80022ba:	4a0e      	ldr	r2, [pc, #56]	; (80022f4 <HAL_RCC_OscConfig+0x3ec>)
 80022bc:	4293      	cmp	r3, r2
 80022be:	d901      	bls.n	80022c4 <HAL_RCC_OscConfig+0x3bc>
 80022c0:	2303      	movs	r3, #3
 80022c2:	e010      	b.n	80022e6 <HAL_RCC_OscConfig+0x3de>
 80022c4:	4b0a      	ldr	r3, [pc, #40]	; (80022f0 <HAL_RCC_OscConfig+0x3e8>)
 80022c6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80022c8:	2202      	movs	r2, #2
 80022ca:	4013      	ands	r3, r2
 80022cc:	d1f0      	bne.n	80022b0 <HAL_RCC_OscConfig+0x3a8>
 80022ce:	230f      	movs	r3, #15
 80022d0:	18fb      	adds	r3, r7, r3
 80022d2:	781b      	ldrb	r3, [r3, #0]
 80022d4:	2b01      	cmp	r3, #1
 80022d6:	d105      	bne.n	80022e4 <HAL_RCC_OscConfig+0x3dc>
 80022d8:	4b05      	ldr	r3, [pc, #20]	; (80022f0 <HAL_RCC_OscConfig+0x3e8>)
 80022da:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80022dc:	4b04      	ldr	r3, [pc, #16]	; (80022f0 <HAL_RCC_OscConfig+0x3e8>)
 80022de:	4906      	ldr	r1, [pc, #24]	; (80022f8 <HAL_RCC_OscConfig+0x3f0>)
 80022e0:	400a      	ands	r2, r1
 80022e2:	63da      	str	r2, [r3, #60]	; 0x3c
 80022e4:	2300      	movs	r3, #0
 80022e6:	0018      	movs	r0, r3
 80022e8:	46bd      	mov	sp, r7
 80022ea:	b006      	add	sp, #24
 80022ec:	bd80      	pop	{r7, pc}
 80022ee:	46c0      	nop			; (mov r8, r8)
 80022f0:	40021000 	.word	0x40021000
 80022f4:	00001388 	.word	0x00001388
 80022f8:	efffffff 	.word	0xefffffff

080022fc <HAL_RCC_ClockConfig>:
 80022fc:	b580      	push	{r7, lr}
 80022fe:	b084      	sub	sp, #16
 8002300:	af00      	add	r7, sp, #0
 8002302:	6078      	str	r0, [r7, #4]
 8002304:	6039      	str	r1, [r7, #0]
 8002306:	687b      	ldr	r3, [r7, #4]
 8002308:	2b00      	cmp	r3, #0
 800230a:	d101      	bne.n	8002310 <HAL_RCC_ClockConfig+0x14>
 800230c:	2301      	movs	r3, #1
 800230e:	e0e9      	b.n	80024e4 <HAL_RCC_ClockConfig+0x1e8>
 8002310:	4b76      	ldr	r3, [pc, #472]	; (80024ec <HAL_RCC_ClockConfig+0x1f0>)
 8002312:	681b      	ldr	r3, [r3, #0]
 8002314:	2207      	movs	r2, #7
 8002316:	4013      	ands	r3, r2
 8002318:	683a      	ldr	r2, [r7, #0]
 800231a:	429a      	cmp	r2, r3
 800231c:	d91e      	bls.n	800235c <HAL_RCC_ClockConfig+0x60>
 800231e:	4b73      	ldr	r3, [pc, #460]	; (80024ec <HAL_RCC_ClockConfig+0x1f0>)
 8002320:	681b      	ldr	r3, [r3, #0]
 8002322:	2207      	movs	r2, #7
 8002324:	4393      	bics	r3, r2
 8002326:	0019      	movs	r1, r3
 8002328:	4b70      	ldr	r3, [pc, #448]	; (80024ec <HAL_RCC_ClockConfig+0x1f0>)
 800232a:	683a      	ldr	r2, [r7, #0]
 800232c:	430a      	orrs	r2, r1
 800232e:	601a      	str	r2, [r3, #0]
 8002330:	f7fe fdc0 	bl	8000eb4 <HAL_GetTick>
 8002334:	0003      	movs	r3, r0
 8002336:	60fb      	str	r3, [r7, #12]
 8002338:	e009      	b.n	800234e <HAL_RCC_ClockConfig+0x52>
 800233a:	f7fe fdbb 	bl	8000eb4 <HAL_GetTick>
 800233e:	0002      	movs	r2, r0
 8002340:	68fb      	ldr	r3, [r7, #12]
 8002342:	1ad3      	subs	r3, r2, r3
 8002344:	4a6a      	ldr	r2, [pc, #424]	; (80024f0 <HAL_RCC_ClockConfig+0x1f4>)
 8002346:	4293      	cmp	r3, r2
 8002348:	d901      	bls.n	800234e <HAL_RCC_ClockConfig+0x52>
 800234a:	2303      	movs	r3, #3
 800234c:	e0ca      	b.n	80024e4 <HAL_RCC_ClockConfig+0x1e8>
 800234e:	4b67      	ldr	r3, [pc, #412]	; (80024ec <HAL_RCC_ClockConfig+0x1f0>)
 8002350:	681b      	ldr	r3, [r3, #0]
 8002352:	2207      	movs	r2, #7
 8002354:	4013      	ands	r3, r2
 8002356:	683a      	ldr	r2, [r7, #0]
 8002358:	429a      	cmp	r2, r3
 800235a:	d1ee      	bne.n	800233a <HAL_RCC_ClockConfig+0x3e>
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	681b      	ldr	r3, [r3, #0]
 8002360:	2202      	movs	r2, #2
 8002362:	4013      	ands	r3, r2
 8002364:	d017      	beq.n	8002396 <HAL_RCC_ClockConfig+0x9a>
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	681b      	ldr	r3, [r3, #0]
 800236a:	2204      	movs	r2, #4
 800236c:	4013      	ands	r3, r2
 800236e:	d008      	beq.n	8002382 <HAL_RCC_ClockConfig+0x86>
 8002370:	4b60      	ldr	r3, [pc, #384]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 8002372:	689b      	ldr	r3, [r3, #8]
 8002374:	4a60      	ldr	r2, [pc, #384]	; (80024f8 <HAL_RCC_ClockConfig+0x1fc>)
 8002376:	401a      	ands	r2, r3
 8002378:	4b5e      	ldr	r3, [pc, #376]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 800237a:	21b0      	movs	r1, #176	; 0xb0
 800237c:	0109      	lsls	r1, r1, #4
 800237e:	430a      	orrs	r2, r1
 8002380:	609a      	str	r2, [r3, #8]
 8002382:	4b5c      	ldr	r3, [pc, #368]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 8002384:	689b      	ldr	r3, [r3, #8]
 8002386:	4a5d      	ldr	r2, [pc, #372]	; (80024fc <HAL_RCC_ClockConfig+0x200>)
 8002388:	4013      	ands	r3, r2
 800238a:	0019      	movs	r1, r3
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	68da      	ldr	r2, [r3, #12]
 8002390:	4b58      	ldr	r3, [pc, #352]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 8002392:	430a      	orrs	r2, r1
 8002394:	609a      	str	r2, [r3, #8]
 8002396:	687b      	ldr	r3, [r7, #4]
 8002398:	681b      	ldr	r3, [r3, #0]
 800239a:	2201      	movs	r2, #1
 800239c:	4013      	ands	r3, r2
 800239e:	d055      	beq.n	800244c <HAL_RCC_ClockConfig+0x150>
 80023a0:	4b54      	ldr	r3, [pc, #336]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	221c      	movs	r2, #28
 80023a6:	4393      	bics	r3, r2
 80023a8:	0019      	movs	r1, r3
 80023aa:	687b      	ldr	r3, [r7, #4]
 80023ac:	689a      	ldr	r2, [r3, #8]
 80023ae:	4b51      	ldr	r3, [pc, #324]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 80023b0:	430a      	orrs	r2, r1
 80023b2:	601a      	str	r2, [r3, #0]
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	685b      	ldr	r3, [r3, #4]
 80023b8:	2b01      	cmp	r3, #1
 80023ba:	d107      	bne.n	80023cc <HAL_RCC_ClockConfig+0xd0>
 80023bc:	4b4d      	ldr	r3, [pc, #308]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 80023be:	681a      	ldr	r2, [r3, #0]
 80023c0:	2380      	movs	r3, #128	; 0x80
 80023c2:	029b      	lsls	r3, r3, #10
 80023c4:	4013      	ands	r3, r2
 80023c6:	d11f      	bne.n	8002408 <HAL_RCC_ClockConfig+0x10c>
 80023c8:	2301      	movs	r3, #1
 80023ca:	e08b      	b.n	80024e4 <HAL_RCC_ClockConfig+0x1e8>
 80023cc:	687b      	ldr	r3, [r7, #4]
 80023ce:	685b      	ldr	r3, [r3, #4]
 80023d0:	2b00      	cmp	r3, #0
 80023d2:	d107      	bne.n	80023e4 <HAL_RCC_ClockConfig+0xe8>
 80023d4:	4b47      	ldr	r3, [pc, #284]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 80023d6:	681a      	ldr	r2, [r3, #0]
 80023d8:	2380      	movs	r3, #128	; 0x80
 80023da:	00db      	lsls	r3, r3, #3
 80023dc:	4013      	ands	r3, r2
 80023de:	d113      	bne.n	8002408 <HAL_RCC_ClockConfig+0x10c>
 80023e0:	2301      	movs	r3, #1
 80023e2:	e07f      	b.n	80024e4 <HAL_RCC_ClockConfig+0x1e8>
 80023e4:	687b      	ldr	r3, [r7, #4]
 80023e6:	685b      	ldr	r3, [r3, #4]
 80023e8:	2b03      	cmp	r3, #3
 80023ea:	d106      	bne.n	80023fa <HAL_RCC_ClockConfig+0xfe>
 80023ec:	4b41      	ldr	r3, [pc, #260]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 80023ee:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80023f0:	2202      	movs	r2, #2
 80023f2:	4013      	ands	r3, r2
 80023f4:	d108      	bne.n	8002408 <HAL_RCC_ClockConfig+0x10c>
 80023f6:	2301      	movs	r3, #1
 80023f8:	e074      	b.n	80024e4 <HAL_RCC_ClockConfig+0x1e8>
 80023fa:	4b3e      	ldr	r3, [pc, #248]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 80023fc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80023fe:	2202      	movs	r2, #2
 8002400:	4013      	ands	r3, r2
 8002402:	d101      	bne.n	8002408 <HAL_RCC_ClockConfig+0x10c>
 8002404:	2301      	movs	r3, #1
 8002406:	e06d      	b.n	80024e4 <HAL_RCC_ClockConfig+0x1e8>
 8002408:	4b3a      	ldr	r3, [pc, #232]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 800240a:	689b      	ldr	r3, [r3, #8]
 800240c:	2207      	movs	r2, #7
 800240e:	4393      	bics	r3, r2
 8002410:	0019      	movs	r1, r3
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	685a      	ldr	r2, [r3, #4]
 8002416:	4b37      	ldr	r3, [pc, #220]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 8002418:	430a      	orrs	r2, r1
 800241a:	609a      	str	r2, [r3, #8]
 800241c:	f7fe fd4a 	bl	8000eb4 <HAL_GetTick>
 8002420:	0003      	movs	r3, r0
 8002422:	60fb      	str	r3, [r7, #12]
 8002424:	e009      	b.n	800243a <HAL_RCC_ClockConfig+0x13e>
 8002426:	f7fe fd45 	bl	8000eb4 <HAL_GetTick>
 800242a:	0002      	movs	r2, r0
 800242c:	68fb      	ldr	r3, [r7, #12]
 800242e:	1ad3      	subs	r3, r2, r3
 8002430:	4a2f      	ldr	r2, [pc, #188]	; (80024f0 <HAL_RCC_ClockConfig+0x1f4>)
 8002432:	4293      	cmp	r3, r2
 8002434:	d901      	bls.n	800243a <HAL_RCC_ClockConfig+0x13e>
 8002436:	2303      	movs	r3, #3
 8002438:	e054      	b.n	80024e4 <HAL_RCC_ClockConfig+0x1e8>
 800243a:	4b2e      	ldr	r3, [pc, #184]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 800243c:	689b      	ldr	r3, [r3, #8]
 800243e:	2238      	movs	r2, #56	; 0x38
 8002440:	401a      	ands	r2, r3
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	685b      	ldr	r3, [r3, #4]
 8002446:	00db      	lsls	r3, r3, #3
 8002448:	429a      	cmp	r2, r3
 800244a:	d1ec      	bne.n	8002426 <HAL_RCC_ClockConfig+0x12a>
 800244c:	4b27      	ldr	r3, [pc, #156]	; (80024ec <HAL_RCC_ClockConfig+0x1f0>)
 800244e:	681b      	ldr	r3, [r3, #0]
 8002450:	2207      	movs	r2, #7
 8002452:	4013      	ands	r3, r2
 8002454:	683a      	ldr	r2, [r7, #0]
 8002456:	429a      	cmp	r2, r3
 8002458:	d21e      	bcs.n	8002498 <HAL_RCC_ClockConfig+0x19c>
 800245a:	4b24      	ldr	r3, [pc, #144]	; (80024ec <HAL_RCC_ClockConfig+0x1f0>)
 800245c:	681b      	ldr	r3, [r3, #0]
 800245e:	2207      	movs	r2, #7
 8002460:	4393      	bics	r3, r2
 8002462:	0019      	movs	r1, r3
 8002464:	4b21      	ldr	r3, [pc, #132]	; (80024ec <HAL_RCC_ClockConfig+0x1f0>)
 8002466:	683a      	ldr	r2, [r7, #0]
 8002468:	430a      	orrs	r2, r1
 800246a:	601a      	str	r2, [r3, #0]
 800246c:	f7fe fd22 	bl	8000eb4 <HAL_GetTick>
 8002470:	0003      	movs	r3, r0
 8002472:	60fb      	str	r3, [r7, #12]
 8002474:	e009      	b.n	800248a <HAL_RCC_ClockConfig+0x18e>
 8002476:	f7fe fd1d 	bl	8000eb4 <HAL_GetTick>
 800247a:	0002      	movs	r2, r0
 800247c:	68fb      	ldr	r3, [r7, #12]
 800247e:	1ad3      	subs	r3, r2, r3
 8002480:	4a1b      	ldr	r2, [pc, #108]	; (80024f0 <HAL_RCC_ClockConfig+0x1f4>)
 8002482:	4293      	cmp	r3, r2
 8002484:	d901      	bls.n	800248a <HAL_RCC_ClockConfig+0x18e>
 8002486:	2303      	movs	r3, #3
 8002488:	e02c      	b.n	80024e4 <HAL_RCC_ClockConfig+0x1e8>
 800248a:	4b18      	ldr	r3, [pc, #96]	; (80024ec <HAL_RCC_ClockConfig+0x1f0>)
 800248c:	681b      	ldr	r3, [r3, #0]
 800248e:	2207      	movs	r2, #7
 8002490:	4013      	ands	r3, r2
 8002492:	683a      	ldr	r2, [r7, #0]
 8002494:	429a      	cmp	r2, r3
 8002496:	d1ee      	bne.n	8002476 <HAL_RCC_ClockConfig+0x17a>
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	681b      	ldr	r3, [r3, #0]
 800249c:	2204      	movs	r2, #4
 800249e:	4013      	ands	r3, r2
 80024a0:	d009      	beq.n	80024b6 <HAL_RCC_ClockConfig+0x1ba>
 80024a2:	4b14      	ldr	r3, [pc, #80]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 80024a4:	689b      	ldr	r3, [r3, #8]
 80024a6:	4a16      	ldr	r2, [pc, #88]	; (8002500 <HAL_RCC_ClockConfig+0x204>)
 80024a8:	4013      	ands	r3, r2
 80024aa:	0019      	movs	r1, r3
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	691a      	ldr	r2, [r3, #16]
 80024b0:	4b10      	ldr	r3, [pc, #64]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 80024b2:	430a      	orrs	r2, r1
 80024b4:	609a      	str	r2, [r3, #8]
 80024b6:	f000 f82b 	bl	8002510 <HAL_RCC_GetSysClockFreq>
 80024ba:	0001      	movs	r1, r0
 80024bc:	4b0d      	ldr	r3, [pc, #52]	; (80024f4 <HAL_RCC_ClockConfig+0x1f8>)
 80024be:	689b      	ldr	r3, [r3, #8]
 80024c0:	0a1b      	lsrs	r3, r3, #8
 80024c2:	220f      	movs	r2, #15
 80024c4:	401a      	ands	r2, r3
 80024c6:	4b0f      	ldr	r3, [pc, #60]	; (8002504 <HAL_RCC_ClockConfig+0x208>)
 80024c8:	0092      	lsls	r2, r2, #2
 80024ca:	58d3      	ldr	r3, [r2, r3]
 80024cc:	221f      	movs	r2, #31
 80024ce:	4013      	ands	r3, r2
 80024d0:	000a      	movs	r2, r1
 80024d2:	40da      	lsrs	r2, r3
 80024d4:	4b0c      	ldr	r3, [pc, #48]	; (8002508 <HAL_RCC_ClockConfig+0x20c>)
 80024d6:	601a      	str	r2, [r3, #0]
 80024d8:	4b0c      	ldr	r3, [pc, #48]	; (800250c <HAL_RCC_ClockConfig+0x210>)
 80024da:	681b      	ldr	r3, [r3, #0]
 80024dc:	0018      	movs	r0, r3
 80024de:	f7fe fc8f 	bl	8000e00 <HAL_InitTick>
 80024e2:	0003      	movs	r3, r0
 80024e4:	0018      	movs	r0, r3
 80024e6:	46bd      	mov	sp, r7
 80024e8:	b004      	add	sp, #16
 80024ea:	bd80      	pop	{r7, pc}
 80024ec:	40022000 	.word	0x40022000
 80024f0:	00001388 	.word	0x00001388
 80024f4:	40021000 	.word	0x40021000
 80024f8:	ffff84ff 	.word	0xffff84ff
 80024fc:	fffff0ff 	.word	0xfffff0ff
 8002500:	ffff8fff 	.word	0xffff8fff
 8002504:	080027e0 	.word	0x080027e0
 8002508:	2000001c 	.word	0x2000001c
 800250c:	20000020 	.word	0x20000020

08002510 <HAL_RCC_GetSysClockFreq>:
 8002510:	b580      	push	{r7, lr}
 8002512:	b082      	sub	sp, #8
 8002514:	af00      	add	r7, sp, #0
 8002516:	4b1c      	ldr	r3, [pc, #112]	; (8002588 <HAL_RCC_GetSysClockFreq+0x78>)
 8002518:	689b      	ldr	r3, [r3, #8]
 800251a:	2238      	movs	r2, #56	; 0x38
 800251c:	4013      	ands	r3, r2
 800251e:	d10f      	bne.n	8002540 <HAL_RCC_GetSysClockFreq+0x30>
 8002520:	4b19      	ldr	r3, [pc, #100]	; (8002588 <HAL_RCC_GetSysClockFreq+0x78>)
 8002522:	681b      	ldr	r3, [r3, #0]
 8002524:	0adb      	lsrs	r3, r3, #11
 8002526:	2207      	movs	r2, #7
 8002528:	4013      	ands	r3, r2
 800252a:	2201      	movs	r2, #1
 800252c:	409a      	lsls	r2, r3
 800252e:	0013      	movs	r3, r2
 8002530:	603b      	str	r3, [r7, #0]
 8002532:	6839      	ldr	r1, [r7, #0]
 8002534:	4815      	ldr	r0, [pc, #84]	; (800258c <HAL_RCC_GetSysClockFreq+0x7c>)
 8002536:	f7fd fde7 	bl	8000108 <__udivsi3>
 800253a:	0003      	movs	r3, r0
 800253c:	607b      	str	r3, [r7, #4]
 800253e:	e01e      	b.n	800257e <HAL_RCC_GetSysClockFreq+0x6e>
 8002540:	4b11      	ldr	r3, [pc, #68]	; (8002588 <HAL_RCC_GetSysClockFreq+0x78>)
 8002542:	689b      	ldr	r3, [r3, #8]
 8002544:	2238      	movs	r2, #56	; 0x38
 8002546:	4013      	ands	r3, r2
 8002548:	2b08      	cmp	r3, #8
 800254a:	d102      	bne.n	8002552 <HAL_RCC_GetSysClockFreq+0x42>
 800254c:	4b10      	ldr	r3, [pc, #64]	; (8002590 <HAL_RCC_GetSysClockFreq+0x80>)
 800254e:	607b      	str	r3, [r7, #4]
 8002550:	e015      	b.n	800257e <HAL_RCC_GetSysClockFreq+0x6e>
 8002552:	4b0d      	ldr	r3, [pc, #52]	; (8002588 <HAL_RCC_GetSysClockFreq+0x78>)
 8002554:	689b      	ldr	r3, [r3, #8]
 8002556:	2238      	movs	r2, #56	; 0x38
 8002558:	4013      	ands	r3, r2
 800255a:	2b20      	cmp	r3, #32
 800255c:	d103      	bne.n	8002566 <HAL_RCC_GetSysClockFreq+0x56>
 800255e:	2380      	movs	r3, #128	; 0x80
 8002560:	021b      	lsls	r3, r3, #8
 8002562:	607b      	str	r3, [r7, #4]
 8002564:	e00b      	b.n	800257e <HAL_RCC_GetSysClockFreq+0x6e>
 8002566:	4b08      	ldr	r3, [pc, #32]	; (8002588 <HAL_RCC_GetSysClockFreq+0x78>)
 8002568:	689b      	ldr	r3, [r3, #8]
 800256a:	2238      	movs	r2, #56	; 0x38
 800256c:	4013      	ands	r3, r2
 800256e:	2b18      	cmp	r3, #24
 8002570:	d103      	bne.n	800257a <HAL_RCC_GetSysClockFreq+0x6a>
 8002572:	23fa      	movs	r3, #250	; 0xfa
 8002574:	01db      	lsls	r3, r3, #7
 8002576:	607b      	str	r3, [r7, #4]
 8002578:	e001      	b.n	800257e <HAL_RCC_GetSysClockFreq+0x6e>
 800257a:	2300      	movs	r3, #0
 800257c:	607b      	str	r3, [r7, #4]
 800257e:	687b      	ldr	r3, [r7, #4]
 8002580:	0018      	movs	r0, r3
 8002582:	46bd      	mov	sp, r7
 8002584:	b002      	add	sp, #8
 8002586:	bd80      	pop	{r7, pc}
 8002588:	40021000 	.word	0x40021000
 800258c:	02dc6c00 	.word	0x02dc6c00
 8002590:	007a1200 	.word	0x007a1200

08002594 <HAL_RCCEx_PeriphCLKConfig>:
 8002594:	b580      	push	{r7, lr}
 8002596:	b086      	sub	sp, #24
 8002598:	af00      	add	r7, sp, #0
 800259a:	6078      	str	r0, [r7, #4]
 800259c:	2313      	movs	r3, #19
 800259e:	18fb      	adds	r3, r7, r3
 80025a0:	2200      	movs	r2, #0
 80025a2:	701a      	strb	r2, [r3, #0]
 80025a4:	2312      	movs	r3, #18
 80025a6:	18fb      	adds	r3, r7, r3
 80025a8:	2200      	movs	r2, #0
 80025aa:	701a      	strb	r2, [r3, #0]
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	681a      	ldr	r2, [r3, #0]
 80025b0:	2380      	movs	r3, #128	; 0x80
 80025b2:	029b      	lsls	r3, r3, #10
 80025b4:	4013      	ands	r3, r2
 80025b6:	d100      	bne.n	80025ba <HAL_RCCEx_PeriphCLKConfig+0x26>
 80025b8:	e079      	b.n	80026ae <HAL_RCCEx_PeriphCLKConfig+0x11a>
 80025ba:	2011      	movs	r0, #17
 80025bc:	183b      	adds	r3, r7, r0
 80025be:	2200      	movs	r2, #0
 80025c0:	701a      	strb	r2, [r3, #0]
 80025c2:	4b64      	ldr	r3, [pc, #400]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 80025c4:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80025c6:	2380      	movs	r3, #128	; 0x80
 80025c8:	055b      	lsls	r3, r3, #21
 80025ca:	4013      	ands	r3, r2
 80025cc:	d110      	bne.n	80025f0 <HAL_RCCEx_PeriphCLKConfig+0x5c>
 80025ce:	4b61      	ldr	r3, [pc, #388]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 80025d0:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80025d2:	4b60      	ldr	r3, [pc, #384]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 80025d4:	2180      	movs	r1, #128	; 0x80
 80025d6:	0549      	lsls	r1, r1, #21
 80025d8:	430a      	orrs	r2, r1
 80025da:	63da      	str	r2, [r3, #60]	; 0x3c
 80025dc:	4b5d      	ldr	r3, [pc, #372]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 80025de:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80025e0:	2380      	movs	r3, #128	; 0x80
 80025e2:	055b      	lsls	r3, r3, #21
 80025e4:	4013      	ands	r3, r2
 80025e6:	60bb      	str	r3, [r7, #8]
 80025e8:	68bb      	ldr	r3, [r7, #8]
 80025ea:	183b      	adds	r3, r7, r0
 80025ec:	2201      	movs	r2, #1
 80025ee:	701a      	strb	r2, [r3, #0]
 80025f0:	4b58      	ldr	r3, [pc, #352]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 80025f2:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 80025f4:	23c0      	movs	r3, #192	; 0xc0
 80025f6:	009b      	lsls	r3, r3, #2
 80025f8:	4013      	ands	r3, r2
 80025fa:	617b      	str	r3, [r7, #20]
 80025fc:	697b      	ldr	r3, [r7, #20]
 80025fe:	2b00      	cmp	r3, #0
 8002600:	d019      	beq.n	8002636 <HAL_RCCEx_PeriphCLKConfig+0xa2>
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	699b      	ldr	r3, [r3, #24]
 8002606:	697a      	ldr	r2, [r7, #20]
 8002608:	429a      	cmp	r2, r3
 800260a:	d014      	beq.n	8002636 <HAL_RCCEx_PeriphCLKConfig+0xa2>
 800260c:	4b51      	ldr	r3, [pc, #324]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 800260e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002610:	4a51      	ldr	r2, [pc, #324]	; (8002758 <HAL_RCCEx_PeriphCLKConfig+0x1c4>)
 8002612:	4013      	ands	r3, r2
 8002614:	617b      	str	r3, [r7, #20]
 8002616:	4b4f      	ldr	r3, [pc, #316]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8002618:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800261a:	4b4e      	ldr	r3, [pc, #312]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 800261c:	2180      	movs	r1, #128	; 0x80
 800261e:	0249      	lsls	r1, r1, #9
 8002620:	430a      	orrs	r2, r1
 8002622:	65da      	str	r2, [r3, #92]	; 0x5c
 8002624:	4b4b      	ldr	r3, [pc, #300]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8002626:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8002628:	4b4a      	ldr	r3, [pc, #296]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 800262a:	494c      	ldr	r1, [pc, #304]	; (800275c <HAL_RCCEx_PeriphCLKConfig+0x1c8>)
 800262c:	400a      	ands	r2, r1
 800262e:	65da      	str	r2, [r3, #92]	; 0x5c
 8002630:	4b48      	ldr	r3, [pc, #288]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8002632:	697a      	ldr	r2, [r7, #20]
 8002634:	65da      	str	r2, [r3, #92]	; 0x5c
 8002636:	697b      	ldr	r3, [r7, #20]
 8002638:	2201      	movs	r2, #1
 800263a:	4013      	ands	r3, r2
 800263c:	d016      	beq.n	800266c <HAL_RCCEx_PeriphCLKConfig+0xd8>
 800263e:	f7fe fc39 	bl	8000eb4 <HAL_GetTick>
 8002642:	0003      	movs	r3, r0
 8002644:	60fb      	str	r3, [r7, #12]
 8002646:	e00c      	b.n	8002662 <HAL_RCCEx_PeriphCLKConfig+0xce>
 8002648:	f7fe fc34 	bl	8000eb4 <HAL_GetTick>
 800264c:	0002      	movs	r2, r0
 800264e:	68fb      	ldr	r3, [r7, #12]
 8002650:	1ad3      	subs	r3, r2, r3
 8002652:	4a43      	ldr	r2, [pc, #268]	; (8002760 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8002654:	4293      	cmp	r3, r2
 8002656:	d904      	bls.n	8002662 <HAL_RCCEx_PeriphCLKConfig+0xce>
 8002658:	2313      	movs	r3, #19
 800265a:	18fb      	adds	r3, r7, r3
 800265c:	2203      	movs	r2, #3
 800265e:	701a      	strb	r2, [r3, #0]
 8002660:	e004      	b.n	800266c <HAL_RCCEx_PeriphCLKConfig+0xd8>
 8002662:	4b3c      	ldr	r3, [pc, #240]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8002664:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002666:	2202      	movs	r2, #2
 8002668:	4013      	ands	r3, r2
 800266a:	d0ed      	beq.n	8002648 <HAL_RCCEx_PeriphCLKConfig+0xb4>
 800266c:	2313      	movs	r3, #19
 800266e:	18fb      	adds	r3, r7, r3
 8002670:	781b      	ldrb	r3, [r3, #0]
 8002672:	2b00      	cmp	r3, #0
 8002674:	d10a      	bne.n	800268c <HAL_RCCEx_PeriphCLKConfig+0xf8>
 8002676:	4b37      	ldr	r3, [pc, #220]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8002678:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800267a:	4a37      	ldr	r2, [pc, #220]	; (8002758 <HAL_RCCEx_PeriphCLKConfig+0x1c4>)
 800267c:	4013      	ands	r3, r2
 800267e:	0019      	movs	r1, r3
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	699a      	ldr	r2, [r3, #24]
 8002684:	4b33      	ldr	r3, [pc, #204]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8002686:	430a      	orrs	r2, r1
 8002688:	65da      	str	r2, [r3, #92]	; 0x5c
 800268a:	e005      	b.n	8002698 <HAL_RCCEx_PeriphCLKConfig+0x104>
 800268c:	2312      	movs	r3, #18
 800268e:	18fb      	adds	r3, r7, r3
 8002690:	2213      	movs	r2, #19
 8002692:	18ba      	adds	r2, r7, r2
 8002694:	7812      	ldrb	r2, [r2, #0]
 8002696:	701a      	strb	r2, [r3, #0]
 8002698:	2311      	movs	r3, #17
 800269a:	18fb      	adds	r3, r7, r3
 800269c:	781b      	ldrb	r3, [r3, #0]
 800269e:	2b01      	cmp	r3, #1
 80026a0:	d105      	bne.n	80026ae <HAL_RCCEx_PeriphCLKConfig+0x11a>
 80026a2:	4b2c      	ldr	r3, [pc, #176]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 80026a4:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80026a6:	4b2b      	ldr	r3, [pc, #172]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 80026a8:	492e      	ldr	r1, [pc, #184]	; (8002764 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80026aa:	400a      	ands	r2, r1
 80026ac:	63da      	str	r2, [r3, #60]	; 0x3c
 80026ae:	687b      	ldr	r3, [r7, #4]
 80026b0:	681b      	ldr	r3, [r3, #0]
 80026b2:	2201      	movs	r2, #1
 80026b4:	4013      	ands	r3, r2
 80026b6:	d009      	beq.n	80026cc <HAL_RCCEx_PeriphCLKConfig+0x138>
 80026b8:	4b26      	ldr	r3, [pc, #152]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 80026ba:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80026bc:	2203      	movs	r2, #3
 80026be:	4393      	bics	r3, r2
 80026c0:	0019      	movs	r1, r3
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	689a      	ldr	r2, [r3, #8]
 80026c6:	4b23      	ldr	r3, [pc, #140]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 80026c8:	430a      	orrs	r2, r1
 80026ca:	655a      	str	r2, [r3, #84]	; 0x54
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	681b      	ldr	r3, [r3, #0]
 80026d0:	2240      	movs	r2, #64	; 0x40
 80026d2:	4013      	ands	r3, r2
 80026d4:	d009      	beq.n	80026ea <HAL_RCCEx_PeriphCLKConfig+0x156>
 80026d6:	4b1f      	ldr	r3, [pc, #124]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 80026d8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80026da:	4a23      	ldr	r2, [pc, #140]	; (8002768 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80026dc:	4013      	ands	r3, r2
 80026de:	0019      	movs	r1, r3
 80026e0:	687b      	ldr	r3, [r7, #4]
 80026e2:	68da      	ldr	r2, [r3, #12]
 80026e4:	4b1b      	ldr	r3, [pc, #108]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 80026e6:	430a      	orrs	r2, r1
 80026e8:	655a      	str	r2, [r3, #84]	; 0x54
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	681a      	ldr	r2, [r3, #0]
 80026ee:	2380      	movs	r3, #128	; 0x80
 80026f0:	01db      	lsls	r3, r3, #7
 80026f2:	4013      	ands	r3, r2
 80026f4:	d008      	beq.n	8002708 <HAL_RCCEx_PeriphCLKConfig+0x174>
 80026f6:	4b17      	ldr	r3, [pc, #92]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 80026f8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80026fa:	009b      	lsls	r3, r3, #2
 80026fc:	0899      	lsrs	r1, r3, #2
 80026fe:	687b      	ldr	r3, [r7, #4]
 8002700:	695a      	ldr	r2, [r3, #20]
 8002702:	4b14      	ldr	r3, [pc, #80]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8002704:	430a      	orrs	r2, r1
 8002706:	655a      	str	r2, [r3, #84]	; 0x54
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	681a      	ldr	r2, [r3, #0]
 800270c:	2380      	movs	r3, #128	; 0x80
 800270e:	011b      	lsls	r3, r3, #4
 8002710:	4013      	ands	r3, r2
 8002712:	d009      	beq.n	8002728 <HAL_RCCEx_PeriphCLKConfig+0x194>
 8002714:	4b0f      	ldr	r3, [pc, #60]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8002716:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002718:	4a14      	ldr	r2, [pc, #80]	; (800276c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800271a:	4013      	ands	r3, r2
 800271c:	0019      	movs	r1, r3
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	691a      	ldr	r2, [r3, #16]
 8002722:	4b0c      	ldr	r3, [pc, #48]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8002724:	430a      	orrs	r2, r1
 8002726:	655a      	str	r2, [r3, #84]	; 0x54
 8002728:	687b      	ldr	r3, [r7, #4]
 800272a:	681b      	ldr	r3, [r3, #0]
 800272c:	2b00      	cmp	r3, #0
 800272e:	da09      	bge.n	8002744 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
 8002730:	4b08      	ldr	r3, [pc, #32]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8002732:	681b      	ldr	r3, [r3, #0]
 8002734:	22e0      	movs	r2, #224	; 0xe0
 8002736:	4393      	bics	r3, r2
 8002738:	0019      	movs	r1, r3
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	685a      	ldr	r2, [r3, #4]
 800273e:	4b05      	ldr	r3, [pc, #20]	; (8002754 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8002740:	430a      	orrs	r2, r1
 8002742:	601a      	str	r2, [r3, #0]
 8002744:	2312      	movs	r3, #18
 8002746:	18fb      	adds	r3, r7, r3
 8002748:	781b      	ldrb	r3, [r3, #0]
 800274a:	0018      	movs	r0, r3
 800274c:	46bd      	mov	sp, r7
 800274e:	b006      	add	sp, #24
 8002750:	bd80      	pop	{r7, pc}
 8002752:	46c0      	nop			; (mov r8, r8)
 8002754:	40021000 	.word	0x40021000
 8002758:	fffffcff 	.word	0xfffffcff
 800275c:	fffeffff 	.word	0xfffeffff
 8002760:	00001388 	.word	0x00001388
 8002764:	efffffff 	.word	0xefffffff
 8002768:	ffffcfff 	.word	0xffffcfff
 800276c:	ffff3fff 	.word	0xffff3fff

08002770 <__libc_init_array>:
 8002770:	b570      	push	{r4, r5, r6, lr}
 8002772:	2600      	movs	r6, #0
 8002774:	4d0c      	ldr	r5, [pc, #48]	; (80027a8 <__libc_init_array+0x38>)
 8002776:	4c0d      	ldr	r4, [pc, #52]	; (80027ac <__libc_init_array+0x3c>)
 8002778:	1b64      	subs	r4, r4, r5
 800277a:	10a4      	asrs	r4, r4, #2
 800277c:	42a6      	cmp	r6, r4
 800277e:	d109      	bne.n	8002794 <__libc_init_array+0x24>
 8002780:	2600      	movs	r6, #0
 8002782:	f000 f821 	bl	80027c8 <_init>
 8002786:	4d0a      	ldr	r5, [pc, #40]	; (80027b0 <__libc_init_array+0x40>)
 8002788:	4c0a      	ldr	r4, [pc, #40]	; (80027b4 <__libc_init_array+0x44>)
 800278a:	1b64      	subs	r4, r4, r5
 800278c:	10a4      	asrs	r4, r4, #2
 800278e:	42a6      	cmp	r6, r4
 8002790:	d105      	bne.n	800279e <__libc_init_array+0x2e>
 8002792:	bd70      	pop	{r4, r5, r6, pc}
 8002794:	00b3      	lsls	r3, r6, #2
 8002796:	58eb      	ldr	r3, [r5, r3]
 8002798:	4798      	blx	r3
 800279a:	3601      	adds	r6, #1
 800279c:	e7ee      	b.n	800277c <__libc_init_array+0xc>
 800279e:	00b3      	lsls	r3, r6, #2
 80027a0:	58eb      	ldr	r3, [r5, r3]
 80027a2:	4798      	blx	r3
 80027a4:	3601      	adds	r6, #1
 80027a6:	e7f2      	b.n	800278e <__libc_init_array+0x1e>
 80027a8:	08002820 	.word	0x08002820
 80027ac:	08002820 	.word	0x08002820
 80027b0:	08002820 	.word	0x08002820
 80027b4:	08002824 	.word	0x08002824

080027b8 <memset>:
 80027b8:	0003      	movs	r3, r0
 80027ba:	1882      	adds	r2, r0, r2
 80027bc:	4293      	cmp	r3, r2
 80027be:	d100      	bne.n	80027c2 <memset+0xa>
 80027c0:	4770      	bx	lr
 80027c2:	7019      	strb	r1, [r3, #0]
 80027c4:	3301      	adds	r3, #1
 80027c6:	e7f9      	b.n	80027bc <memset+0x4>

080027c8 <_init>:
 80027c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80027ca:	46c0      	nop			; (mov r8, r8)
 80027cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80027ce:	bc08      	pop	{r3}
 80027d0:	469e      	mov	lr, r3
 80027d2:	4770      	bx	lr

080027d4 <_fini>:
 80027d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80027d6:	46c0      	nop			; (mov r8, r8)
 80027d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80027da:	bc08      	pop	{r3}
 80027dc:	469e      	mov	lr, r3
 80027de:	4770      	bx	lr
